Found Detectron ops lib: /usr/local/lib/libcaffe2_detectron_ops_gpu.so
Found Detectron ops lib: /usr/local/lib/libcaffe2_detectron_ops_gpu.so
INFO train_net.py: 104: Called with args:
INFO train_net.py: 105: Namespace(cfg_file='configs/nuclei/rpn_R-50-FPN_1x-nuclei-3.yaml', multi_gpu_testing=False, opts=['OUTPUT_DIR', '/tmp/detectron-rpn-r50-nuclei-3'], skip_test=False)
INFO train_net.py: 111: Training with config:
INFO train_net.py: 112: {'BBOX_XFORM_CLIP': 4.135166556742356,
 'CLUSTER': {'ON_CLUSTER': False},
 'DATA_LOADER': {'NUM_THREADS': 4},
 'DEDUP_BOXES': 0.0625,
 'DOWNLOAD_CACHE': '/tmp/detectron-download-cache',
 'EPS': 1e-14,
 'EXPECTED_RESULTS': [],
 'EXPECTED_RESULTS_ATOL': 0.005,
 'EXPECTED_RESULTS_EMAIL': '',
 'EXPECTED_RESULTS_RTOL': 0.1,
 'FAST_RCNN': {'MLP_HEAD_DIM': 1024,
               'ROI_BOX_HEAD': '',
               'ROI_XFORM_METHOD': 'RoIPoolF',
               'ROI_XFORM_RESOLUTION': 14,
               'ROI_XFORM_SAMPLING_RATIO': 0},
 'FPN': {'COARSEST_STRIDE': 32,
         'DIM': 256,
         'EXTRA_CONV_LEVELS': False,
         'FPN_ON': True,
         'MULTILEVEL_ROIS': False,
         'MULTILEVEL_RPN': True,
         'ROI_CANONICAL_LEVEL': 4,
         'ROI_CANONICAL_SCALE': 224,
         'ROI_MAX_LEVEL': 5,
         'ROI_MIN_LEVEL': 2,
         'RPN_ANCHOR_START_SIZE': 8,
         'RPN_ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_MAX_LEVEL': 6,
         'RPN_MIN_LEVEL': 2,
         'ZERO_INIT_LATERAL': False},
 'KRCNN': {'CONV_HEAD_DIM': 256,
           'CONV_HEAD_KERNEL': 3,
           'CONV_INIT': 'GaussianFill',
           'DECONV_DIM': 256,
           'DECONV_KERNEL': 4,
           'DILATION': 1,
           'HEATMAP_SIZE': -1,
           'INFERENCE_MIN_SIZE': 0,
           'KEYPOINT_CONFIDENCE': 'bbox',
           'LOSS_WEIGHT': 1.0,
           'MIN_KEYPOINT_COUNT_FOR_VALID_MINIBATCH': 20,
           'NMS_OKS': False,
           'NORMALIZE_BY_VISIBLE_KEYPOINTS': True,
           'NUM_KEYPOINTS': -1,
           'NUM_STACKED_CONVS': 8,
           'ROI_KEYPOINTS_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'UP_SCALE': -1,
           'USE_DECONV': False,
           'USE_DECONV_OUTPUT': False},
 'MATLAB': 'matlab',
 'MEMONGER': True,
 'MEMONGER_SHARE_ACTIVATIONS': False,
 'MODEL': {'BBOX_REG_WEIGHTS': (10.0, 10.0, 5.0, 5.0),
           'CLS_AGNOSTIC_BBOX_REG': False,
           'CONV_BODY': 'FPN.add_fpn_ResNet50_conv5_body',
           'EXECUTION_TYPE': 'dag',
           'FASTER_RCNN': False,
           'KEYPOINTS_ON': False,
           'MASK_ON': False,
           'NUM_CLASSES': 2,
           'RPN_ONLY': True,
           'TYPE': 'generalized_rcnn'},
 'MRCNN': {'CLS_SPECIFIC_MASK': True,
           'CONV_INIT': 'GaussianFill',
           'DILATION': 2,
           'DIM_REDUCED': 256,
           'RESOLUTION': 14,
           'ROI_MASK_HEAD': '',
           'ROI_XFORM_METHOD': 'RoIAlign',
           'ROI_XFORM_RESOLUTION': 7,
           'ROI_XFORM_SAMPLING_RATIO': 0,
           'THRESH_BINARIZE': 0.5,
           'UPSAMPLE_RATIO': 1,
           'USE_FC_OUTPUT': False,
           'WEIGHT_LOSS_MASK': 1.0},
 'NUM_GPUS': 1,
 'OUTPUT_DIR': '/tmp/detectron-rpn-r50-nuclei-3',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RESNETS': {'NUM_GROUPS': 1,
             'RES5_DILATION': 1,
             'STRIDE_1X1': True,
             'TRANS_FUNC': 'bottleneck_transformation',
             'WIDTH_PER_GROUP': 64},
 'RETINANET': {'ANCHOR_SCALE': 4,
               'ASPECT_RATIOS': (0.5, 1.0, 2.0),
               'BBOX_REG_BETA': 0.11,
               'BBOX_REG_WEIGHT': 1.0,
               'CLASS_SPECIFIC_BBOX': False,
               'INFERENCE_TH': 0.05,
               'LOSS_ALPHA': 0.25,
               'LOSS_GAMMA': 2.0,
               'NEGATIVE_OVERLAP': 0.4,
               'NUM_CONVS': 4,
               'POSITIVE_OVERLAP': 0.5,
               'PRE_NMS_TOP_N': 1000,
               'PRIOR_PROB': 0.01,
               'RETINANET_ON': False,
               'SCALES_PER_OCTAVE': 3,
               'SHARE_CLS_BBOX_TOWER': False,
               'SOFTMAX': False},
 'RFCN': {'PS_GRID_SIZE': 3},
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/swk/Documents/ML/Detectron',
 'RPN': {'ASPECT_RATIOS': (0.5, 1, 2),
         'RPN_ON': True,
         'SIZES': (64, 128, 256, 512),
         'STRIDE': 16},
 'SOLVER': {'BASE_LR': 0.003,
            'GAMMA': 0.1,
            'LOG_LR_CHANGE_THRESHOLD': 1.1,
            'LRS': [],
            'LR_POLICY': 'steps_with_decay',
            'MAX_ITER': 90000,
            'MOMENTUM': 0.9,
            'SCALE_MOMENTUM': True,
            'SCALE_MOMENTUM_THRESHOLD': 1.1,
            'STEPS': [0, 60000, 80000],
            'STEP_SIZE': 30000,
            'WARM_UP_FACTOR': 0.3333333333333333,
            'WARM_UP_ITERS': 500,
            'WARM_UP_METHOD': u'linear',
            'WEIGHT_DECAY': 0.0001},
 'TEST': {'BBOX_AUG': {'AREA_TH_HI': 32400,
                       'AREA_TH_LO': 2500,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'COORD_HEUR': 'UNION',
                       'ENABLED': False,
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False,
                       'SCORE_HEUR': 'UNION'},
          'BBOX_REG': True,
          'BBOX_VOTE': {'ENABLED': False,
                        'SCORING_METHOD': 'ID',
                        'SCORING_METHOD_BETA': 1.0,
                        'VOTE_TH': 0.8},
          'COMPETITION_MODE': True,
          'DATASET': '',
          'DATASETS': ('dsb_2018_train',),
          'DETECTIONS_PER_IM': 100,
          'FORCE_JSON_DATASET_EVAL': False,
          'KPS_AUG': {'AREA_TH': 32400,
                      'ASPECT_RATIOS': (),
                      'ASPECT_RATIO_H_FLIP': False,
                      'ENABLED': False,
                      'HEUR': 'HM_AVG',
                      'H_FLIP': False,
                      'MAX_SIZE': 4000,
                      'SCALES': (),
                      'SCALE_H_FLIP': False,
                      'SCALE_SIZE_DEP': False},
          'MASK_AUG': {'AREA_TH': 32400,
                       'ASPECT_RATIOS': (),
                       'ASPECT_RATIO_H_FLIP': False,
                       'ENABLED': False,
                       'HEUR': 'SOFT_AVG',
                       'H_FLIP': False,
                       'MAX_SIZE': 4000,
                       'SCALES': (),
                       'SCALE_H_FLIP': False,
                       'SCALE_SIZE_DEP': False},
          'MAX_SIZE': 1333,
          'NMS': 0.3,
          'PRECOMPUTED_PROPOSALS': False,
          'PROPOSAL_FILE': '',
          'PROPOSAL_FILES': (),
          'PROPOSAL_LIMIT': 2000,
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': 1000,
          'SCALES': (400,),
          'SCORE_THRESH': 0.05,
          'SOFT_NMS': {'ENABLED': False, 'METHOD': 'linear', 'SIGMA': 0.5},
          'WEIGHTS': ''},
 'TRAIN': {'ASPECT_GROUPING': True,
           'AUTO_RESUME': True,
           'BATCH_SIZE_PER_IM': 64,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'CROWD_FILTER_THRESH': 0.7,
           'DATASETS': ('dsb_2018_train',),
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'FREEZE_CONV_BODY': False,
           'GT_MIN_AREA': -1,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1333,
           'PROPOSAL_FILES': (),
           'RPN_BATCH_SIZE_PER_IM': 256,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_STRADDLE_THRESH': 0,
           'SCALES': (400,),
           'SNAPSHOT_ITERS': 20000,
           'USE_FLIPPED': True,
           'WEIGHTS': u'/tmp/detectron-download-cache/ImageNetPretrained/MSRA/R-50.pkl'},
 'USE_NCCL': False,
 'VIS': False,
 'VIS_TH': 0.9}
INFO train_net.py: 205: Building model: generalized_rcnn
WARNING cnn.py:  40: [====DEPRECATE WARNING====]: you are creating an object from CNNModelHelper class which will be deprecated soon. Please use ModelHelper object with brew module. For more information, please refer to caffe2.ai and python/brew.py, python/brew_test.py for more information.
WARNING memonger.py:  70: NOTE: Executing memonger to optimize gradient memory
INFO memonger.py: 112: Memonger memory optimization took 0.0163509845734 secs
INFO train_net.py: 253: Loading dataset: ('dsb_2018_train',)
loading annotations into memory...
Done (t=2.09s)
creating index...
index created!
INFO roidb.py:  49: Appending horizontally-flipped training examples...
INFO roidb.py:  51: Loaded dataset: dsb_2018_train
INFO roidb.py: 135: Filtered 0 roidb entries: 1072 -> 1072
INFO roidb.py:  67: Computing bounding-box regression targets...
INFO roidb.py:  69: done
INFO train_net.py: 257: 1072 roidb entries
INFO net.py:  57: Loading weights from: /tmp/detectron-download-cache/ImageNetPretrained/MSRA/R-50.pkl
INFO net.py:  86: fpn_inner_res5_2_sum_w not found
INFO net.py:  86: fpn_inner_res5_2_sum_b not found
INFO net.py:  86: fpn_inner_res4_5_sum_lateral_w not found
INFO net.py:  86: fpn_inner_res4_5_sum_lateral_b not found
INFO net.py:  86: fpn_inner_res3_3_sum_lateral_w not found
INFO net.py:  86: fpn_inner_res3_3_sum_lateral_b not found
INFO net.py:  86: fpn_inner_res2_2_sum_lateral_w not found
INFO net.py:  86: fpn_inner_res2_2_sum_lateral_b not found
INFO net.py:  86: fpn_res5_2_sum_w not found
INFO net.py:  86: fpn_res5_2_sum_b not found
INFO net.py:  86: fpn_res4_5_sum_w not found
INFO net.py:  86: fpn_res4_5_sum_b not found
INFO net.py:  86: fpn_res3_3_sum_w not found
INFO net.py:  86: fpn_res3_3_sum_b not found
INFO net.py:  86: fpn_res2_2_sum_w not found
INFO net.py:  86: fpn_res2_2_sum_b not found
INFO net.py:  86: conv_rpn_fpn2_w not found
INFO net.py:  86: conv_rpn_fpn2_b not found
INFO net.py:  86: rpn_cls_logits_fpn2_w not found
INFO net.py:  86: rpn_cls_logits_fpn2_b not found
INFO net.py:  86: rpn_bbox_pred_fpn2_w not found
INFO net.py:  86: rpn_bbox_pred_fpn2_b not found
INFO train_net.py: 241: Outputs saved to: /tmp/detectron-rpn-r50-nuclei-3/train/dsb_2018_train/generalized_rcnn
INFO loader.py: 227: Pre-filling mini-batch queue...
INFO loader.py: 232:   [0/64]
INFO loader.py: 232:   [0/64]
INFO loader.py: 232:   [1/64]
INFO loader.py: 232:   [2/64]
INFO loader.py: 232:   [2/64]
INFO loader.py: 232:   [1/64]
INFO loader.py: 232:   [2/64]
INFO loader.py: 232:   [3/64]
INFO loader.py: 232:   [2/64]
INFO loader.py: 232:   [2/64]
INFO loader.py: 232:   [3/64]
INFO loader.py: 232:   [3/64]
INFO loader.py: 232:   [2/64]
INFO loader.py: 232:   [4/64]
INFO loader.py: 232:   [5/64]
INFO loader.py: 232:   [5/64]
INFO loader.py: 232:   [6/64]
INFO loader.py: 232:   [5/64]
INFO loader.py: 232:   [5/64]
INFO loader.py: 232:   [5/64]
INFO loader.py: 232:   [6/64]
INFO loader.py: 232:   [8/64]
INFO loader.py: 232:   [9/64]
INFO loader.py: 232:   [10/64]
INFO loader.py: 232:   [12/64]
INFO loader.py: 232:   [12/64]
INFO loader.py: 232:   [15/64]
INFO loader.py: 232:   [16/64]
INFO loader.py: 232:   [19/64]
INFO loader.py: 232:   [19/64]
INFO loader.py: 232:   [20/64]
INFO loader.py: 232:   [22/64]
INFO loader.py: 232:   [23/64]
INFO loader.py: 232:   [25/64]
INFO loader.py: 232:   [26/64]
INFO loader.py: 232:   [28/64]
INFO loader.py: 232:   [29/64]
INFO loader.py: 232:   [30/64]
INFO loader.py: 232:   [30/64]
INFO loader.py: 232:   [33/64]
INFO loader.py: 232:   [33/64]
INFO loader.py: 232:   [34/64]
INFO loader.py: 232:   [35/64]
INFO loader.py: 232:   [37/64]
INFO loader.py: 232:   [38/64]
INFO loader.py: 232:   [38/64]
INFO loader.py: 232:   [41/64]
INFO loader.py: 232:   [41/64]
INFO loader.py: 232:   [44/64]
INFO loader.py: 232:   [44/64]
INFO loader.py: 232:   [44/64]
INFO loader.py: 232:   [46/64]
INFO loader.py: 232:   [48/64]
INFO loader.py: 232:   [49/64]
INFO loader.py: 232:   [50/64]
INFO loader.py: 232:   [52/64]
INFO loader.py: 232:   [52/64]
INFO loader.py: 232:   [54/64]
INFO loader.py: 232:   [55/64]
INFO loader.py: 232:   [56/64]
INFO loader.py: 232:   [59/64]
INFO loader.py: 232:   [59/64]
INFO loader.py: 232:   [61/64]
INFO loader.py: 232:   [61/64]
INFO detector.py: 436: Changing learning rate 0.000000 -> 0.001000 at iter 0
INFO net.py: 210: Printing model: generalized_rcnn
INFO net.py: 240: data                        : (2, 3, 416, 416)     => conv1                       : (2, 64, 208, 208)    ------- (op: Conv)
INFO net.py: 240: conv1                       : (2, 64, 208, 208)    => conv1                       : (2, 64, 208, 208)    ------- (op: AffineChannel)
INFO net.py: 240: conv1                       : (2, 64, 208, 208)    => conv1                       : (2, 64, 208, 208)    ------- (op: Relu)
INFO net.py: 240: conv1                       : (2, 64, 208, 208)    => pool1                       : (2, 64, 104, 104)    ------- (op: MaxPool)
INFO net.py: 240: pool1                       : (2, 64, 104, 104)    => res2_0_branch2a             : (2, 64, 104, 104)    ------- (op: Conv)
INFO net.py: 240: res2_0_branch2a             : (2, 64, 104, 104)    => res2_0_branch2a             : (2, 64, 104, 104)    ------- (op: AffineChannel)
INFO net.py: 240: res2_0_branch2a             : (2, 64, 104, 104)    => res2_0_branch2a             : (2, 64, 104, 104)    ------- (op: Relu)
INFO net.py: 240: res2_0_branch2a             : (2, 64, 104, 104)    => res2_0_branch2b             : (2, 64, 104, 104)    ------- (op: Conv)
INFO net.py: 240: res2_0_branch2b             : (2, 64, 104, 104)    => res2_0_branch2b             : (2, 64, 104, 104)    ------- (op: AffineChannel)
INFO net.py: 240: res2_0_branch2b             : (2, 64, 104, 104)    => res2_0_branch2b             : (2, 64, 104, 104)    ------- (op: Relu)
INFO net.py: 240: res2_0_branch2b             : (2, 64, 104, 104)    => res2_0_branch2c             : (2, 256, 104, 104)   ------- (op: Conv)
INFO net.py: 240: res2_0_branch2c             : (2, 256, 104, 104)   => res2_0_branch2c_bn          : (2, 256, 104, 104)   ------- (op: AffineChannel)
INFO net.py: 240: pool1                       : (2, 64, 104, 104)    => res2_0_branch1              : (2, 256, 104, 104)   ------- (op: Conv)
INFO net.py: 240: res2_0_branch1              : (2, 256, 104, 104)   => res2_0_branch1_bn           : (2, 256, 104, 104)   ------- (op: AffineChannel)
INFO net.py: 240: res2_0_branch2c_bn          : (2, 256, 104, 104)   => res2_0_branch2c_bn          : (2, 256, 104, 104)   ------- (op: Sum)
INFO net.py: 240: res2_0_branch1_bn           : (2, 256, 104, 104)   => res2_0_branch2c_bn          : (2, 256, 104, 104)   ------|
INFO net.py: 240: res2_0_branch2c_bn          : (2, 256, 104, 104)   => res2_0_branch2c_bn          : (2, 256, 104, 104)   ------- (op: Relu)
INFO net.py: 240: res2_0_branch2c_bn          : (2, 256, 104, 104)   => res2_1_branch2a             : (2, 64, 104, 104)    ------- (op: Conv)
INFO net.py: 240: res2_1_branch2a             : (2, 64, 104, 104)    => res2_1_branch2a             : (2, 64, 104, 104)    ------- (op: AffineChannel)
INFO net.py: 240: res2_1_branch2a             : (2, 64, 104, 104)    => res2_1_branch2a             : (2, 64, 104, 104)    ------- (op: Relu)
INFO net.py: 240: res2_1_branch2a             : (2, 64, 104, 104)    => res2_1_branch2b             : (2, 64, 104, 104)    ------- (op: Conv)
INFO net.py: 240: res2_1_branch2b             : (2, 64, 104, 104)    => res2_1_branch2b             : (2, 64, 104, 104)    ------- (op: AffineChannel)
INFO net.py: 240: res2_1_branch2b             : (2, 64, 104, 104)    => res2_1_branch2b             : (2, 64, 104, 104)    ------- (op: Relu)
INFO net.py: 240: res2_1_branch2b             : (2, 64, 104, 104)    => res2_1_branch2c             : (2, 256, 104, 104)   ------- (op: Conv)
INFO net.py: 240: res2_1_branch2c             : (2, 256, 104, 104)   => res2_1_branch2c_bn          : (2, 256, 104, 104)   ------- (op: AffineChannel)
INFO net.py: 240: res2_1_branch2c_bn          : (2, 256, 104, 104)   => res2_1_branch2c_bn          : (2, 256, 104, 104)   ------- (op: Sum)
INFO net.py: 240: res2_0_branch2c_bn          : (2, 256, 104, 104)   => res2_1_branch2c_bn          : (2, 256, 104, 104)   ------|
INFO net.py: 240: res2_1_branch2c_bn          : (2, 256, 104, 104)   => res2_1_branch2c_bn          : (2, 256, 104, 104)   ------- (op: Relu)
INFO net.py: 240: res2_1_branch2c_bn          : (2, 256, 104, 104)   => res2_2_branch2a             : (2, 64, 104, 104)    ------- (op: Conv)
INFO net.py: 240: res2_2_branch2a             : (2, 64, 104, 104)    => res2_2_branch2a             : (2, 64, 104, 104)    ------- (op: AffineChannel)
INFO net.py: 240: res2_2_branch2a             : (2, 64, 104, 104)    => res2_2_branch2a             : (2, 64, 104, 104)    ------- (op: Relu)
INFO net.py: 240: res2_2_branch2a             : (2, 64, 104, 104)    => res2_2_branch2b             : (2, 64, 104, 104)    ------- (op: Conv)
INFO net.py: 240: res2_2_branch2b             : (2, 64, 104, 104)    => res2_2_branch2b             : (2, 64, 104, 104)    ------- (op: AffineChannel)
INFO net.py: 240: res2_2_branch2b             : (2, 64, 104, 104)    => res2_2_branch2b             : (2, 64, 104, 104)    ------- (op: Relu)
INFO net.py: 240: res2_2_branch2b             : (2, 64, 104, 104)    => res2_2_branch2c             : (2, 256, 104, 104)   ------- (op: Conv)
INFO net.py: 240: res2_2_branch2c             : (2, 256, 104, 104)   => res2_2_branch2c_bn          : (2, 256, 104, 104)   ------- (op: AffineChannel)
INFO net.py: 240: res2_2_branch2c_bn          : (2, 256, 104, 104)   => res2_2_sum                  : (2, 256, 104, 104)   ------- (op: Sum)
INFO net.py: 240: res2_1_branch2c_bn          : (2, 256, 104, 104)   => res2_2_sum                  : (2, 256, 104, 104)   ------|
INFO net.py: 240: res2_2_sum                  : (2, 256, 104, 104)   => res2_2_sum                  : (2, 256, 104, 104)   ------- (op: Relu)
INFO net.py: 240: res2_2_sum                  : (2, 256, 104, 104)   => res2_2_sum                  : (2, 256, 104, 104)   ------- (op: StopGradient)
INFO net.py: 240: res2_2_sum                  : (2, 256, 104, 104)   => res3_0_branch2a             : (2, 128, 52, 52)     ------- (op: Conv)
INFO net.py: 240: res3_0_branch2a             : (2, 128, 52, 52)     => res3_0_branch2a             : (2, 128, 52, 52)     ------- (op: AffineChannel)
INFO net.py: 240: res3_0_branch2a             : (2, 128, 52, 52)     => res3_0_branch2a             : (2, 128, 52, 52)     ------- (op: Relu)
INFO net.py: 240: res3_0_branch2a             : (2, 128, 52, 52)     => res3_0_branch2b             : (2, 128, 52, 52)     ------- (op: Conv)
INFO net.py: 240: res3_0_branch2b             : (2, 128, 52, 52)     => res3_0_branch2b             : (2, 128, 52, 52)     ------- (op: AffineChannel)
INFO net.py: 240: res3_0_branch2b             : (2, 128, 52, 52)     => res3_0_branch2b             : (2, 128, 52, 52)     ------- (op: Relu)
INFO net.py: 240: res3_0_branch2b             : (2, 128, 52, 52)     => res3_0_branch2c             : (2, 512, 52, 52)     ------- (op: Conv)
INFO net.py: 240: res3_0_branch2c             : (2, 512, 52, 52)     => res3_0_branch2c_bn          : (2, 512, 52, 52)     ------- (op: AffineChannel)
INFO net.py: 240: res2_2_sum                  : (2, 256, 104, 104)   => res3_0_branch1              : (2, 512, 52, 52)     ------- (op: Conv)
INFO net.py: 240: res3_0_branch1              : (2, 512, 52, 52)     => res3_0_branch1_bn           : (2, 512, 52, 52)     ------- (op: AffineChannel)
INFO net.py: 240: res3_0_branch2c_bn          : (2, 512, 52, 52)     => res3_0_branch2c_bn          : (2, 512, 52, 52)     ------- (op: Sum)
INFO net.py: 240: res3_0_branch1_bn           : (2, 512, 52, 52)     => res3_0_branch2c_bn          : (2, 512, 52, 52)     ------|
INFO net.py: 240: res3_0_branch2c_bn          : (2, 512, 52, 52)     => res3_0_branch2c_bn          : (2, 512, 52, 52)     ------- (op: Relu)
INFO net.py: 240: res3_0_branch2c_bn          : (2, 512, 52, 52)     => res3_1_branch2a             : (2, 128, 52, 52)     ------- (op: Conv)
INFO net.py: 240: res3_1_branch2a             : (2, 128, 52, 52)     => res3_1_branch2a             : (2, 128, 52, 52)     ------- (op: AffineChannel)
INFO net.py: 240: res3_1_branch2a             : (2, 128, 52, 52)     => res3_1_branch2a             : (2, 128, 52, 52)     ------- (op: Relu)
INFO net.py: 240: res3_1_branch2a             : (2, 128, 52, 52)     => res3_1_branch2b             : (2, 128, 52, 52)     ------- (op: Conv)
INFO net.py: 240: res3_1_branch2b             : (2, 128, 52, 52)     => res3_1_branch2b             : (2, 128, 52, 52)     ------- (op: AffineChannel)
INFO net.py: 240: res3_1_branch2b             : (2, 128, 52, 52)     => res3_1_branch2b             : (2, 128, 52, 52)     ------- (op: Relu)
INFO net.py: 240: res3_1_branch2b             : (2, 128, 52, 52)     => res3_1_branch2c             : (2, 512, 52, 52)     ------- (op: Conv)
INFO net.py: 240: res3_1_branch2c             : (2, 512, 52, 52)     => res3_1_branch2c_bn          : (2, 512, 52, 52)     ------- (op: AffineChannel)
INFO net.py: 240: res3_1_branch2c_bn          : (2, 512, 52, 52)     => res3_1_branch2c_bn          : (2, 512, 52, 52)     ------- (op: Sum)
INFO net.py: 240: res3_0_branch2c_bn          : (2, 512, 52, 52)     => res3_1_branch2c_bn          : (2, 512, 52, 52)     ------|
INFO net.py: 240: res3_1_branch2c_bn          : (2, 512, 52, 52)     => res3_1_branch2c_bn          : (2, 512, 52, 52)     ------- (op: Relu)
INFO net.py: 240: res3_1_branch2c_bn          : (2, 512, 52, 52)     => res3_2_branch2a             : (2, 128, 52, 52)     ------- (op: Conv)
INFO net.py: 240: res3_2_branch2a             : (2, 128, 52, 52)     => res3_2_branch2a             : (2, 128, 52, 52)     ------- (op: AffineChannel)
INFO net.py: 240: res3_2_branch2a             : (2, 128, 52, 52)     => res3_2_branch2a             : (2, 128, 52, 52)     ------- (op: Relu)
INFO net.py: 240: res3_2_branch2a             : (2, 128, 52, 52)     => res3_2_branch2b             : (2, 128, 52, 52)     ------- (op: Conv)
INFO net.py: 240: res3_2_branch2b             : (2, 128, 52, 52)     => res3_2_branch2b             : (2, 128, 52, 52)     ------- (op: AffineChannel)
INFO net.py: 240: res3_2_branch2b             : (2, 128, 52, 52)     => res3_2_branch2b             : (2, 128, 52, 52)     ------- (op: Relu)
INFO net.py: 240: res3_2_branch2b             : (2, 128, 52, 52)     => res3_2_branch2c             : (2, 512, 52, 52)     ------- (op: Conv)
INFO net.py: 240: res3_2_branch2c             : (2, 512, 52, 52)     => res3_2_branch2c_bn          : (2, 512, 52, 52)     ------- (op: AffineChannel)
INFO net.py: 240: res3_2_branch2c_bn          : (2, 512, 52, 52)     => res3_2_branch2c_bn          : (2, 512, 52, 52)     ------- (op: Sum)
INFO net.py: 240: res3_1_branch2c_bn          : (2, 512, 52, 52)     => res3_2_branch2c_bn          : (2, 512, 52, 52)     ------|
INFO net.py: 240: res3_2_branch2c_bn          : (2, 512, 52, 52)     => res3_2_branch2c_bn          : (2, 512, 52, 52)     ------- (op: Relu)
INFO net.py: 240: res3_2_branch2c_bn          : (2, 512, 52, 52)     => res3_3_branch2a             : (2, 128, 52, 52)     ------- (op: Conv)
INFO net.py: 240: res3_3_branch2a             : (2, 128, 52, 52)     => res3_3_branch2a             : (2, 128, 52, 52)     ------- (op: AffineChannel)
INFO net.py: 240: res3_3_branch2a             : (2, 128, 52, 52)     => res3_3_branch2a             : (2, 128, 52, 52)     ------- (op: Relu)
INFO net.py: 240: res3_3_branch2a             : (2, 128, 52, 52)     => res3_3_branch2b             : (2, 128, 52, 52)     ------- (op: Conv)
INFO net.py: 240: res3_3_branch2b             : (2, 128, 52, 52)     => res3_3_branch2b             : (2, 128, 52, 52)     ------- (op: AffineChannel)
INFO net.py: 240: res3_3_branch2b             : (2, 128, 52, 52)     => res3_3_branch2b             : (2, 128, 52, 52)     ------- (op: Relu)
INFO net.py: 240: res3_3_branch2b             : (2, 128, 52, 52)     => res3_3_branch2c             : (2, 512, 52, 52)     ------- (op: Conv)
INFO net.py: 240: res3_3_branch2c             : (2, 512, 52, 52)     => res3_3_branch2c_bn          : (2, 512, 52, 52)     ------- (op: AffineChannel)
INFO net.py: 240: res3_3_branch2c_bn          : (2, 512, 52, 52)     => res3_3_sum                  : (2, 512, 52, 52)     ------- (op: Sum)
INFO net.py: 240: res3_2_branch2c_bn          : (2, 512, 52, 52)     => res3_3_sum                  : (2, 512, 52, 52)     ------|
INFO net.py: 240: res3_3_sum                  : (2, 512, 52, 52)     => res3_3_sum                  : (2, 512, 52, 52)     ------- (op: Relu)
INFO net.py: 240: res3_3_sum                  : (2, 512, 52, 52)     => res4_0_branch2a             : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: res4_0_branch2a             : (2, 256, 26, 26)     => res4_0_branch2a             : (2, 256, 26, 26)     ------- (op: AffineChannel)
INFO net.py: 240: res4_0_branch2a             : (2, 256, 26, 26)     => res4_0_branch2a             : (2, 256, 26, 26)     ------- (op: Relu)
INFO net.py: 240: res4_0_branch2a             : (2, 256, 26, 26)     => res4_0_branch2b             : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: res4_0_branch2b             : (2, 256, 26, 26)     => res4_0_branch2b             : (2, 256, 26, 26)     ------- (op: AffineChannel)
INFO net.py: 240: res4_0_branch2b             : (2, 256, 26, 26)     => res4_0_branch2b             : (2, 256, 26, 26)     ------- (op: Relu)
INFO net.py: 240: res4_0_branch2b             : (2, 256, 26, 26)     => res4_0_branch2c             : (2, 1024, 26, 26)    ------- (op: Conv)
INFO net.py: 240: res4_0_branch2c             : (2, 1024, 26, 26)    => res4_0_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: AffineChannel)
INFO net.py: 240: res3_3_sum                  : (2, 512, 52, 52)     => res4_0_branch1              : (2, 1024, 26, 26)    ------- (op: Conv)
INFO net.py: 240: res4_0_branch1              : (2, 1024, 26, 26)    => res4_0_branch1_bn           : (2, 1024, 26, 26)    ------- (op: AffineChannel)
INFO net.py: 240: res4_0_branch2c_bn          : (2, 1024, 26, 26)    => res4_0_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: Sum)
INFO net.py: 240: res4_0_branch1_bn           : (2, 1024, 26, 26)    => res4_0_branch2c_bn          : (2, 1024, 26, 26)    ------|
INFO net.py: 240: res4_0_branch2c_bn          : (2, 1024, 26, 26)    => res4_0_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: Relu)
INFO net.py: 240: res4_0_branch2c_bn          : (2, 1024, 26, 26)    => res4_1_branch2a             : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: res4_1_branch2a             : (2, 256, 26, 26)     => res4_1_branch2a             : (2, 256, 26, 26)     ------- (op: AffineChannel)
INFO net.py: 240: res4_1_branch2a             : (2, 256, 26, 26)     => res4_1_branch2a             : (2, 256, 26, 26)     ------- (op: Relu)
INFO net.py: 240: res4_1_branch2a             : (2, 256, 26, 26)     => res4_1_branch2b             : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: res4_1_branch2b             : (2, 256, 26, 26)     => res4_1_branch2b             : (2, 256, 26, 26)     ------- (op: AffineChannel)
INFO net.py: 240: res4_1_branch2b             : (2, 256, 26, 26)     => res4_1_branch2b             : (2, 256, 26, 26)     ------- (op: Relu)
INFO net.py: 240: res4_1_branch2b             : (2, 256, 26, 26)     => res4_1_branch2c             : (2, 1024, 26, 26)    ------- (op: Conv)
INFO net.py: 240: res4_1_branch2c             : (2, 1024, 26, 26)    => res4_1_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: AffineChannel)
INFO net.py: 240: res4_1_branch2c_bn          : (2, 1024, 26, 26)    => res4_1_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: Sum)
INFO net.py: 240: res4_0_branch2c_bn          : (2, 1024, 26, 26)    => res4_1_branch2c_bn          : (2, 1024, 26, 26)    ------|
INFO net.py: 240: res4_1_branch2c_bn          : (2, 1024, 26, 26)    => res4_1_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: Relu)
INFO net.py: 240: res4_1_branch2c_bn          : (2, 1024, 26, 26)    => res4_2_branch2a             : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: res4_2_branch2a             : (2, 256, 26, 26)     => res4_2_branch2a             : (2, 256, 26, 26)     ------- (op: AffineChannel)
INFO net.py: 240: res4_2_branch2a             : (2, 256, 26, 26)     => res4_2_branch2a             : (2, 256, 26, 26)     ------- (op: Relu)
INFO net.py: 240: res4_2_branch2a             : (2, 256, 26, 26)     => res4_2_branch2b             : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: res4_2_branch2b             : (2, 256, 26, 26)     => res4_2_branch2b             : (2, 256, 26, 26)     ------- (op: AffineChannel)
INFO net.py: 240: res4_2_branch2b             : (2, 256, 26, 26)     => res4_2_branch2b             : (2, 256, 26, 26)     ------- (op: Relu)
INFO net.py: 240: res4_2_branch2b             : (2, 256, 26, 26)     => res4_2_branch2c             : (2, 1024, 26, 26)    ------- (op: Conv)
INFO net.py: 240: res4_2_branch2c             : (2, 1024, 26, 26)    => res4_2_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: AffineChannel)
INFO net.py: 240: res4_2_branch2c_bn          : (2, 1024, 26, 26)    => res4_2_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: Sum)
INFO net.py: 240: res4_1_branch2c_bn          : (2, 1024, 26, 26)    => res4_2_branch2c_bn          : (2, 1024, 26, 26)    ------|
INFO net.py: 240: res4_2_branch2c_bn          : (2, 1024, 26, 26)    => res4_2_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: Relu)
INFO net.py: 240: res4_2_branch2c_bn          : (2, 1024, 26, 26)    => res4_3_branch2a             : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: res4_3_branch2a             : (2, 256, 26, 26)     => res4_3_branch2a             : (2, 256, 26, 26)     ------- (op: AffineChannel)
INFO net.py: 240: res4_3_branch2a             : (2, 256, 26, 26)     => res4_3_branch2a             : (2, 256, 26, 26)     ------- (op: Relu)
INFO net.py: 240: res4_3_branch2a             : (2, 256, 26, 26)     => res4_3_branch2b             : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: res4_3_branch2b             : (2, 256, 26, 26)     => res4_3_branch2b             : (2, 256, 26, 26)     ------- (op: AffineChannel)
INFO net.py: 240: res4_3_branch2b             : (2, 256, 26, 26)     => res4_3_branch2b             : (2, 256, 26, 26)     ------- (op: Relu)
INFO net.py: 240: res4_3_branch2b             : (2, 256, 26, 26)     => res4_3_branch2c             : (2, 1024, 26, 26)    ------- (op: Conv)
INFO net.py: 240: res4_3_branch2c             : (2, 1024, 26, 26)    => res4_3_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: AffineChannel)
INFO net.py: 240: res4_3_branch2c_bn          : (2, 1024, 26, 26)    => res4_3_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: Sum)
INFO net.py: 240: res4_2_branch2c_bn          : (2, 1024, 26, 26)    => res4_3_branch2c_bn          : (2, 1024, 26, 26)    ------|
INFO net.py: 240: res4_3_branch2c_bn          : (2, 1024, 26, 26)    => res4_3_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: Relu)
INFO net.py: 240: res4_3_branch2c_bn          : (2, 1024, 26, 26)    => res4_4_branch2a             : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: res4_4_branch2a             : (2, 256, 26, 26)     => res4_4_branch2a             : (2, 256, 26, 26)     ------- (op: AffineChannel)
INFO net.py: 240: res4_4_branch2a             : (2, 256, 26, 26)     => res4_4_branch2a             : (2, 256, 26, 26)     ------- (op: Relu)
INFO net.py: 240: res4_4_branch2a             : (2, 256, 26, 26)     => res4_4_branch2b             : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: res4_4_branch2b             : (2, 256, 26, 26)     => res4_4_branch2b             : (2, 256, 26, 26)     ------- (op: AffineChannel)
INFO net.py: 240: res4_4_branch2b             : (2, 256, 26, 26)     => res4_4_branch2b             : (2, 256, 26, 26)     ------- (op: Relu)
INFO net.py: 240: res4_4_branch2b             : (2, 256, 26, 26)     => res4_4_branch2c             : (2, 1024, 26, 26)    ------- (op: Conv)
INFO net.py: 240: res4_4_branch2c             : (2, 1024, 26, 26)    => res4_4_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: AffineChannel)
INFO net.py: 240: res4_4_branch2c_bn          : (2, 1024, 26, 26)    => res4_4_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: Sum)
INFO net.py: 240: res4_3_branch2c_bn          : (2, 1024, 26, 26)    => res4_4_branch2c_bn          : (2, 1024, 26, 26)    ------|
INFO net.py: 240: res4_4_branch2c_bn          : (2, 1024, 26, 26)    => res4_4_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: Relu)
INFO net.py: 240: res4_4_branch2c_bn          : (2, 1024, 26, 26)    => res4_5_branch2a             : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: res4_5_branch2a             : (2, 256, 26, 26)     => res4_5_branch2a             : (2, 256, 26, 26)     ------- (op: AffineChannel)
INFO net.py: 240: res4_5_branch2a             : (2, 256, 26, 26)     => res4_5_branch2a             : (2, 256, 26, 26)     ------- (op: Relu)
INFO net.py: 240: res4_5_branch2a             : (2, 256, 26, 26)     => res4_5_branch2b             : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: res4_5_branch2b             : (2, 256, 26, 26)     => res4_5_branch2b             : (2, 256, 26, 26)     ------- (op: AffineChannel)
INFO net.py: 240: res4_5_branch2b             : (2, 256, 26, 26)     => res4_5_branch2b             : (2, 256, 26, 26)     ------- (op: Relu)
INFO net.py: 240: res4_5_branch2b             : (2, 256, 26, 26)     => res4_5_branch2c             : (2, 1024, 26, 26)    ------- (op: Conv)
INFO net.py: 240: res4_5_branch2c             : (2, 1024, 26, 26)    => res4_5_branch2c_bn          : (2, 1024, 26, 26)    ------- (op: AffineChannel)
INFO net.py: 240: res4_5_branch2c_bn          : (2, 1024, 26, 26)    => res4_5_sum                  : (2, 1024, 26, 26)    ------- (op: Sum)
INFO net.py: 240: res4_4_branch2c_bn          : (2, 1024, 26, 26)    => res4_5_sum                  : (2, 1024, 26, 26)    ------|
INFO net.py: 240: res4_5_sum                  : (2, 1024, 26, 26)    => res4_5_sum                  : (2, 1024, 26, 26)    ------- (op: Relu)
INFO net.py: 240: res4_5_sum                  : (2, 1024, 26, 26)    => res5_0_branch2a             : (2, 512, 13, 13)     ------- (op: Conv)
INFO net.py: 240: res5_0_branch2a             : (2, 512, 13, 13)     => res5_0_branch2a             : (2, 512, 13, 13)     ------- (op: AffineChannel)
INFO net.py: 240: res5_0_branch2a             : (2, 512, 13, 13)     => res5_0_branch2a             : (2, 512, 13, 13)     ------- (op: Relu)
INFO net.py: 240: res5_0_branch2a             : (2, 512, 13, 13)     => res5_0_branch2b             : (2, 512, 13, 13)     ------- (op: Conv)
INFO net.py: 240: res5_0_branch2b             : (2, 512, 13, 13)     => res5_0_branch2b             : (2, 512, 13, 13)     ------- (op: AffineChannel)
INFO net.py: 240: res5_0_branch2b             : (2, 512, 13, 13)     => res5_0_branch2b             : (2, 512, 13, 13)     ------- (op: Relu)
INFO net.py: 240: res5_0_branch2b             : (2, 512, 13, 13)     => res5_0_branch2c             : (2, 2048, 13, 13)    ------- (op: Conv)
INFO net.py: 240: res5_0_branch2c             : (2, 2048, 13, 13)    => res5_0_branch2c_bn          : (2, 2048, 13, 13)    ------- (op: AffineChannel)
INFO net.py: 240: res4_5_sum                  : (2, 1024, 26, 26)    => res5_0_branch1              : (2, 2048, 13, 13)    ------- (op: Conv)
INFO net.py: 240: res5_0_branch1              : (2, 2048, 13, 13)    => res5_0_branch1_bn           : (2, 2048, 13, 13)    ------- (op: AffineChannel)
INFO net.py: 240: res5_0_branch2c_bn          : (2, 2048, 13, 13)    => res5_0_branch2c_bn          : (2, 2048, 13, 13)    ------- (op: Sum)
INFO net.py: 240: res5_0_branch1_bn           : (2, 2048, 13, 13)    => res5_0_branch2c_bn          : (2, 2048, 13, 13)    ------|
INFO net.py: 240: res5_0_branch2c_bn          : (2, 2048, 13, 13)    => res5_0_branch2c_bn          : (2, 2048, 13, 13)    ------- (op: Relu)
INFO net.py: 240: res5_0_branch2c_bn          : (2, 2048, 13, 13)    => res5_1_branch2a             : (2, 512, 13, 13)     ------- (op: Conv)
INFO net.py: 240: res5_1_branch2a             : (2, 512, 13, 13)     => res5_1_branch2a             : (2, 512, 13, 13)     ------- (op: AffineChannel)
INFO net.py: 240: res5_1_branch2a             : (2, 512, 13, 13)     => res5_1_branch2a             : (2, 512, 13, 13)     ------- (op: Relu)
INFO net.py: 240: res5_1_branch2a             : (2, 512, 13, 13)     => res5_1_branch2b             : (2, 512, 13, 13)     ------- (op: Conv)
INFO net.py: 240: res5_1_branch2b             : (2, 512, 13, 13)     => res5_1_branch2b             : (2, 512, 13, 13)     ------- (op: AffineChannel)
INFO net.py: 240: res5_1_branch2b             : (2, 512, 13, 13)     => res5_1_branch2b             : (2, 512, 13, 13)     ------- (op: Relu)
INFO net.py: 240: res5_1_branch2b             : (2, 512, 13, 13)     => res5_1_branch2c             : (2, 2048, 13, 13)    ------- (op: Conv)
INFO net.py: 240: res5_1_branch2c             : (2, 2048, 13, 13)    => res5_1_branch2c_bn          : (2, 2048, 13, 13)    ------- (op: AffineChannel)
INFO net.py: 240: res5_1_branch2c_bn          : (2, 2048, 13, 13)    => res5_1_branch2c_bn          : (2, 2048, 13, 13)    ------- (op: Sum)
INFO net.py: 240: res5_0_branch2c_bn          : (2, 2048, 13, 13)    => res5_1_branch2c_bn          : (2, 2048, 13, 13)    ------|
INFO net.py: 240: res5_1_branch2c_bn          : (2, 2048, 13, 13)    => res5_1_branch2c_bn          : (2, 2048, 13, 13)    ------- (op: Relu)
INFO net.py: 240: res5_1_branch2c_bn          : (2, 2048, 13, 13)    => res5_2_branch2a             : (2, 512, 13, 13)     ------- (op: Conv)
INFO net.py: 240: res5_2_branch2a             : (2, 512, 13, 13)     => res5_2_branch2a             : (2, 512, 13, 13)     ------- (op: AffineChannel)
INFO net.py: 240: res5_2_branch2a             : (2, 512, 13, 13)     => res5_2_branch2a             : (2, 512, 13, 13)     ------- (op: Relu)
INFO net.py: 240: res5_2_branch2a             : (2, 512, 13, 13)     => res5_2_branch2b             : (2, 512, 13, 13)     ------- (op: Conv)
INFO net.py: 240: res5_2_branch2b             : (2, 512, 13, 13)     => res5_2_branch2b             : (2, 512, 13, 13)     ------- (op: AffineChannel)
INFO net.py: 240: res5_2_branch2b             : (2, 512, 13, 13)     => res5_2_branch2b             : (2, 512, 13, 13)     ------- (op: Relu)
INFO net.py: 240: res5_2_branch2b             : (2, 512, 13, 13)     => res5_2_branch2c             : (2, 2048, 13, 13)    ------- (op: Conv)
INFO net.py: 240: res5_2_branch2c             : (2, 2048, 13, 13)    => res5_2_branch2c_bn          : (2, 2048, 13, 13)    ------- (op: AffineChannel)
INFO net.py: 240: res5_2_branch2c_bn          : (2, 2048, 13, 13)    => res5_2_sum                  : (2, 2048, 13, 13)    ------- (op: Sum)
INFO net.py: 240: res5_1_branch2c_bn          : (2, 2048, 13, 13)    => res5_2_sum                  : (2, 2048, 13, 13)    ------|
INFO net.py: 240: res5_2_sum                  : (2, 2048, 13, 13)    => res5_2_sum                  : (2, 2048, 13, 13)    ------- (op: Relu)
INFO net.py: 240: res5_2_sum                  : (2, 2048, 13, 13)    => fpn_inner_res5_2_sum        : (2, 256, 13, 13)     ------- (op: Conv)
INFO net.py: 240: res4_5_sum                  : (2, 1024, 26, 26)    => fpn_inner_res4_5_sum_lateral: (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: fpn_inner_res5_2_sum        : (2, 256, 13, 13)     => fpn_inner_res4_5_sum_topdown: (2, 256, 26, 26)     ------- (op: UpsampleNearest)
INFO net.py: 240: fpn_inner_res4_5_sum_lateral: (2, 256, 26, 26)     => fpn_inner_res4_5_sum        : (2, 256, 26, 26)     ------- (op: Sum)
INFO net.py: 240: fpn_inner_res4_5_sum_topdown: (2, 256, 26, 26)     => fpn_inner_res4_5_sum        : (2, 256, 26, 26)     ------|
INFO net.py: 240: res3_3_sum                  : (2, 512, 52, 52)     => fpn_inner_res3_3_sum_lateral: (2, 256, 52, 52)     ------- (op: Conv)
INFO net.py: 240: fpn_inner_res4_5_sum        : (2, 256, 26, 26)     => fpn_inner_res3_3_sum_topdown: (2, 256, 52, 52)     ------- (op: UpsampleNearest)
INFO net.py: 240: fpn_inner_res3_3_sum_lateral: (2, 256, 52, 52)     => fpn_inner_res3_3_sum        : (2, 256, 52, 52)     ------- (op: Sum)
INFO net.py: 240: fpn_inner_res3_3_sum_topdown: (2, 256, 52, 52)     => fpn_inner_res3_3_sum        : (2, 256, 52, 52)     ------|
INFO net.py: 240: res2_2_sum                  : (2, 256, 104, 104)   => fpn_inner_res2_2_sum_lateral: (2, 256, 104, 104)   ------- (op: Conv)
INFO net.py: 240: fpn_inner_res3_3_sum        : (2, 256, 52, 52)     => fpn_inner_res2_2_sum_topdown: (2, 256, 104, 104)   ------- (op: UpsampleNearest)
INFO net.py: 240: fpn_inner_res2_2_sum_lateral: (2, 256, 104, 104)   => fpn_inner_res2_2_sum        : (2, 256, 104, 104)   ------- (op: Sum)
INFO net.py: 240: fpn_inner_res2_2_sum_topdown: (2, 256, 104, 104)   => fpn_inner_res2_2_sum        : (2, 256, 104, 104)   ------|
INFO net.py: 240: fpn_inner_res5_2_sum        : (2, 256, 13, 13)     => fpn_res5_2_sum              : (2, 256, 13, 13)     ------- (op: Conv)
INFO net.py: 240: fpn_inner_res4_5_sum        : (2, 256, 26, 26)     => fpn_res4_5_sum              : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: fpn_inner_res3_3_sum        : (2, 256, 52, 52)     => fpn_res3_3_sum              : (2, 256, 52, 52)     ------- (op: Conv)
INFO net.py: 240: fpn_inner_res2_2_sum        : (2, 256, 104, 104)   => fpn_res2_2_sum              : (2, 256, 104, 104)   ------- (op: Conv)
INFO net.py: 240: fpn_res5_2_sum              : (2, 256, 13, 13)     => fpn_res5_2_sum_subsampled_2x: (2, 256, 7, 7)       ------- (op: MaxPool)
INFO net.py: 240: fpn_res2_2_sum              : (2, 256, 104, 104)   => conv_rpn_fpn2               : (2, 256, 104, 104)   ------- (op: Conv)
INFO net.py: 240: conv_rpn_fpn2               : (2, 256, 104, 104)   => conv_rpn_fpn2               : (2, 256, 104, 104)   ------- (op: Relu)
INFO net.py: 240: conv_rpn_fpn2               : (2, 256, 104, 104)   => rpn_cls_logits_fpn2         : (2, 3, 104, 104)     ------- (op: Conv)
INFO net.py: 240: conv_rpn_fpn2               : (2, 256, 104, 104)   => rpn_bbox_pred_fpn2          : (2, 12, 104, 104)    ------- (op: Conv)
INFO net.py: 240: fpn_res3_3_sum              : (2, 256, 52, 52)     => conv_rpn_fpn3               : (2, 256, 52, 52)     ------- (op: Conv)
INFO net.py: 240: conv_rpn_fpn3               : (2, 256, 52, 52)     => conv_rpn_fpn3               : (2, 256, 52, 52)     ------- (op: Relu)
INFO net.py: 240: conv_rpn_fpn3               : (2, 256, 52, 52)     => rpn_cls_logits_fpn3         : (2, 3, 52, 52)       ------- (op: Conv)
INFO net.py: 240: conv_rpn_fpn3               : (2, 256, 52, 52)     => rpn_bbox_pred_fpn3          : (2, 12, 52, 52)      ------- (op: Conv)
INFO net.py: 240: fpn_res4_5_sum              : (2, 256, 26, 26)     => conv_rpn_fpn4               : (2, 256, 26, 26)     ------- (op: Conv)
INFO net.py: 240: conv_rpn_fpn4               : (2, 256, 26, 26)     => conv_rpn_fpn4               : (2, 256, 26, 26)     ------- (op: Relu)
INFO net.py: 240: conv_rpn_fpn4               : (2, 256, 26, 26)     => rpn_cls_logits_fpn4         : (2, 3, 26, 26)       ------- (op: Conv)
INFO net.py: 240: conv_rpn_fpn4               : (2, 256, 26, 26)     => rpn_bbox_pred_fpn4          : (2, 12, 26, 26)      ------- (op: Conv)
INFO net.py: 240: fpn_res5_2_sum              : (2, 256, 13, 13)     => conv_rpn_fpn5               : (2, 256, 13, 13)     ------- (op: Conv)
INFO net.py: 240: conv_rpn_fpn5               : (2, 256, 13, 13)     => conv_rpn_fpn5               : (2, 256, 13, 13)     ------- (op: Relu)
INFO net.py: 240: conv_rpn_fpn5               : (2, 256, 13, 13)     => rpn_cls_logits_fpn5         : (2, 3, 13, 13)       ------- (op: Conv)
INFO net.py: 240: conv_rpn_fpn5               : (2, 256, 13, 13)     => rpn_bbox_pred_fpn5          : (2, 12, 13, 13)      ------- (op: Conv)
INFO net.py: 240: fpn_res5_2_sum_subsampled_2x: (2, 256, 7, 7)       => conv_rpn_fpn6               : (2, 256, 7, 7)       ------- (op: Conv)
INFO net.py: 240: conv_rpn_fpn6               : (2, 256, 7, 7)       => conv_rpn_fpn6               : (2, 256, 7, 7)       ------- (op: Relu)
INFO net.py: 240: conv_rpn_fpn6               : (2, 256, 7, 7)       => rpn_cls_logits_fpn6         : (2, 3, 7, 7)         ------- (op: Conv)
INFO net.py: 240: conv_rpn_fpn6               : (2, 256, 7, 7)       => rpn_bbox_pred_fpn6          : (2, 12, 7, 7)        ------- (op: Conv)
INFO net.py: 240: rpn_labels_int32_wide_fpn2  : (2, 3, 336, 336)     => rpn_labels_int32_fpn2       : (2, 3, 104, 104)     ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_cls_logits_fpn2         : (2, 3, 104, 104)     => rpn_labels_int32_fpn2       : (2, 3, 104, 104)     ------|
INFO net.py: 240: rpn_bbox_targets_wide_fpn2  : (2, 12, 336, 336)    => rpn_bbox_targets_fpn2       : (2, 12, 104, 104)    ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn2          : (2, 12, 104, 104)    => rpn_bbox_targets_fpn2       : (2, 12, 104, 104)    ------|
INFO net.py: 240: rpn_bbox_inside_weights_wide_fpn2: (2, 12, 336, 336)    => rpn_bbox_inside_weights_fpn2: (2, 12, 104, 104)    ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn2          : (2, 12, 104, 104)    => rpn_bbox_inside_weights_fpn2: (2, 12, 104, 104)    ------|
INFO net.py: 240: rpn_bbox_outside_weights_wide_fpn2: (2, 12, 336, 336)    => rpn_bbox_outside_weights_fpn2: (2, 12, 104, 104)    ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn2          : (2, 12, 104, 104)    => rpn_bbox_outside_weights_fpn2: (2, 12, 104, 104)    ------|
INFO net.py: 240: rpn_cls_logits_fpn2         : (2, 3, 104, 104)     => loss_rpn_cls_fpn2           : ()                   ------- (op: SigmoidCrossEntropyLoss)
INFO net.py: 240: rpn_labels_int32_fpn2       : (2, 3, 104, 104)     => loss_rpn_cls_fpn2           : ()                   ------|
INFO net.py: 240: rpn_bbox_pred_fpn2          : (2, 12, 104, 104)    => loss_rpn_bbox_fpn2          : ()                   ------- (op: SmoothL1Loss)
INFO net.py: 240: rpn_bbox_targets_fpn2       : (2, 12, 104, 104)    => loss_rpn_bbox_fpn2          : ()                   ------|
INFO net.py: 240: rpn_bbox_inside_weights_fpn2: (2, 12, 104, 104)    => loss_rpn_bbox_fpn2          : ()                   ------|
INFO net.py: 240: rpn_bbox_outside_weights_fpn2: (2, 12, 104, 104)    => loss_rpn_bbox_fpn2          : ()                   ------|
INFO net.py: 240: rpn_labels_int32_wide_fpn3  : (2, 3, 168, 168)     => rpn_labels_int32_fpn3       : (2, 3, 52, 52)       ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_cls_logits_fpn3         : (2, 3, 52, 52)       => rpn_labels_int32_fpn3       : (2, 3, 52, 52)       ------|
INFO net.py: 240: rpn_bbox_targets_wide_fpn3  : (2, 12, 168, 168)    => rpn_bbox_targets_fpn3       : (2, 12, 52, 52)      ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn3          : (2, 12, 52, 52)      => rpn_bbox_targets_fpn3       : (2, 12, 52, 52)      ------|
INFO net.py: 240: rpn_bbox_inside_weights_wide_fpn3: (2, 12, 168, 168)    => rpn_bbox_inside_weights_fpn3: (2, 12, 52, 52)      ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn3          : (2, 12, 52, 52)      => rpn_bbox_inside_weights_fpn3: (2, 12, 52, 52)      ------|
INFO net.py: 240: rpn_bbox_outside_weights_wide_fpn3: (2, 12, 168, 168)    => rpn_bbox_outside_weights_fpn3: (2, 12, 52, 52)      ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn3          : (2, 12, 52, 52)      => rpn_bbox_outside_weights_fpn3: (2, 12, 52, 52)      ------|
INFO net.py: 240: rpn_cls_logits_fpn3         : (2, 3, 52, 52)       => loss_rpn_cls_fpn3           : ()                   ------- (op: SigmoidCrossEntropyLoss)
INFO net.py: 240: rpn_labels_int32_fpn3       : (2, 3, 52, 52)       => loss_rpn_cls_fpn3           : ()                   ------|
INFO net.py: 240: rpn_bbox_pred_fpn3          : (2, 12, 52, 52)      => loss_rpn_bbox_fpn3          : ()                   ------- (op: SmoothL1Loss)
INFO net.py: 240: rpn_bbox_targets_fpn3       : (2, 12, 52, 52)      => loss_rpn_bbox_fpn3          : ()                   ------|
INFO net.py: 240: rpn_bbox_inside_weights_fpn3: (2, 12, 52, 52)      => loss_rpn_bbox_fpn3          : ()                   ------|
INFO net.py: 240: rpn_bbox_outside_weights_fpn3: (2, 12, 52, 52)      => loss_rpn_bbox_fpn3          : ()                   ------|
INFO net.py: 240: rpn_labels_int32_wide_fpn4  : (2, 3, 84, 84)       => rpn_labels_int32_fpn4       : (2, 3, 26, 26)       ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_cls_logits_fpn4         : (2, 3, 26, 26)       => rpn_labels_int32_fpn4       : (2, 3, 26, 26)       ------|
INFO net.py: 240: rpn_bbox_targets_wide_fpn4  : (2, 12, 84, 84)      => rpn_bbox_targets_fpn4       : (2, 12, 26, 26)      ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn4          : (2, 12, 26, 26)      => rpn_bbox_targets_fpn4       : (2, 12, 26, 26)      ------|
INFO net.py: 240: rpn_bbox_inside_weights_wide_fpn4: (2, 12, 84, 84)      => rpn_bbox_inside_weights_fpn4: (2, 12, 26, 26)      ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn4          : (2, 12, 26, 26)      => rpn_bbox_inside_weights_fpn4: (2, 12, 26, 26)      ------|
INFO net.py: 240: rpn_bbox_outside_weights_wide_fpn4: (2, 12, 84, 84)      => rpn_bbox_outside_weights_fpn4: (2, 12, 26, 26)      ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn4          : (2, 12, 26, 26)      => rpn_bbox_outside_weights_fpn4: (2, 12, 26, 26)      ------|
INFO net.py: 240: rpn_cls_logits_fpn4         : (2, 3, 26, 26)       => loss_rpn_cls_fpn4           : ()                   ------- (op: SigmoidCrossEntropyLoss)
INFO net.py: 240: rpn_labels_int32_fpn4       : (2, 3, 26, 26)       => loss_rpn_cls_fpn4           : ()                   ------|
INFO net.py: 240: rpn_bbox_pred_fpn4          : (2, 12, 26, 26)      => loss_rpn_bbox_fpn4          : ()                   ------- (op: SmoothL1Loss)
INFO net.py: 240: rpn_bbox_targets_fpn4       : (2, 12, 26, 26)      => loss_rpn_bbox_fpn4          : ()                   ------|
INFO net.py: 240: rpn_bbox_inside_weights_fpn4: (2, 12, 26, 26)      => loss_rpn_bbox_fpn4          : ()                   ------|
INFO net.py: 240: rpn_bbox_outside_weights_fpn4: (2, 12, 26, 26)      => loss_rpn_bbox_fpn4          : ()                   ------|
INFO net.py: 240: rpn_labels_int32_wide_fpn5  : (2, 3, 42, 42)       => rpn_labels_int32_fpn5       : (2, 3, 13, 13)       ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_cls_logits_fpn5         : (2, 3, 13, 13)       => rpn_labels_int32_fpn5       : (2, 3, 13, 13)       ------|
INFO net.py: 240: rpn_bbox_targets_wide_fpn5  : (2, 12, 42, 42)      => rpn_bbox_targets_fpn5       : (2, 12, 13, 13)      ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn5          : (2, 12, 13, 13)      => rpn_bbox_targets_fpn5       : (2, 12, 13, 13)      ------|
INFO net.py: 240: rpn_bbox_inside_weights_wide_fpn5: (2, 12, 42, 42)      => rpn_bbox_inside_weights_fpn5: (2, 12, 13, 13)      ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn5          : (2, 12, 13, 13)      => rpn_bbox_inside_weights_fpn5: (2, 12, 13, 13)      ------|
INFO net.py: 240: rpn_bbox_outside_weights_wide_fpn5: (2, 12, 42, 42)      => rpn_bbox_outside_weights_fpn5: (2, 12, 13, 13)      ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn5          : (2, 12, 13, 13)      => rpn_bbox_outside_weights_fpn5: (2, 12, 13, 13)      ------|
INFO net.py: 240: rpn_cls_logits_fpn5         : (2, 3, 13, 13)       => loss_rpn_cls_fpn5           : ()                   ------- (op: SigmoidCrossEntropyLoss)
INFO net.py: 240: rpn_labels_int32_fpn5       : (2, 3, 13, 13)       => loss_rpn_cls_fpn5           : ()                   ------|
INFO net.py: 240: rpn_bbox_pred_fpn5          : (2, 12, 13, 13)      => loss_rpn_bbox_fpn5          : ()                   ------- (op: SmoothL1Loss)
INFO net.py: 240: rpn_bbox_targets_fpn5       : (2, 12, 13, 13)      => loss_rpn_bbox_fpn5          : ()                   ------|
INFO net.py: 240: rpn_bbox_inside_weights_fpn5: (2, 12, 13, 13)      => loss_rpn_bbox_fpn5          : ()                   ------|
INFO net.py: 240: rpn_bbox_outside_weights_fpn5: (2, 12, 13, 13)      => loss_rpn_bbox_fpn5          : ()                   ------|
INFO net.py: 240: rpn_labels_int32_wide_fpn6  : (2, 3, 21, 21)       => rpn_labels_int32_fpn6       : (2, 3, 7, 7)         ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_cls_logits_fpn6         : (2, 3, 7, 7)         => rpn_labels_int32_fpn6       : (2, 3, 7, 7)         ------|
INFO net.py: 240: rpn_bbox_targets_wide_fpn6  : (2, 12, 21, 21)      => rpn_bbox_targets_fpn6       : (2, 12, 7, 7)        ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn6          : (2, 12, 7, 7)        => rpn_bbox_targets_fpn6       : (2, 12, 7, 7)        ------|
INFO net.py: 240: rpn_bbox_inside_weights_wide_fpn6: (2, 12, 21, 21)      => rpn_bbox_inside_weights_fpn6: (2, 12, 7, 7)        ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn6          : (2, 12, 7, 7)        => rpn_bbox_inside_weights_fpn6: (2, 12, 7, 7)        ------|
INFO net.py: 240: rpn_bbox_outside_weights_wide_fpn6: (2, 12, 21, 21)      => rpn_bbox_outside_weights_fpn6: (2, 12, 7, 7)        ------- (op: SpatialNarrowAs)
INFO net.py: 240: rpn_bbox_pred_fpn6          : (2, 12, 7, 7)        => rpn_bbox_outside_weights_fpn6: (2, 12, 7, 7)        ------|
INFO net.py: 240: rpn_cls_logits_fpn6         : (2, 3, 7, 7)         => loss_rpn_cls_fpn6           : ()                   ------- (op: SigmoidCrossEntropyLoss)
INFO net.py: 240: rpn_labels_int32_fpn6       : (2, 3, 7, 7)         => loss_rpn_cls_fpn6           : ()                   ------|
INFO net.py: 240: rpn_bbox_pred_fpn6          : (2, 12, 7, 7)        => loss_rpn_bbox_fpn6          : ()                   ------- (op: SmoothL1Loss)
INFO net.py: 240: rpn_bbox_targets_fpn6       : (2, 12, 7, 7)        => loss_rpn_bbox_fpn6          : ()                   ------|
INFO net.py: 240: rpn_bbox_inside_weights_fpn6: (2, 12, 7, 7)        => loss_rpn_bbox_fpn6          : ()                   ------|
INFO net.py: 240: rpn_bbox_outside_weights_fpn6: (2, 12, 7, 7)        => loss_rpn_bbox_fpn6          : ()                   ------|
INFO net.py: 244: End of model: generalized_rcnn
json_stats: {"eta": "1 day, 15:47:48", "iter": 0, "loss": 0.781656, "loss_rpn_bbox_fpn2": 0.009594, "loss_rpn_bbox_fpn3": 0.020093, "loss_rpn_bbox_fpn4": 0.015225, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.542582, "loss_rpn_cls_fpn3": 0.140089, "loss_rpn_cls_fpn4": 0.045791, "loss_rpn_cls_fpn5": 0.005564, "loss_rpn_cls_fpn6": 0.002718, "lr": 0.001000, "mb_qsize": 64, "mem": 1720, "time": 1.591874}
json_stats: {"eta": "4:50:25", "iter": 20, "loss": 0.670366, "loss_rpn_bbox_fpn2": 0.023508, "loss_rpn_bbox_fpn3": 0.043058, "loss_rpn_bbox_fpn4": 0.018206, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.302714, "loss_rpn_cls_fpn3": 0.150648, "loss_rpn_cls_fpn4": 0.049648, "loss_rpn_cls_fpn5": 0.005369, "loss_rpn_cls_fpn6": 0.001049, "lr": 0.001080, "mb_qsize": 64, "mem": 2017, "time": 0.193659}
json_stats: {"eta": "3:03:24", "iter": 40, "loss": 0.313778, "loss_rpn_bbox_fpn2": 0.009183, "loss_rpn_bbox_fpn3": 0.032279, "loss_rpn_bbox_fpn4": 0.014053, "loss_rpn_bbox_fpn5": 0.001629, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.058699, "loss_rpn_cls_fpn3": 0.126897, "loss_rpn_cls_fpn4": 0.041168, "loss_rpn_cls_fpn5": 0.006392, "loss_rpn_cls_fpn6": 0.000914, "lr": 0.001160, "mb_qsize": 64, "mem": 2022, "time": 0.122321}
json_stats: {"eta": "3:01:38", "iter": 60, "loss": 0.278058, "loss_rpn_bbox_fpn2": 0.009796, "loss_rpn_bbox_fpn3": 0.029888, "loss_rpn_bbox_fpn4": 0.014511, "loss_rpn_bbox_fpn5": 0.005150, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.062171, "loss_rpn_cls_fpn3": 0.093192, "loss_rpn_cls_fpn4": 0.037837, "loss_rpn_cls_fpn5": 0.012019, "loss_rpn_cls_fpn6": 0.001322, "lr": 0.001240, "mb_qsize": 64, "mem": 2027, "time": 0.121179}
json_stats: {"eta": "3:03:29", "iter": 80, "loss": 0.276853, "loss_rpn_bbox_fpn2": 0.013956, "loss_rpn_bbox_fpn3": 0.018030, "loss_rpn_bbox_fpn4": 0.023592, "loss_rpn_bbox_fpn5": 0.003329, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.063626, "loss_rpn_cls_fpn3": 0.076312, "loss_rpn_cls_fpn4": 0.053518, "loss_rpn_cls_fpn5": 0.008765, "loss_rpn_cls_fpn6": 0.000907, "lr": 0.001320, "mb_qsize": 64, "mem": 2031, "time": 0.122432}
json_stats: {"eta": "3:10:18", "iter": 100, "loss": 0.285158, "loss_rpn_bbox_fpn2": 0.011773, "loss_rpn_bbox_fpn3": 0.020709, "loss_rpn_bbox_fpn4": 0.017045, "loss_rpn_bbox_fpn5": 0.005340, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.045887, "loss_rpn_cls_fpn3": 0.077789, "loss_rpn_cls_fpn4": 0.038878, "loss_rpn_cls_fpn5": 0.010421, "loss_rpn_cls_fpn6": 0.001116, "lr": 0.001400, "mb_qsize": 64, "mem": 2031, "time": 0.127012}
json_stats: {"eta": "3:09:45", "iter": 120, "loss": 0.261076, "loss_rpn_bbox_fpn2": 0.012766, "loss_rpn_bbox_fpn3": 0.020388, "loss_rpn_bbox_fpn4": 0.019291, "loss_rpn_bbox_fpn5": 0.000703, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.062316, "loss_rpn_cls_fpn3": 0.052942, "loss_rpn_cls_fpn4": 0.042917, "loss_rpn_cls_fpn5": 0.007003, "loss_rpn_cls_fpn6": 0.000756, "lr": 0.001480, "mb_qsize": 64, "mem": 2032, "time": 0.126673}
json_stats: {"eta": "3:10:58", "iter": 140, "loss": 0.247232, "loss_rpn_bbox_fpn2": 0.012819, "loss_rpn_bbox_fpn3": 0.022742, "loss_rpn_bbox_fpn4": 0.011289, "loss_rpn_bbox_fpn5": 0.003033, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.053578, "loss_rpn_cls_fpn3": 0.054064, "loss_rpn_cls_fpn4": 0.030675, "loss_rpn_cls_fpn5": 0.010975, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.001560, "mb_qsize": 64, "mem": 2032, "time": 0.127520}
json_stats: {"eta": "3:14:55", "iter": 160, "loss": 0.243546, "loss_rpn_bbox_fpn2": 0.016363, "loss_rpn_bbox_fpn3": 0.018103, "loss_rpn_bbox_fpn4": 0.023697, "loss_rpn_bbox_fpn5": 0.005409, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.059782, "loss_rpn_cls_fpn3": 0.045614, "loss_rpn_cls_fpn4": 0.040110, "loss_rpn_cls_fpn5": 0.010692, "loss_rpn_cls_fpn6": 0.001383, "lr": 0.001640, "mb_qsize": 64, "mem": 2710, "time": 0.130182}
json_stats: {"eta": "3:14:18", "iter": 180, "loss": 0.184182, "loss_rpn_bbox_fpn2": 0.007568, "loss_rpn_bbox_fpn3": 0.013501, "loss_rpn_bbox_fpn4": 0.013390, "loss_rpn_bbox_fpn5": 0.009240, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.036344, "loss_rpn_cls_fpn3": 0.039088, "loss_rpn_cls_fpn4": 0.029026, "loss_rpn_cls_fpn5": 0.013112, "loss_rpn_cls_fpn6": 0.001166, "lr": 0.001720, "mb_qsize": 64, "mem": 2710, "time": 0.129801}
json_stats: {"eta": "3:14:57", "iter": 200, "loss": 0.196630, "loss_rpn_bbox_fpn2": 0.008875, "loss_rpn_bbox_fpn3": 0.014218, "loss_rpn_bbox_fpn4": 0.022686, "loss_rpn_bbox_fpn5": 0.001075, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.035643, "loss_rpn_cls_fpn3": 0.038275, "loss_rpn_cls_fpn4": 0.028082, "loss_rpn_cls_fpn5": 0.006723, "loss_rpn_cls_fpn6": 0.000233, "lr": 0.001800, "mb_qsize": 64, "mem": 2710, "time": 0.130264}
json_stats: {"eta": "3:15:29", "iter": 220, "loss": 0.142704, "loss_rpn_bbox_fpn2": 0.008571, "loss_rpn_bbox_fpn3": 0.014549, "loss_rpn_bbox_fpn4": 0.013684, "loss_rpn_bbox_fpn5": 0.003091, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.028765, "loss_rpn_cls_fpn3": 0.025152, "loss_rpn_cls_fpn4": 0.025776, "loss_rpn_cls_fpn5": 0.007827, "loss_rpn_cls_fpn6": 0.000641, "lr": 0.001880, "mb_qsize": 64, "mem": 2711, "time": 0.130648}
json_stats: {"eta": "3:17:22", "iter": 240, "loss": 0.145221, "loss_rpn_bbox_fpn2": 0.009853, "loss_rpn_bbox_fpn3": 0.017035, "loss_rpn_bbox_fpn4": 0.018706, "loss_rpn_bbox_fpn5": 0.001487, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.041619, "loss_rpn_cls_fpn3": 0.031107, "loss_rpn_cls_fpn4": 0.018129, "loss_rpn_cls_fpn5": 0.005369, "loss_rpn_cls_fpn6": 0.000342, "lr": 0.001960, "mb_qsize": 64, "mem": 2712, "time": 0.131932}
json_stats: {"eta": "3:18:19", "iter": 260, "loss": 0.200309, "loss_rpn_bbox_fpn2": 0.010254, "loss_rpn_bbox_fpn3": 0.022384, "loss_rpn_bbox_fpn4": 0.011281, "loss_rpn_bbox_fpn5": 0.004139, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.031787, "loss_rpn_cls_fpn3": 0.045993, "loss_rpn_cls_fpn4": 0.028695, "loss_rpn_cls_fpn5": 0.006767, "loss_rpn_cls_fpn6": 0.000135, "lr": 0.002040, "mb_qsize": 64, "mem": 2715, "time": 0.132603}
json_stats: {"eta": "3:19:30", "iter": 280, "loss": 0.185286, "loss_rpn_bbox_fpn2": 0.016517, "loss_rpn_bbox_fpn3": 0.018762, "loss_rpn_bbox_fpn4": 0.013509, "loss_rpn_bbox_fpn5": 0.004298, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.050691, "loss_rpn_cls_fpn3": 0.030042, "loss_rpn_cls_fpn4": 0.025745, "loss_rpn_cls_fpn5": 0.007770, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.002120, "mb_qsize": 64, "mem": 2715, "time": 0.133421}
json_stats: {"eta": "3:21:04", "iter": 300, "loss": 0.189460, "loss_rpn_bbox_fpn2": 0.013283, "loss_rpn_bbox_fpn3": 0.020217, "loss_rpn_bbox_fpn4": 0.016043, "loss_rpn_bbox_fpn5": 0.003839, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.032285, "loss_rpn_cls_fpn3": 0.035842, "loss_rpn_cls_fpn4": 0.029771, "loss_rpn_cls_fpn5": 0.006564, "loss_rpn_cls_fpn6": 0.000048, "lr": 0.002200, "mb_qsize": 64, "mem": 2720, "time": 0.134497}
json_stats: {"eta": "3:21:43", "iter": 320, "loss": 0.179710, "loss_rpn_bbox_fpn2": 0.007309, "loss_rpn_bbox_fpn3": 0.014993, "loss_rpn_bbox_fpn4": 0.021598, "loss_rpn_bbox_fpn5": 0.002765, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.026618, "loss_rpn_cls_fpn3": 0.030449, "loss_rpn_cls_fpn4": 0.029450, "loss_rpn_cls_fpn5": 0.006355, "loss_rpn_cls_fpn6": 0.000322, "lr": 0.002280, "mb_qsize": 64, "mem": 2720, "time": 0.134968}
json_stats: {"eta": "3:22:30", "iter": 340, "loss": 0.185125, "loss_rpn_bbox_fpn2": 0.017727, "loss_rpn_bbox_fpn3": 0.021978, "loss_rpn_bbox_fpn4": 0.026603, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.037376, "loss_rpn_cls_fpn3": 0.029450, "loss_rpn_cls_fpn4": 0.029910, "loss_rpn_cls_fpn5": 0.004518, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.002360, "mb_qsize": 64, "mem": 2724, "time": 0.135514}
json_stats: {"eta": "3:24:19", "iter": 360, "loss": 0.186849, "loss_rpn_bbox_fpn2": 0.012562, "loss_rpn_bbox_fpn3": 0.031709, "loss_rpn_bbox_fpn4": 0.026527, "loss_rpn_bbox_fpn5": 0.000352, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.037198, "loss_rpn_cls_fpn3": 0.039418, "loss_rpn_cls_fpn4": 0.025358, "loss_rpn_cls_fpn5": 0.002824, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.002440, "mb_qsize": 64, "mem": 2724, "time": 0.136766}
json_stats: {"eta": "3:26:01", "iter": 380, "loss": 0.155117, "loss_rpn_bbox_fpn2": 0.008243, "loss_rpn_bbox_fpn3": 0.018529, "loss_rpn_bbox_fpn4": 0.010713, "loss_rpn_bbox_fpn5": 0.003214, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.028212, "loss_rpn_cls_fpn3": 0.035531, "loss_rpn_cls_fpn4": 0.020065, "loss_rpn_cls_fpn5": 0.004489, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.002520, "mb_qsize": 64, "mem": 2726, "time": 0.137935}
json_stats: {"eta": "3:26:30", "iter": 400, "loss": 0.175958, "loss_rpn_bbox_fpn2": 0.011976, "loss_rpn_bbox_fpn3": 0.027003, "loss_rpn_bbox_fpn4": 0.010047, "loss_rpn_bbox_fpn5": 0.000527, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.035906, "loss_rpn_cls_fpn3": 0.039550, "loss_rpn_cls_fpn4": 0.016541, "loss_rpn_cls_fpn5": 0.002450, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.002600, "mb_qsize": 64, "mem": 2730, "time": 0.138286}
json_stats: {"eta": "3:26:42", "iter": 420, "loss": 0.183739, "loss_rpn_bbox_fpn2": 0.016689, "loss_rpn_bbox_fpn3": 0.030840, "loss_rpn_bbox_fpn4": 0.009883, "loss_rpn_bbox_fpn5": 0.001592, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.041504, "loss_rpn_cls_fpn3": 0.030988, "loss_rpn_cls_fpn4": 0.020273, "loss_rpn_cls_fpn5": 0.003839, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.002680, "mb_qsize": 64, "mem": 2733, "time": 0.138455}
json_stats: {"eta": "3:27:12", "iter": 440, "loss": 0.195303, "loss_rpn_bbox_fpn2": 0.010283, "loss_rpn_bbox_fpn3": 0.021047, "loss_rpn_bbox_fpn4": 0.019359, "loss_rpn_bbox_fpn5": 0.003144, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.035178, "loss_rpn_cls_fpn3": 0.035063, "loss_rpn_cls_fpn4": 0.023489, "loss_rpn_cls_fpn5": 0.005754, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.002760, "mb_qsize": 63, "mem": 2738, "time": 0.138814}
json_stats: {"eta": "3:27:04", "iter": 460, "loss": 0.168517, "loss_rpn_bbox_fpn2": 0.013839, "loss_rpn_bbox_fpn3": 0.011083, "loss_rpn_bbox_fpn4": 0.022766, "loss_rpn_bbox_fpn5": 0.003375, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.023962, "loss_rpn_cls_fpn3": 0.023207, "loss_rpn_cls_fpn4": 0.016852, "loss_rpn_cls_fpn5": 0.005701, "loss_rpn_cls_fpn6": 0.000288, "lr": 0.002840, "mb_qsize": 64, "mem": 2738, "time": 0.138764}
json_stats: {"eta": "3:27:00", "iter": 480, "loss": 0.162253, "loss_rpn_bbox_fpn2": 0.010007, "loss_rpn_bbox_fpn3": 0.026704, "loss_rpn_bbox_fpn4": 0.011742, "loss_rpn_bbox_fpn5": 0.004504, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018595, "loss_rpn_cls_fpn3": 0.029394, "loss_rpn_cls_fpn4": 0.021368, "loss_rpn_cls_fpn5": 0.005026, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.002920, "mb_qsize": 64, "mem": 2738, "time": 0.138747}
json_stats: {"eta": "3:27:00", "iter": 500, "loss": 0.097913, "loss_rpn_bbox_fpn2": 0.010981, "loss_rpn_bbox_fpn3": 0.013115, "loss_rpn_bbox_fpn4": 0.010797, "loss_rpn_bbox_fpn5": 0.000496, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.016149, "loss_rpn_cls_fpn3": 0.016542, "loss_rpn_cls_fpn4": 0.014723, "loss_rpn_cls_fpn5": 0.002873, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2738, "time": 0.138773}
json_stats: {"eta": "3:27:02", "iter": 520, "loss": 0.150527, "loss_rpn_bbox_fpn2": 0.011552, "loss_rpn_bbox_fpn3": 0.023259, "loss_rpn_bbox_fpn4": 0.017312, "loss_rpn_bbox_fpn5": 0.000744, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.025755, "loss_rpn_cls_fpn3": 0.027604, "loss_rpn_cls_fpn4": 0.018225, "loss_rpn_cls_fpn5": 0.002021, "loss_rpn_cls_fpn6": 0.000013, "lr": 0.003000, "mb_qsize": 64, "mem": 2738, "time": 0.138824}
json_stats: {"eta": "3:27:39", "iter": 540, "loss": 0.150192, "loss_rpn_bbox_fpn2": 0.013085, "loss_rpn_bbox_fpn3": 0.014744, "loss_rpn_bbox_fpn4": 0.015855, "loss_rpn_bbox_fpn5": 0.003503, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.024373, "loss_rpn_cls_fpn3": 0.030501, "loss_rpn_cls_fpn4": 0.018145, "loss_rpn_cls_fpn5": 0.003417, "loss_rpn_cls_fpn6": 0.000069, "lr": 0.003000, "mb_qsize": 64, "mem": 2740, "time": 0.139277}
json_stats: {"eta": "3:27:43", "iter": 560, "loss": 0.112003, "loss_rpn_bbox_fpn2": 0.009974, "loss_rpn_bbox_fpn3": 0.011808, "loss_rpn_bbox_fpn4": 0.011813, "loss_rpn_bbox_fpn5": 0.000926, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018200, "loss_rpn_cls_fpn3": 0.023201, "loss_rpn_cls_fpn4": 0.014712, "loss_rpn_cls_fpn5": 0.002171, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2740, "time": 0.139349}
json_stats: {"eta": "3:28:14", "iter": 580, "loss": 0.110373, "loss_rpn_bbox_fpn2": 0.009679, "loss_rpn_bbox_fpn3": 0.013736, "loss_rpn_bbox_fpn4": 0.012310, "loss_rpn_bbox_fpn5": 0.004917, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.020788, "loss_rpn_cls_fpn3": 0.020247, "loss_rpn_cls_fpn4": 0.012949, "loss_rpn_cls_fpn5": 0.004567, "loss_rpn_cls_fpn6": 0.000101, "lr": 0.003000, "mb_qsize": 64, "mem": 2743, "time": 0.139727}
json_stats: {"eta": "3:28:17", "iter": 600, "loss": 0.126024, "loss_rpn_bbox_fpn2": 0.007007, "loss_rpn_bbox_fpn3": 0.018397, "loss_rpn_bbox_fpn4": 0.013733, "loss_rpn_bbox_fpn5": 0.002715, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018696, "loss_rpn_cls_fpn3": 0.023580, "loss_rpn_cls_fpn4": 0.016191, "loss_rpn_cls_fpn5": 0.002018, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 63, "mem": 2743, "time": 0.139796}
json_stats: {"eta": "3:27:50", "iter": 620, "loss": 0.127069, "loss_rpn_bbox_fpn2": 0.008927, "loss_rpn_bbox_fpn3": 0.012706, "loss_rpn_bbox_fpn4": 0.013672, "loss_rpn_bbox_fpn5": 0.007386, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.022499, "loss_rpn_cls_fpn3": 0.024480, "loss_rpn_cls_fpn4": 0.018448, "loss_rpn_cls_fpn5": 0.004789, "loss_rpn_cls_fpn6": 0.000017, "lr": 0.003000, "mb_qsize": 64, "mem": 2743, "time": 0.139528}
json_stats: {"eta": "3:27:46", "iter": 640, "loss": 0.163103, "loss_rpn_bbox_fpn2": 0.014956, "loss_rpn_bbox_fpn3": 0.024469, "loss_rpn_bbox_fpn4": 0.019065, "loss_rpn_bbox_fpn5": 0.001218, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.024338, "loss_rpn_cls_fpn3": 0.023672, "loss_rpn_cls_fpn4": 0.018921, "loss_rpn_cls_fpn5": 0.003849, "loss_rpn_cls_fpn6": 0.000012, "lr": 0.003000, "mb_qsize": 64, "mem": 2744, "time": 0.139504}
json_stats: {"eta": "3:28:11", "iter": 660, "loss": 0.152350, "loss_rpn_bbox_fpn2": 0.009871, "loss_rpn_bbox_fpn3": 0.025155, "loss_rpn_bbox_fpn4": 0.010598, "loss_rpn_bbox_fpn5": 0.000349, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.022837, "loss_rpn_cls_fpn3": 0.030248, "loss_rpn_cls_fpn4": 0.015172, "loss_rpn_cls_fpn5": 0.001279, "loss_rpn_cls_fpn6": 0.000009, "lr": 0.003000, "mb_qsize": 64, "mem": 2747, "time": 0.139825}
json_stats: {"eta": "3:27:48", "iter": 680, "loss": 0.105829, "loss_rpn_bbox_fpn2": 0.006975, "loss_rpn_bbox_fpn3": 0.016579, "loss_rpn_bbox_fpn4": 0.008418, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.016633, "loss_rpn_cls_fpn3": 0.014662, "loss_rpn_cls_fpn4": 0.009526, "loss_rpn_cls_fpn5": 0.001429, "loss_rpn_cls_fpn6": 0.000024, "lr": 0.003000, "mb_qsize": 64, "mem": 2747, "time": 0.139599}
json_stats: {"eta": "3:27:53", "iter": 700, "loss": 0.120113, "loss_rpn_bbox_fpn2": 0.006181, "loss_rpn_bbox_fpn3": 0.017363, "loss_rpn_bbox_fpn4": 0.009856, "loss_rpn_bbox_fpn5": 0.000741, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.021743, "loss_rpn_cls_fpn3": 0.019251, "loss_rpn_cls_fpn4": 0.008298, "loss_rpn_cls_fpn5": 0.002383, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2747, "time": 0.139680}
json_stats: {"eta": "3:28:11", "iter": 720, "loss": 0.127178, "loss_rpn_bbox_fpn2": 0.007930, "loss_rpn_bbox_fpn3": 0.018678, "loss_rpn_bbox_fpn4": 0.013363, "loss_rpn_bbox_fpn5": 0.005239, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.021542, "loss_rpn_cls_fpn3": 0.028244, "loss_rpn_cls_fpn4": 0.016331, "loss_rpn_cls_fpn5": 0.004356, "loss_rpn_cls_fpn6": 0.000006, "lr": 0.003000, "mb_qsize": 64, "mem": 2749, "time": 0.139908}
json_stats: {"eta": "3:28:04", "iter": 740, "loss": 0.082967, "loss_rpn_bbox_fpn2": 0.006008, "loss_rpn_bbox_fpn3": 0.011327, "loss_rpn_bbox_fpn4": 0.008662, "loss_rpn_bbox_fpn5": 0.000272, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015498, "loss_rpn_cls_fpn3": 0.016039, "loss_rpn_cls_fpn4": 0.009758, "loss_rpn_cls_fpn5": 0.002037, "loss_rpn_cls_fpn6": 0.000009, "lr": 0.003000, "mb_qsize": 64, "mem": 2753, "time": 0.139861}
json_stats: {"eta": "3:27:35", "iter": 760, "loss": 0.132343, "loss_rpn_bbox_fpn2": 0.013046, "loss_rpn_bbox_fpn3": 0.019158, "loss_rpn_bbox_fpn4": 0.012958, "loss_rpn_bbox_fpn5": 0.001621, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.024787, "loss_rpn_cls_fpn3": 0.033489, "loss_rpn_cls_fpn4": 0.014785, "loss_rpn_cls_fpn5": 0.003012, "loss_rpn_cls_fpn6": 0.000079, "lr": 0.003000, "mb_qsize": 64, "mem": 2753, "time": 0.139575}
json_stats: {"eta": "3:27:36", "iter": 780, "loss": 0.141921, "loss_rpn_bbox_fpn2": 0.011039, "loss_rpn_bbox_fpn3": 0.013140, "loss_rpn_bbox_fpn4": 0.012368, "loss_rpn_bbox_fpn5": 0.003915, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.028897, "loss_rpn_cls_fpn3": 0.015836, "loss_rpn_cls_fpn4": 0.013771, "loss_rpn_cls_fpn5": 0.002876, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2753, "time": 0.139615}
json_stats: {"eta": "3:27:13", "iter": 800, "loss": 0.143081, "loss_rpn_bbox_fpn2": 0.012722, "loss_rpn_bbox_fpn3": 0.018997, "loss_rpn_bbox_fpn4": 0.015643, "loss_rpn_bbox_fpn5": 0.002031, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.024715, "loss_rpn_cls_fpn3": 0.023735, "loss_rpn_cls_fpn4": 0.011358, "loss_rpn_cls_fpn5": 0.002262, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2753, "time": 0.139389}
json_stats: {"eta": "3:27:02", "iter": 820, "loss": 0.096462, "loss_rpn_bbox_fpn2": 0.007604, "loss_rpn_bbox_fpn3": 0.016253, "loss_rpn_bbox_fpn4": 0.009194, "loss_rpn_bbox_fpn5": 0.000761, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.020415, "loss_rpn_cls_fpn3": 0.017934, "loss_rpn_cls_fpn4": 0.007809, "loss_rpn_cls_fpn5": 0.001485, "loss_rpn_cls_fpn6": 0.000016, "lr": 0.003000, "mb_qsize": 64, "mem": 2753, "time": 0.139300}
json_stats: {"eta": "3:26:44", "iter": 840, "loss": 0.105527, "loss_rpn_bbox_fpn2": 0.009441, "loss_rpn_bbox_fpn3": 0.013988, "loss_rpn_bbox_fpn4": 0.016838, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.016278, "loss_rpn_cls_fpn3": 0.019234, "loss_rpn_cls_fpn4": 0.011033, "loss_rpn_cls_fpn5": 0.001425, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2753, "time": 0.139122}
json_stats: {"eta": "3:27:00", "iter": 860, "loss": 0.109893, "loss_rpn_bbox_fpn2": 0.013762, "loss_rpn_bbox_fpn3": 0.012306, "loss_rpn_bbox_fpn4": 0.008736, "loss_rpn_bbox_fpn5": 0.004769, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.019490, "loss_rpn_cls_fpn3": 0.014208, "loss_rpn_cls_fpn4": 0.008292, "loss_rpn_cls_fpn5": 0.001845, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2753, "time": 0.139338}
json_stats: {"eta": "3:26:54", "iter": 880, "loss": 0.111042, "loss_rpn_bbox_fpn2": 0.008019, "loss_rpn_bbox_fpn3": 0.014116, "loss_rpn_bbox_fpn4": 0.009063, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.019311, "loss_rpn_cls_fpn3": 0.015633, "loss_rpn_cls_fpn4": 0.010916, "loss_rpn_cls_fpn5": 0.001231, "loss_rpn_cls_fpn6": 0.000016, "lr": 0.003000, "mb_qsize": 64, "mem": 2753, "time": 0.139304}
json_stats: {"eta": "3:26:48", "iter": 900, "loss": 0.098948, "loss_rpn_bbox_fpn2": 0.010645, "loss_rpn_bbox_fpn3": 0.011994, "loss_rpn_bbox_fpn4": 0.014812, "loss_rpn_bbox_fpn5": 0.001094, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.013033, "loss_rpn_cls_fpn3": 0.017001, "loss_rpn_cls_fpn4": 0.011812, "loss_rpn_cls_fpn5": 0.001769, "loss_rpn_cls_fpn6": 0.000008, "lr": 0.003000, "mb_qsize": 64, "mem": 2753, "time": 0.139263}
json_stats: {"eta": "3:26:44", "iter": 920, "loss": 0.106305, "loss_rpn_bbox_fpn2": 0.011253, "loss_rpn_bbox_fpn3": 0.019342, "loss_rpn_bbox_fpn4": 0.013505, "loss_rpn_bbox_fpn5": 0.001418, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.019244, "loss_rpn_cls_fpn3": 0.016560, "loss_rpn_cls_fpn4": 0.011868, "loss_rpn_cls_fpn5": 0.001682, "loss_rpn_cls_fpn6": 0.000004, "lr": 0.003000, "mb_qsize": 64, "mem": 2753, "time": 0.139248}
json_stats: {"eta": "3:26:51", "iter": 940, "loss": 0.135623, "loss_rpn_bbox_fpn2": 0.012037, "loss_rpn_bbox_fpn3": 0.010880, "loss_rpn_bbox_fpn4": 0.009957, "loss_rpn_bbox_fpn5": 0.004383, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.030216, "loss_rpn_cls_fpn3": 0.020197, "loss_rpn_cls_fpn4": 0.011311, "loss_rpn_cls_fpn5": 0.003386, "loss_rpn_cls_fpn6": 0.000016, "lr": 0.003000, "mb_qsize": 64, "mem": 2753, "time": 0.139361}
json_stats: {"eta": "3:26:49", "iter": 960, "loss": 0.115811, "loss_rpn_bbox_fpn2": 0.007303, "loss_rpn_bbox_fpn3": 0.016072, "loss_rpn_bbox_fpn4": 0.008955, "loss_rpn_bbox_fpn5": 0.004168, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.017514, "loss_rpn_cls_fpn3": 0.017473, "loss_rpn_cls_fpn4": 0.010513, "loss_rpn_cls_fpn5": 0.004445, "loss_rpn_cls_fpn6": 0.000004, "lr": 0.003000, "mb_qsize": 64, "mem": 2753, "time": 0.139370}
json_stats: {"eta": "3:26:32", "iter": 980, "loss": 0.118994, "loss_rpn_bbox_fpn2": 0.007375, "loss_rpn_bbox_fpn3": 0.015740, "loss_rpn_bbox_fpn4": 0.020789, "loss_rpn_bbox_fpn5": 0.000017, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.016478, "loss_rpn_cls_fpn3": 0.016674, "loss_rpn_cls_fpn4": 0.011583, "loss_rpn_cls_fpn5": 0.000859, "loss_rpn_cls_fpn6": 0.000006, "lr": 0.003000, "mb_qsize": 64, "mem": 2753, "time": 0.139216}
json_stats: {"eta": "3:26:25", "iter": 1000, "loss": 0.119509, "loss_rpn_bbox_fpn2": 0.008464, "loss_rpn_bbox_fpn3": 0.014243, "loss_rpn_bbox_fpn4": 0.013317, "loss_rpn_bbox_fpn5": 0.001267, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.023406, "loss_rpn_cls_fpn3": 0.017927, "loss_rpn_cls_fpn4": 0.009603, "loss_rpn_cls_fpn5": 0.002303, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2754, "time": 0.139161}
json_stats: {"eta": "3:26:09", "iter": 1020, "loss": 0.094721, "loss_rpn_bbox_fpn2": 0.008304, "loss_rpn_bbox_fpn3": 0.009139, "loss_rpn_bbox_fpn4": 0.011617, "loss_rpn_bbox_fpn5": 0.003182, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.022895, "loss_rpn_cls_fpn3": 0.014093, "loss_rpn_cls_fpn4": 0.010987, "loss_rpn_cls_fpn5": 0.003485, "loss_rpn_cls_fpn6": 0.000021, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.139018}
json_stats: {"eta": "3:26:06", "iter": 1040, "loss": 0.111439, "loss_rpn_bbox_fpn2": 0.007101, "loss_rpn_bbox_fpn3": 0.012284, "loss_rpn_bbox_fpn4": 0.016831, "loss_rpn_bbox_fpn5": 0.006485, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.022190, "loss_rpn_cls_fpn3": 0.013208, "loss_rpn_cls_fpn4": 0.012617, "loss_rpn_cls_fpn5": 0.003204, "loss_rpn_cls_fpn6": 0.000025, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.139010}
json_stats: {"eta": "3:25:56", "iter": 1060, "loss": 0.068770, "loss_rpn_bbox_fpn2": 0.007733, "loss_rpn_bbox_fpn3": 0.012791, "loss_rpn_bbox_fpn4": 0.005618, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015537, "loss_rpn_cls_fpn3": 0.011277, "loss_rpn_cls_fpn4": 0.008085, "loss_rpn_cls_fpn5": 0.000871, "loss_rpn_cls_fpn6": 0.000035, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.138931}
json_stats: {"eta": "3:25:47", "iter": 1080, "loss": 0.112234, "loss_rpn_bbox_fpn2": 0.008359, "loss_rpn_bbox_fpn3": 0.018398, "loss_rpn_bbox_fpn4": 0.008159, "loss_rpn_bbox_fpn5": 0.001338, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.022910, "loss_rpn_cls_fpn3": 0.014733, "loss_rpn_cls_fpn4": 0.009500, "loss_rpn_cls_fpn5": 0.001620, "loss_rpn_cls_fpn6": 0.000015, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.138865}
json_stats: {"eta": "3:25:42", "iter": 1100, "loss": 0.097312, "loss_rpn_bbox_fpn2": 0.007954, "loss_rpn_bbox_fpn3": 0.014977, "loss_rpn_bbox_fpn4": 0.009806, "loss_rpn_bbox_fpn5": 0.001465, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018366, "loss_rpn_cls_fpn3": 0.015339, "loss_rpn_cls_fpn4": 0.010981, "loss_rpn_cls_fpn5": 0.001522, "loss_rpn_cls_fpn6": 0.000022, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.138839}
json_stats: {"eta": "3:25:21", "iter": 1120, "loss": 0.068224, "loss_rpn_bbox_fpn2": 0.004660, "loss_rpn_bbox_fpn3": 0.011313, "loss_rpn_bbox_fpn4": 0.007940, "loss_rpn_bbox_fpn5": 0.003583, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008499, "loss_rpn_cls_fpn3": 0.013739, "loss_rpn_cls_fpn4": 0.007058, "loss_rpn_cls_fpn5": 0.002396, "loss_rpn_cls_fpn6": 0.000046, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.138625}
json_stats: {"eta": "3:25:10", "iter": 1140, "loss": 0.111896, "loss_rpn_bbox_fpn2": 0.009394, "loss_rpn_bbox_fpn3": 0.017590, "loss_rpn_bbox_fpn4": 0.015334, "loss_rpn_bbox_fpn5": 0.001154, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.022162, "loss_rpn_cls_fpn3": 0.021510, "loss_rpn_cls_fpn4": 0.009131, "loss_rpn_cls_fpn5": 0.003341, "loss_rpn_cls_fpn6": 0.000063, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.138537}
json_stats: {"eta": "3:25:39", "iter": 1160, "loss": 0.113115, "loss_rpn_bbox_fpn2": 0.010728, "loss_rpn_bbox_fpn3": 0.015188, "loss_rpn_bbox_fpn4": 0.021118, "loss_rpn_bbox_fpn5": 0.001151, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018571, "loss_rpn_cls_fpn3": 0.016452, "loss_rpn_cls_fpn4": 0.011312, "loss_rpn_cls_fpn5": 0.002125, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.138891}
json_stats: {"eta": "3:25:07", "iter": 1180, "loss": 0.093950, "loss_rpn_bbox_fpn2": 0.008222, "loss_rpn_bbox_fpn3": 0.009239, "loss_rpn_bbox_fpn4": 0.009735, "loss_rpn_bbox_fpn5": 0.004315, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.013988, "loss_rpn_cls_fpn3": 0.012824, "loss_rpn_cls_fpn4": 0.009515, "loss_rpn_cls_fpn5": 0.001510, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.138567}
json_stats: {"eta": "3:25:18", "iter": 1200, "loss": 0.098619, "loss_rpn_bbox_fpn2": 0.006737, "loss_rpn_bbox_fpn3": 0.014988, "loss_rpn_bbox_fpn4": 0.015233, "loss_rpn_bbox_fpn5": 0.000678, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010316, "loss_rpn_cls_fpn3": 0.016748, "loss_rpn_cls_fpn4": 0.008037, "loss_rpn_cls_fpn5": 0.001305, "loss_rpn_cls_fpn6": 0.000007, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.138726}
json_stats: {"eta": "3:25:24", "iter": 1220, "loss": 0.096121, "loss_rpn_bbox_fpn2": 0.004907, "loss_rpn_bbox_fpn3": 0.009120, "loss_rpn_bbox_fpn4": 0.010734, "loss_rpn_bbox_fpn5": 0.002219, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012817, "loss_rpn_cls_fpn3": 0.016725, "loss_rpn_cls_fpn4": 0.010003, "loss_rpn_cls_fpn5": 0.002508, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.138816}
json_stats: {"eta": "3:25:07", "iter": 1240, "loss": 0.054054, "loss_rpn_bbox_fpn2": 0.003947, "loss_rpn_bbox_fpn3": 0.008124, "loss_rpn_bbox_fpn4": 0.008578, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006281, "loss_rpn_cls_fpn3": 0.008946, "loss_rpn_cls_fpn4": 0.004744, "loss_rpn_cls_fpn5": 0.000408, "loss_rpn_cls_fpn6": 0.000003, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.138658}
json_stats: {"eta": "3:25:37", "iter": 1260, "loss": 0.109455, "loss_rpn_bbox_fpn2": 0.008603, "loss_rpn_bbox_fpn3": 0.014519, "loss_rpn_bbox_fpn4": 0.012658, "loss_rpn_bbox_fpn5": 0.001463, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.025786, "loss_rpn_cls_fpn3": 0.017631, "loss_rpn_cls_fpn4": 0.013052, "loss_rpn_cls_fpn5": 0.002197, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.139031}
json_stats: {"eta": "3:25:49", "iter": 1280, "loss": 0.109463, "loss_rpn_bbox_fpn2": 0.011692, "loss_rpn_bbox_fpn3": 0.016872, "loss_rpn_bbox_fpn4": 0.013427, "loss_rpn_bbox_fpn5": 0.001624, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018771, "loss_rpn_cls_fpn3": 0.018293, "loss_rpn_cls_fpn4": 0.011891, "loss_rpn_cls_fpn5": 0.001018, "loss_rpn_cls_fpn6": 0.000015, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.139192}
json_stats: {"eta": "3:25:48", "iter": 1300, "loss": 0.098514, "loss_rpn_bbox_fpn2": 0.006134, "loss_rpn_bbox_fpn3": 0.016061, "loss_rpn_bbox_fpn4": 0.013639, "loss_rpn_bbox_fpn5": 0.003296, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.017582, "loss_rpn_cls_fpn3": 0.016274, "loss_rpn_cls_fpn4": 0.009839, "loss_rpn_cls_fpn5": 0.001878, "loss_rpn_cls_fpn6": 0.000087, "lr": 0.003000, "mb_qsize": 64, "mem": 2757, "time": 0.139216}
json_stats: {"eta": "3:25:53", "iter": 1320, "loss": 0.090358, "loss_rpn_bbox_fpn2": 0.011129, "loss_rpn_bbox_fpn3": 0.013132, "loss_rpn_bbox_fpn4": 0.009552, "loss_rpn_bbox_fpn5": 0.001755, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015994, "loss_rpn_cls_fpn3": 0.012702, "loss_rpn_cls_fpn4": 0.008587, "loss_rpn_cls_fpn5": 0.001718, "loss_rpn_cls_fpn6": 0.000006, "lr": 0.003000, "mb_qsize": 64, "mem": 2758, "time": 0.139304}
json_stats: {"eta": "3:25:43", "iter": 1340, "loss": 0.130127, "loss_rpn_bbox_fpn2": 0.010603, "loss_rpn_bbox_fpn3": 0.024468, "loss_rpn_bbox_fpn4": 0.015241, "loss_rpn_bbox_fpn5": 0.000149, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014895, "loss_rpn_cls_fpn3": 0.020649, "loss_rpn_cls_fpn4": 0.010757, "loss_rpn_cls_fpn5": 0.001303, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2760, "time": 0.139228}
json_stats: {"eta": "3:25:28", "iter": 1360, "loss": 0.095343, "loss_rpn_bbox_fpn2": 0.010192, "loss_rpn_bbox_fpn3": 0.012613, "loss_rpn_bbox_fpn4": 0.011299, "loss_rpn_bbox_fpn5": 0.001774, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018130, "loss_rpn_cls_fpn3": 0.014112, "loss_rpn_cls_fpn4": 0.008582, "loss_rpn_cls_fpn5": 0.000964, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2760, "time": 0.139090}
json_stats: {"eta": "3:25:29", "iter": 1380, "loss": 0.119144, "loss_rpn_bbox_fpn2": 0.012929, "loss_rpn_bbox_fpn3": 0.020435, "loss_rpn_bbox_fpn4": 0.008553, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.026262, "loss_rpn_cls_fpn3": 0.017047, "loss_rpn_cls_fpn4": 0.008607, "loss_rpn_cls_fpn5": 0.000380, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2760, "time": 0.139128}
json_stats: {"eta": "3:25:37", "iter": 1400, "loss": 0.076198, "loss_rpn_bbox_fpn2": 0.008965, "loss_rpn_bbox_fpn3": 0.007271, "loss_rpn_bbox_fpn4": 0.011615, "loss_rpn_bbox_fpn5": 0.003171, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014735, "loss_rpn_cls_fpn3": 0.007702, "loss_rpn_cls_fpn4": 0.006601, "loss_rpn_cls_fpn5": 0.001492, "loss_rpn_cls_fpn6": 0.000006, "lr": 0.003000, "mb_qsize": 64, "mem": 2760, "time": 0.139247}
json_stats: {"eta": "3:25:40", "iter": 1420, "loss": 0.069807, "loss_rpn_bbox_fpn2": 0.003109, "loss_rpn_bbox_fpn3": 0.008787, "loss_rpn_bbox_fpn4": 0.009241, "loss_rpn_bbox_fpn5": 0.000359, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009846, "loss_rpn_cls_fpn3": 0.012501, "loss_rpn_cls_fpn4": 0.008139, "loss_rpn_cls_fpn5": 0.000968, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2760, "time": 0.139310}
json_stats: {"eta": "3:25:39", "iter": 1440, "loss": 0.090655, "loss_rpn_bbox_fpn2": 0.011051, "loss_rpn_bbox_fpn3": 0.014477, "loss_rpn_bbox_fpn4": 0.012579, "loss_rpn_bbox_fpn5": 0.002642, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.019625, "loss_rpn_cls_fpn3": 0.014208, "loss_rpn_cls_fpn4": 0.009111, "loss_rpn_cls_fpn5": 0.002520, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2760, "time": 0.139333}
json_stats: {"eta": "3:25:37", "iter": 1460, "loss": 0.102262, "loss_rpn_bbox_fpn2": 0.007069, "loss_rpn_bbox_fpn3": 0.017409, "loss_rpn_bbox_fpn4": 0.011270, "loss_rpn_bbox_fpn5": 0.003935, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.016313, "loss_rpn_cls_fpn3": 0.017118, "loss_rpn_cls_fpn4": 0.009362, "loss_rpn_cls_fpn5": 0.003639, "loss_rpn_cls_fpn6": 0.000016, "lr": 0.003000, "mb_qsize": 64, "mem": 2760, "time": 0.139342}
json_stats: {"eta": "3:25:29", "iter": 1480, "loss": 0.095511, "loss_rpn_bbox_fpn2": 0.007189, "loss_rpn_bbox_fpn3": 0.014687, "loss_rpn_bbox_fpn4": 0.011799, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.019254, "loss_rpn_cls_fpn3": 0.015250, "loss_rpn_cls_fpn4": 0.006965, "loss_rpn_cls_fpn5": 0.000569, "loss_rpn_cls_fpn6": 0.000003, "lr": 0.003000, "mb_qsize": 64, "mem": 2760, "time": 0.139281}
json_stats: {"eta": "3:25:22", "iter": 1500, "loss": 0.099697, "loss_rpn_bbox_fpn2": 0.007987, "loss_rpn_bbox_fpn3": 0.015751, "loss_rpn_bbox_fpn4": 0.010246, "loss_rpn_bbox_fpn5": 0.000470, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.024040, "loss_rpn_cls_fpn3": 0.014039, "loss_rpn_cls_fpn4": 0.006775, "loss_rpn_cls_fpn5": 0.000853, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2764, "time": 0.139241}
json_stats: {"eta": "3:25:29", "iter": 1520, "loss": 0.099753, "loss_rpn_bbox_fpn2": 0.005994, "loss_rpn_bbox_fpn3": 0.011563, "loss_rpn_bbox_fpn4": 0.016086, "loss_rpn_bbox_fpn5": 0.001836, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018344, "loss_rpn_cls_fpn3": 0.015752, "loss_rpn_cls_fpn4": 0.009944, "loss_rpn_cls_fpn5": 0.003205, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2764, "time": 0.139349}
json_stats: {"eta": "3:25:29", "iter": 1540, "loss": 0.099345, "loss_rpn_bbox_fpn2": 0.007702, "loss_rpn_bbox_fpn3": 0.008293, "loss_rpn_bbox_fpn4": 0.003631, "loss_rpn_bbox_fpn5": 0.004555, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.024430, "loss_rpn_cls_fpn3": 0.012643, "loss_rpn_cls_fpn4": 0.006326, "loss_rpn_cls_fpn5": 0.004046, "loss_rpn_cls_fpn6": 0.000017, "lr": 0.003000, "mb_qsize": 64, "mem": 2764, "time": 0.139385}
json_stats: {"eta": "3:25:36", "iter": 1560, "loss": 0.103792, "loss_rpn_bbox_fpn2": 0.006925, "loss_rpn_bbox_fpn3": 0.014431, "loss_rpn_bbox_fpn4": 0.007222, "loss_rpn_bbox_fpn5": 0.003126, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015431, "loss_rpn_cls_fpn3": 0.014934, "loss_rpn_cls_fpn4": 0.010868, "loss_rpn_cls_fpn5": 0.001678, "loss_rpn_cls_fpn6": 0.000063, "lr": 0.003000, "mb_qsize": 64, "mem": 2764, "time": 0.139491}
json_stats: {"eta": "3:25:37", "iter": 1580, "loss": 0.086119, "loss_rpn_bbox_fpn2": 0.004958, "loss_rpn_bbox_fpn3": 0.012403, "loss_rpn_bbox_fpn4": 0.012720, "loss_rpn_bbox_fpn5": 0.000214, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015172, "loss_rpn_cls_fpn3": 0.015333, "loss_rpn_cls_fpn4": 0.007702, "loss_rpn_cls_fpn5": 0.000772, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2764, "time": 0.139529}
json_stats: {"eta": "3:25:40", "iter": 1600, "loss": 0.116768, "loss_rpn_bbox_fpn2": 0.010600, "loss_rpn_bbox_fpn3": 0.017762, "loss_rpn_bbox_fpn4": 0.018538, "loss_rpn_bbox_fpn5": 0.002753, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.020781, "loss_rpn_cls_fpn3": 0.016964, "loss_rpn_cls_fpn4": 0.009804, "loss_rpn_cls_fpn5": 0.001382, "loss_rpn_cls_fpn6": 0.000007, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139602}
json_stats: {"eta": "3:25:42", "iter": 1620, "loss": 0.073741, "loss_rpn_bbox_fpn2": 0.007335, "loss_rpn_bbox_fpn3": 0.013414, "loss_rpn_bbox_fpn4": 0.006896, "loss_rpn_bbox_fpn5": 0.003726, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012416, "loss_rpn_cls_fpn3": 0.009284, "loss_rpn_cls_fpn4": 0.007012, "loss_rpn_cls_fpn5": 0.001584, "loss_rpn_cls_fpn6": 0.000006, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139655}
json_stats: {"eta": "3:25:40", "iter": 1640, "loss": 0.085983, "loss_rpn_bbox_fpn2": 0.005763, "loss_rpn_bbox_fpn3": 0.020117, "loss_rpn_bbox_fpn4": 0.012332, "loss_rpn_bbox_fpn5": 0.001787, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.016434, "loss_rpn_cls_fpn3": 0.015963, "loss_rpn_cls_fpn4": 0.007845, "loss_rpn_cls_fpn5": 0.001139, "loss_rpn_cls_fpn6": 0.000005, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139666}
json_stats: {"eta": "3:25:52", "iter": 1660, "loss": 0.104704, "loss_rpn_bbox_fpn2": 0.006508, "loss_rpn_bbox_fpn3": 0.013093, "loss_rpn_bbox_fpn4": 0.015356, "loss_rpn_bbox_fpn5": 0.003721, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018055, "loss_rpn_cls_fpn3": 0.011815, "loss_rpn_cls_fpn4": 0.010125, "loss_rpn_cls_fpn5": 0.002952, "loss_rpn_cls_fpn6": 0.000010, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139835}
json_stats: {"eta": "3:25:29", "iter": 1680, "loss": 0.100919, "loss_rpn_bbox_fpn2": 0.010005, "loss_rpn_bbox_fpn3": 0.011861, "loss_rpn_bbox_fpn4": 0.012321, "loss_rpn_bbox_fpn5": 0.002240, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.017549, "loss_rpn_cls_fpn3": 0.011482, "loss_rpn_cls_fpn4": 0.008083, "loss_rpn_cls_fpn5": 0.002642, "loss_rpn_cls_fpn6": 0.000024, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139606}
json_stats: {"eta": "3:25:27", "iter": 1700, "loss": 0.095865, "loss_rpn_bbox_fpn2": 0.005508, "loss_rpn_bbox_fpn3": 0.015263, "loss_rpn_bbox_fpn4": 0.014272, "loss_rpn_bbox_fpn5": 0.002376, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015185, "loss_rpn_cls_fpn3": 0.013386, "loss_rpn_cls_fpn4": 0.010227, "loss_rpn_cls_fpn5": 0.001898, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139613}
json_stats: {"eta": "3:25:39", "iter": 1720, "loss": 0.094727, "loss_rpn_bbox_fpn2": 0.010082, "loss_rpn_bbox_fpn3": 0.017828, "loss_rpn_bbox_fpn4": 0.006750, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.020262, "loss_rpn_cls_fpn3": 0.015602, "loss_rpn_cls_fpn4": 0.004182, "loss_rpn_cls_fpn5": 0.000877, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139775}
json_stats: {"eta": "3:25:29", "iter": 1740, "loss": 0.081940, "loss_rpn_bbox_fpn2": 0.005952, "loss_rpn_bbox_fpn3": 0.011189, "loss_rpn_bbox_fpn4": 0.006927, "loss_rpn_bbox_fpn5": 0.001411, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.011182, "loss_rpn_cls_fpn3": 0.009576, "loss_rpn_cls_fpn4": 0.005542, "loss_rpn_cls_fpn5": 0.001009, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139691}
json_stats: {"eta": "3:25:26", "iter": 1760, "loss": 0.067974, "loss_rpn_bbox_fpn2": 0.007157, "loss_rpn_bbox_fpn3": 0.011662, "loss_rpn_bbox_fpn4": 0.006888, "loss_rpn_bbox_fpn5": 0.004476, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014392, "loss_rpn_cls_fpn3": 0.008978, "loss_rpn_cls_fpn4": 0.010144, "loss_rpn_cls_fpn5": 0.001890, "loss_rpn_cls_fpn6": 0.000038, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139694}
json_stats: {"eta": "3:25:26", "iter": 1780, "loss": 0.093337, "loss_rpn_bbox_fpn2": 0.009664, "loss_rpn_bbox_fpn3": 0.015082, "loss_rpn_bbox_fpn4": 0.006362, "loss_rpn_bbox_fpn5": 0.000859, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.020980, "loss_rpn_cls_fpn3": 0.011978, "loss_rpn_cls_fpn4": 0.008021, "loss_rpn_cls_fpn5": 0.000555, "loss_rpn_cls_fpn6": 0.000008, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139728}
json_stats: {"eta": "3:25:18", "iter": 1800, "loss": 0.091464, "loss_rpn_bbox_fpn2": 0.007300, "loss_rpn_bbox_fpn3": 0.012857, "loss_rpn_bbox_fpn4": 0.008456, "loss_rpn_bbox_fpn5": 0.003185, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.017123, "loss_rpn_cls_fpn3": 0.013678, "loss_rpn_cls_fpn4": 0.008844, "loss_rpn_cls_fpn5": 0.001408, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139670}
json_stats: {"eta": "3:25:05", "iter": 1820, "loss": 0.088989, "loss_rpn_bbox_fpn2": 0.007816, "loss_rpn_bbox_fpn3": 0.019014, "loss_rpn_bbox_fpn4": 0.007186, "loss_rpn_bbox_fpn5": 0.000548, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015330, "loss_rpn_cls_fpn3": 0.013313, "loss_rpn_cls_fpn4": 0.005821, "loss_rpn_cls_fpn5": 0.001599, "loss_rpn_cls_fpn6": 0.000004, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139545}
json_stats: {"eta": "3:24:58", "iter": 1840, "loss": 0.097505, "loss_rpn_bbox_fpn2": 0.010493, "loss_rpn_bbox_fpn3": 0.015720, "loss_rpn_bbox_fpn4": 0.011496, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.021186, "loss_rpn_cls_fpn3": 0.014527, "loss_rpn_cls_fpn4": 0.006552, "loss_rpn_cls_fpn5": 0.000205, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139506}
json_stats: {"eta": "3:24:53", "iter": 1860, "loss": 0.092612, "loss_rpn_bbox_fpn2": 0.008308, "loss_rpn_bbox_fpn3": 0.011278, "loss_rpn_bbox_fpn4": 0.009528, "loss_rpn_bbox_fpn5": 0.000789, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014001, "loss_rpn_cls_fpn3": 0.011999, "loss_rpn_cls_fpn4": 0.007280, "loss_rpn_cls_fpn5": 0.000786, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139475}
json_stats: {"eta": "3:24:43", "iter": 1880, "loss": 0.074565, "loss_rpn_bbox_fpn2": 0.007461, "loss_rpn_bbox_fpn3": 0.011972, "loss_rpn_bbox_fpn4": 0.005700, "loss_rpn_bbox_fpn5": 0.000300, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014937, "loss_rpn_cls_fpn3": 0.012101, "loss_rpn_cls_fpn4": 0.003838, "loss_rpn_cls_fpn5": 0.000730, "loss_rpn_cls_fpn6": 0.000005, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139391}
json_stats: {"eta": "3:24:26", "iter": 1900, "loss": 0.067013, "loss_rpn_bbox_fpn2": 0.004222, "loss_rpn_bbox_fpn3": 0.009194, "loss_rpn_bbox_fpn4": 0.004770, "loss_rpn_bbox_fpn5": 0.003408, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008020, "loss_rpn_cls_fpn3": 0.012479, "loss_rpn_cls_fpn4": 0.005708, "loss_rpn_cls_fpn5": 0.001296, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139236}
json_stats: {"eta": "3:24:21", "iter": 1920, "loss": 0.063048, "loss_rpn_bbox_fpn2": 0.004325, "loss_rpn_bbox_fpn3": 0.009843, "loss_rpn_bbox_fpn4": 0.012381, "loss_rpn_bbox_fpn5": 0.000939, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008842, "loss_rpn_cls_fpn3": 0.009562, "loss_rpn_cls_fpn4": 0.007721, "loss_rpn_cls_fpn5": 0.001259, "loss_rpn_cls_fpn6": 0.000007, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139205}
json_stats: {"eta": "3:24:16", "iter": 1940, "loss": 0.093015, "loss_rpn_bbox_fpn2": 0.006596, "loss_rpn_bbox_fpn3": 0.013215, "loss_rpn_bbox_fpn4": 0.014614, "loss_rpn_bbox_fpn5": 0.003668, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014373, "loss_rpn_cls_fpn3": 0.016774, "loss_rpn_cls_fpn4": 0.008117, "loss_rpn_cls_fpn5": 0.001743, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139183}
json_stats: {"eta": "3:24:23", "iter": 1960, "loss": 0.078831, "loss_rpn_bbox_fpn2": 0.005908, "loss_rpn_bbox_fpn3": 0.013983, "loss_rpn_bbox_fpn4": 0.008915, "loss_rpn_bbox_fpn5": 0.002045, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.017331, "loss_rpn_cls_fpn3": 0.016815, "loss_rpn_cls_fpn4": 0.005894, "loss_rpn_cls_fpn5": 0.001778, "loss_rpn_cls_fpn6": 0.000019, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139289}
json_stats: {"eta": "3:24:25", "iter": 1980, "loss": 0.091889, "loss_rpn_bbox_fpn2": 0.012051, "loss_rpn_bbox_fpn3": 0.006972, "loss_rpn_bbox_fpn4": 0.010424, "loss_rpn_bbox_fpn5": 0.002843, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018897, "loss_rpn_cls_fpn3": 0.014428, "loss_rpn_cls_fpn4": 0.007480, "loss_rpn_cls_fpn5": 0.002377, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139350}
json_stats: {"eta": "3:24:19", "iter": 2000, "loss": 0.084358, "loss_rpn_bbox_fpn2": 0.006719, "loss_rpn_bbox_fpn3": 0.009763, "loss_rpn_bbox_fpn4": 0.007037, "loss_rpn_bbox_fpn5": 0.000176, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018056, "loss_rpn_cls_fpn3": 0.013982, "loss_rpn_cls_fpn4": 0.007429, "loss_rpn_cls_fpn5": 0.000694, "loss_rpn_cls_fpn6": 0.000005, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139309}
json_stats: {"eta": "3:24:22", "iter": 2020, "loss": 0.085111, "loss_rpn_bbox_fpn2": 0.006427, "loss_rpn_bbox_fpn3": 0.020050, "loss_rpn_bbox_fpn4": 0.011335, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012480, "loss_rpn_cls_fpn3": 0.014866, "loss_rpn_cls_fpn4": 0.007753, "loss_rpn_cls_fpn5": 0.000769, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139375}
json_stats: {"eta": "3:24:22", "iter": 2040, "loss": 0.085342, "loss_rpn_bbox_fpn2": 0.007520, "loss_rpn_bbox_fpn3": 0.013629, "loss_rpn_bbox_fpn4": 0.010317, "loss_rpn_bbox_fpn5": 0.001644, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012096, "loss_rpn_cls_fpn3": 0.014819, "loss_rpn_cls_fpn4": 0.006934, "loss_rpn_cls_fpn5": 0.001122, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139408}
json_stats: {"eta": "3:24:22", "iter": 2060, "loss": 0.104736, "loss_rpn_bbox_fpn2": 0.006524, "loss_rpn_bbox_fpn3": 0.014716, "loss_rpn_bbox_fpn4": 0.010036, "loss_rpn_bbox_fpn5": 0.001967, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015704, "loss_rpn_cls_fpn3": 0.017910, "loss_rpn_cls_fpn4": 0.008799, "loss_rpn_cls_fpn5": 0.000777, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139437}
json_stats: {"eta": "3:24:18", "iter": 2080, "loss": 0.082652, "loss_rpn_bbox_fpn2": 0.008231, "loss_rpn_bbox_fpn3": 0.016830, "loss_rpn_bbox_fpn4": 0.007874, "loss_rpn_bbox_fpn5": 0.002840, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015132, "loss_rpn_cls_fpn3": 0.010635, "loss_rpn_cls_fpn4": 0.005466, "loss_rpn_cls_fpn5": 0.001215, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139424}
json_stats: {"eta": "3:24:02", "iter": 2100, "loss": 0.081506, "loss_rpn_bbox_fpn2": 0.008255, "loss_rpn_bbox_fpn3": 0.013239, "loss_rpn_bbox_fpn4": 0.010778, "loss_rpn_bbox_fpn5": 0.001028, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010997, "loss_rpn_cls_fpn3": 0.015030, "loss_rpn_cls_fpn4": 0.007189, "loss_rpn_cls_fpn5": 0.001168, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2765, "time": 0.139282}
json_stats: {"eta": "3:23:32", "iter": 2120, "loss": 0.090620, "loss_rpn_bbox_fpn2": 0.009910, "loss_rpn_bbox_fpn3": 0.008395, "loss_rpn_bbox_fpn4": 0.007080, "loss_rpn_bbox_fpn5": 0.000050, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015107, "loss_rpn_cls_fpn3": 0.010607, "loss_rpn_cls_fpn4": 0.006787, "loss_rpn_cls_fpn5": 0.000578, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2767, "time": 0.138966}
json_stats: {"eta": "3:23:06", "iter": 2140, "loss": 0.066867, "loss_rpn_bbox_fpn2": 0.005238, "loss_rpn_bbox_fpn3": 0.006781, "loss_rpn_bbox_fpn4": 0.009529, "loss_rpn_bbox_fpn5": 0.002784, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009699, "loss_rpn_cls_fpn3": 0.010812, "loss_rpn_cls_fpn4": 0.006288, "loss_rpn_cls_fpn5": 0.001883, "loss_rpn_cls_fpn6": 0.000006, "lr": 0.003000, "mb_qsize": 64, "mem": 2767, "time": 0.138699}
json_stats: {"eta": "3:22:35", "iter": 2160, "loss": 0.085999, "loss_rpn_bbox_fpn2": 0.007116, "loss_rpn_bbox_fpn3": 0.009138, "loss_rpn_bbox_fpn4": 0.007289, "loss_rpn_bbox_fpn5": 0.003041, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010961, "loss_rpn_cls_fpn3": 0.016647, "loss_rpn_cls_fpn4": 0.007069, "loss_rpn_cls_fpn5": 0.002651, "loss_rpn_cls_fpn6": 0.000003, "lr": 0.003000, "mb_qsize": 64, "mem": 2767, "time": 0.138377}
json_stats: {"eta": "3:22:07", "iter": 2180, "loss": 0.094080, "loss_rpn_bbox_fpn2": 0.006777, "loss_rpn_bbox_fpn3": 0.007543, "loss_rpn_bbox_fpn4": 0.015256, "loss_rpn_bbox_fpn5": 0.000480, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018942, "loss_rpn_cls_fpn3": 0.014498, "loss_rpn_cls_fpn4": 0.008291, "loss_rpn_cls_fpn5": 0.001050, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2767, "time": 0.138099}
json_stats: {"eta": "3:21:40", "iter": 2200, "loss": 0.072102, "loss_rpn_bbox_fpn2": 0.007800, "loss_rpn_bbox_fpn3": 0.010272, "loss_rpn_bbox_fpn4": 0.011173, "loss_rpn_bbox_fpn5": 0.000364, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.011913, "loss_rpn_cls_fpn3": 0.009960, "loss_rpn_cls_fpn4": 0.007191, "loss_rpn_cls_fpn5": 0.001264, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2767, "time": 0.137814}
json_stats: {"eta": "3:21:17", "iter": 2220, "loss": 0.088569, "loss_rpn_bbox_fpn2": 0.010406, "loss_rpn_bbox_fpn3": 0.012771, "loss_rpn_bbox_fpn4": 0.018511, "loss_rpn_bbox_fpn5": 0.001309, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015898, "loss_rpn_cls_fpn3": 0.012430, "loss_rpn_cls_fpn4": 0.010505, "loss_rpn_cls_fpn5": 0.001958, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2767, "time": 0.137592}
json_stats: {"eta": "3:20:47", "iter": 2240, "loss": 0.078169, "loss_rpn_bbox_fpn2": 0.005498, "loss_rpn_bbox_fpn3": 0.010693, "loss_rpn_bbox_fpn4": 0.006434, "loss_rpn_bbox_fpn5": 0.002138, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010611, "loss_rpn_cls_fpn3": 0.008056, "loss_rpn_cls_fpn4": 0.005386, "loss_rpn_cls_fpn5": 0.002479, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2767, "time": 0.137281}
json_stats: {"eta": "3:20:30", "iter": 2260, "loss": 0.077672, "loss_rpn_bbox_fpn2": 0.006463, "loss_rpn_bbox_fpn3": 0.012614, "loss_rpn_bbox_fpn4": 0.011756, "loss_rpn_bbox_fpn5": 0.001905, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.013676, "loss_rpn_cls_fpn3": 0.010708, "loss_rpn_cls_fpn4": 0.005038, "loss_rpn_cls_fpn5": 0.000705, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2769, "time": 0.137114}
json_stats: {"eta": "3:20:07", "iter": 2280, "loss": 0.092531, "loss_rpn_bbox_fpn2": 0.012487, "loss_rpn_bbox_fpn3": 0.013350, "loss_rpn_bbox_fpn4": 0.005004, "loss_rpn_bbox_fpn5": 0.000248, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018601, "loss_rpn_cls_fpn3": 0.011582, "loss_rpn_cls_fpn4": 0.004091, "loss_rpn_cls_fpn5": 0.000821, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2769, "time": 0.136885}
json_stats: {"eta": "3:19:34", "iter": 2300, "loss": 0.069511, "loss_rpn_bbox_fpn2": 0.006669, "loss_rpn_bbox_fpn3": 0.010914, "loss_rpn_bbox_fpn4": 0.004567, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.013707, "loss_rpn_cls_fpn3": 0.008615, "loss_rpn_cls_fpn4": 0.004300, "loss_rpn_cls_fpn5": 0.000112, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2769, "time": 0.136542}
json_stats: {"eta": "3:19:08", "iter": 2320, "loss": 0.084671, "loss_rpn_bbox_fpn2": 0.005599, "loss_rpn_bbox_fpn3": 0.012286, "loss_rpn_bbox_fpn4": 0.010722, "loss_rpn_bbox_fpn5": 0.000091, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014708, "loss_rpn_cls_fpn3": 0.018082, "loss_rpn_cls_fpn4": 0.006496, "loss_rpn_cls_fpn5": 0.000678, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.136275}
json_stats: {"eta": "3:18:44", "iter": 2340, "loss": 0.091555, "loss_rpn_bbox_fpn2": 0.006397, "loss_rpn_bbox_fpn3": 0.015114, "loss_rpn_bbox_fpn4": 0.006844, "loss_rpn_bbox_fpn5": 0.001577, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.013652, "loss_rpn_cls_fpn3": 0.013206, "loss_rpn_cls_fpn4": 0.005390, "loss_rpn_cls_fpn5": 0.000565, "loss_rpn_cls_fpn6": 0.000013, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.136034}
json_stats: {"eta": "3:18:16", "iter": 2360, "loss": 0.074921, "loss_rpn_bbox_fpn2": 0.007703, "loss_rpn_bbox_fpn3": 0.010981, "loss_rpn_bbox_fpn4": 0.005145, "loss_rpn_bbox_fpn5": 0.001273, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014075, "loss_rpn_cls_fpn3": 0.010339, "loss_rpn_cls_fpn4": 0.005191, "loss_rpn_cls_fpn5": 0.001179, "loss_rpn_cls_fpn6": 0.000008, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.135743}
json_stats: {"eta": "3:17:41", "iter": 2380, "loss": 0.078947, "loss_rpn_bbox_fpn2": 0.006203, "loss_rpn_bbox_fpn3": 0.014820, "loss_rpn_bbox_fpn4": 0.010878, "loss_rpn_bbox_fpn5": 0.001097, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.013769, "loss_rpn_cls_fpn3": 0.015344, "loss_rpn_cls_fpn4": 0.003647, "loss_rpn_cls_fpn5": 0.001117, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.135375}
json_stats: {"eta": "3:17:18", "iter": 2400, "loss": 0.096910, "loss_rpn_bbox_fpn2": 0.010883, "loss_rpn_bbox_fpn3": 0.024044, "loss_rpn_bbox_fpn4": 0.013054, "loss_rpn_bbox_fpn5": 0.002417, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.017231, "loss_rpn_cls_fpn3": 0.017963, "loss_rpn_cls_fpn4": 0.008618, "loss_rpn_cls_fpn5": 0.003251, "loss_rpn_cls_fpn6": 0.000013, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.135144}
json_stats: {"eta": "3:16:49", "iter": 2420, "loss": 0.082957, "loss_rpn_bbox_fpn2": 0.009364, "loss_rpn_bbox_fpn3": 0.014679, "loss_rpn_bbox_fpn4": 0.005238, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.013173, "loss_rpn_cls_fpn3": 0.010591, "loss_rpn_cls_fpn4": 0.005632, "loss_rpn_cls_fpn5": 0.000336, "loss_rpn_cls_fpn6": 0.000010, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.134837}
json_stats: {"eta": "3:16:17", "iter": 2440, "loss": 0.076801, "loss_rpn_bbox_fpn2": 0.006727, "loss_rpn_bbox_fpn3": 0.012994, "loss_rpn_bbox_fpn4": 0.009174, "loss_rpn_bbox_fpn5": 0.003346, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015690, "loss_rpn_cls_fpn3": 0.014259, "loss_rpn_cls_fpn4": 0.006884, "loss_rpn_cls_fpn5": 0.001668, "loss_rpn_cls_fpn6": 0.000041, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.134505}
json_stats: {"eta": "3:15:50", "iter": 2460, "loss": 0.061288, "loss_rpn_bbox_fpn2": 0.008177, "loss_rpn_bbox_fpn3": 0.006783, "loss_rpn_bbox_fpn4": 0.010141, "loss_rpn_bbox_fpn5": 0.000434, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010394, "loss_rpn_cls_fpn3": 0.009399, "loss_rpn_cls_fpn4": 0.004617, "loss_rpn_cls_fpn5": 0.000957, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.134232}
json_stats: {"eta": "3:15:22", "iter": 2480, "loss": 0.094124, "loss_rpn_bbox_fpn2": 0.006941, "loss_rpn_bbox_fpn3": 0.015375, "loss_rpn_bbox_fpn4": 0.012137, "loss_rpn_bbox_fpn5": 0.003931, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.019294, "loss_rpn_cls_fpn3": 0.017712, "loss_rpn_cls_fpn4": 0.007925, "loss_rpn_cls_fpn5": 0.001631, "loss_rpn_cls_fpn6": 0.000005, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.133938}
json_stats: {"eta": "3:14:49", "iter": 2500, "loss": 0.085479, "loss_rpn_bbox_fpn2": 0.005523, "loss_rpn_bbox_fpn3": 0.011253, "loss_rpn_bbox_fpn4": 0.013115, "loss_rpn_bbox_fpn5": 0.004186, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.017617, "loss_rpn_cls_fpn3": 0.012847, "loss_rpn_cls_fpn4": 0.005344, "loss_rpn_cls_fpn5": 0.001395, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.133590}
json_stats: {"eta": "3:14:18", "iter": 2520, "loss": 0.060044, "loss_rpn_bbox_fpn2": 0.004347, "loss_rpn_bbox_fpn3": 0.006447, "loss_rpn_bbox_fpn4": 0.009381, "loss_rpn_bbox_fpn5": 0.001139, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006571, "loss_rpn_cls_fpn3": 0.006782, "loss_rpn_cls_fpn4": 0.004720, "loss_rpn_cls_fpn5": 0.002195, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.133266}
json_stats: {"eta": "3:13:55", "iter": 2540, "loss": 0.064876, "loss_rpn_bbox_fpn2": 0.005291, "loss_rpn_bbox_fpn3": 0.009692, "loss_rpn_bbox_fpn4": 0.007496, "loss_rpn_bbox_fpn5": 0.000661, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012034, "loss_rpn_cls_fpn3": 0.008914, "loss_rpn_cls_fpn4": 0.004212, "loss_rpn_cls_fpn5": 0.000988, "loss_rpn_cls_fpn6": 0.000014, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.133044}
json_stats: {"eta": "3:13:31", "iter": 2560, "loss": 0.065135, "loss_rpn_bbox_fpn2": 0.004163, "loss_rpn_bbox_fpn3": 0.013983, "loss_rpn_bbox_fpn4": 0.003690, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.011050, "loss_rpn_cls_fpn3": 0.007095, "loss_rpn_cls_fpn4": 0.004476, "loss_rpn_cls_fpn5": 0.000181, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.132793}
json_stats: {"eta": "3:13:04", "iter": 2580, "loss": 0.064374, "loss_rpn_bbox_fpn2": 0.003684, "loss_rpn_bbox_fpn3": 0.008185, "loss_rpn_bbox_fpn4": 0.008435, "loss_rpn_bbox_fpn5": 0.002687, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006977, "loss_rpn_cls_fpn3": 0.010553, "loss_rpn_cls_fpn4": 0.004818, "loss_rpn_cls_fpn5": 0.002202, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.132518}
json_stats: {"eta": "3:12:38", "iter": 2600, "loss": 0.079906, "loss_rpn_bbox_fpn2": 0.009856, "loss_rpn_bbox_fpn3": 0.010861, "loss_rpn_bbox_fpn4": 0.006830, "loss_rpn_bbox_fpn5": 0.000759, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.017691, "loss_rpn_cls_fpn3": 0.012569, "loss_rpn_cls_fpn4": 0.004639, "loss_rpn_cls_fpn5": 0.000802, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.132250}
json_stats: {"eta": "3:12:16", "iter": 2620, "loss": 0.074042, "loss_rpn_bbox_fpn2": 0.008198, "loss_rpn_bbox_fpn3": 0.016483, "loss_rpn_bbox_fpn4": 0.007722, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.016753, "loss_rpn_cls_fpn3": 0.015111, "loss_rpn_cls_fpn4": 0.006872, "loss_rpn_cls_fpn5": 0.000426, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.132023}
json_stats: {"eta": "3:11:55", "iter": 2640, "loss": 0.060890, "loss_rpn_bbox_fpn2": 0.007282, "loss_rpn_bbox_fpn3": 0.012669, "loss_rpn_bbox_fpn4": 0.012315, "loss_rpn_bbox_fpn5": 0.000079, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010685, "loss_rpn_cls_fpn3": 0.007811, "loss_rpn_cls_fpn4": 0.007390, "loss_rpn_cls_fpn5": 0.000302, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.131818}
json_stats: {"eta": "3:11:34", "iter": 2660, "loss": 0.076003, "loss_rpn_bbox_fpn2": 0.004479, "loss_rpn_bbox_fpn3": 0.007453, "loss_rpn_bbox_fpn4": 0.007740, "loss_rpn_bbox_fpn5": 0.001129, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012161, "loss_rpn_cls_fpn3": 0.011881, "loss_rpn_cls_fpn4": 0.004785, "loss_rpn_cls_fpn5": 0.001236, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.131609}
json_stats: {"eta": "3:11:12", "iter": 2680, "loss": 0.069749, "loss_rpn_bbox_fpn2": 0.003836, "loss_rpn_bbox_fpn3": 0.009880, "loss_rpn_bbox_fpn4": 0.011227, "loss_rpn_bbox_fpn5": 0.004136, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009087, "loss_rpn_cls_fpn3": 0.011598, "loss_rpn_cls_fpn4": 0.009810, "loss_rpn_cls_fpn5": 0.001853, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.131385}
json_stats: {"eta": "3:10:51", "iter": 2700, "loss": 0.083999, "loss_rpn_bbox_fpn2": 0.005623, "loss_rpn_bbox_fpn3": 0.016751, "loss_rpn_bbox_fpn4": 0.008511, "loss_rpn_bbox_fpn5": 0.001566, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010141, "loss_rpn_cls_fpn3": 0.013963, "loss_rpn_cls_fpn4": 0.008067, "loss_rpn_cls_fpn5": 0.001044, "loss_rpn_cls_fpn6": 0.000005, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.131172}
json_stats: {"eta": "3:10:26", "iter": 2720, "loss": 0.078544, "loss_rpn_bbox_fpn2": 0.007591, "loss_rpn_bbox_fpn3": 0.016610, "loss_rpn_bbox_fpn4": 0.012391, "loss_rpn_bbox_fpn5": 0.000331, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015040, "loss_rpn_cls_fpn3": 0.020683, "loss_rpn_cls_fpn4": 0.008413, "loss_rpn_cls_fpn5": 0.000604, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.130918}
json_stats: {"eta": "3:10:07", "iter": 2740, "loss": 0.058505, "loss_rpn_bbox_fpn2": 0.004171, "loss_rpn_bbox_fpn3": 0.009561, "loss_rpn_bbox_fpn4": 0.003351, "loss_rpn_bbox_fpn5": 0.001008, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009670, "loss_rpn_cls_fpn3": 0.007943, "loss_rpn_cls_fpn4": 0.004404, "loss_rpn_cls_fpn5": 0.000404, "loss_rpn_cls_fpn6": 0.000008, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.130725}
json_stats: {"eta": "3:09:43", "iter": 2760, "loss": 0.054656, "loss_rpn_bbox_fpn2": 0.005847, "loss_rpn_bbox_fpn3": 0.010853, "loss_rpn_bbox_fpn4": 0.007141, "loss_rpn_bbox_fpn5": 0.000481, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.011953, "loss_rpn_cls_fpn3": 0.010281, "loss_rpn_cls_fpn4": 0.004293, "loss_rpn_cls_fpn5": 0.000222, "loss_rpn_cls_fpn6": 0.000004, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.130482}
json_stats: {"eta": "3:09:19", "iter": 2780, "loss": 0.059779, "loss_rpn_bbox_fpn2": 0.009859, "loss_rpn_bbox_fpn3": 0.010860, "loss_rpn_bbox_fpn4": 0.008139, "loss_rpn_bbox_fpn5": 0.000037, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009393, "loss_rpn_cls_fpn3": 0.008987, "loss_rpn_cls_fpn4": 0.003463, "loss_rpn_cls_fpn5": 0.000549, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.130234}
json_stats: {"eta": "3:08:55", "iter": 2800, "loss": 0.084611, "loss_rpn_bbox_fpn2": 0.009161, "loss_rpn_bbox_fpn3": 0.010061, "loss_rpn_bbox_fpn4": 0.008058, "loss_rpn_bbox_fpn5": 0.000257, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014781, "loss_rpn_cls_fpn3": 0.009964, "loss_rpn_cls_fpn4": 0.004014, "loss_rpn_cls_fpn5": 0.000378, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.129991}
json_stats: {"eta": "3:08:37", "iter": 2820, "loss": 0.061283, "loss_rpn_bbox_fpn2": 0.006404, "loss_rpn_bbox_fpn3": 0.007589, "loss_rpn_bbox_fpn4": 0.011770, "loss_rpn_bbox_fpn5": 0.003074, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007532, "loss_rpn_cls_fpn3": 0.008846, "loss_rpn_cls_fpn4": 0.006388, "loss_rpn_cls_fpn5": 0.001284, "loss_rpn_cls_fpn6": 0.000043, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.129814}
json_stats: {"eta": "3:08:15", "iter": 2840, "loss": 0.063619, "loss_rpn_bbox_fpn2": 0.005263, "loss_rpn_bbox_fpn3": 0.012136, "loss_rpn_bbox_fpn4": 0.008036, "loss_rpn_bbox_fpn5": 0.000535, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010225, "loss_rpn_cls_fpn3": 0.015696, "loss_rpn_cls_fpn4": 0.004397, "loss_rpn_cls_fpn5": 0.001464, "loss_rpn_cls_fpn6": 0.000005, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.129596}
json_stats: {"eta": "3:07:53", "iter": 2860, "loss": 0.052626, "loss_rpn_bbox_fpn2": 0.004063, "loss_rpn_bbox_fpn3": 0.010763, "loss_rpn_bbox_fpn4": 0.007147, "loss_rpn_bbox_fpn5": 0.002329, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007710, "loss_rpn_cls_fpn3": 0.006551, "loss_rpn_cls_fpn4": 0.004118, "loss_rpn_cls_fpn5": 0.000777, "loss_rpn_cls_fpn6": 0.000012, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.129372}
json_stats: {"eta": "3:07:33", "iter": 2880, "loss": 0.066688, "loss_rpn_bbox_fpn2": 0.006829, "loss_rpn_bbox_fpn3": 0.008677, "loss_rpn_bbox_fpn4": 0.004816, "loss_rpn_bbox_fpn5": 0.001164, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010646, "loss_rpn_cls_fpn3": 0.009540, "loss_rpn_cls_fpn4": 0.005943, "loss_rpn_cls_fpn5": 0.000344, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.129178}
json_stats: {"eta": "3:07:15", "iter": 2900, "loss": 0.093918, "loss_rpn_bbox_fpn2": 0.009721, "loss_rpn_bbox_fpn3": 0.012732, "loss_rpn_bbox_fpn4": 0.006845, "loss_rpn_bbox_fpn5": 0.001577, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.019798, "loss_rpn_cls_fpn3": 0.017567, "loss_rpn_cls_fpn4": 0.005279, "loss_rpn_cls_fpn5": 0.000700, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.128991}
json_stats: {"eta": "3:07:03", "iter": 2920, "loss": 0.095730, "loss_rpn_bbox_fpn2": 0.005067, "loss_rpn_bbox_fpn3": 0.011725, "loss_rpn_bbox_fpn4": 0.006869, "loss_rpn_bbox_fpn5": 0.003648, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014009, "loss_rpn_cls_fpn3": 0.006967, "loss_rpn_cls_fpn4": 0.007452, "loss_rpn_cls_fpn5": 0.001831, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.128885}
json_stats: {"eta": "3:06:39", "iter": 2940, "loss": 0.068500, "loss_rpn_bbox_fpn2": 0.003784, "loss_rpn_bbox_fpn3": 0.008452, "loss_rpn_bbox_fpn4": 0.007530, "loss_rpn_bbox_fpn5": 0.001704, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010055, "loss_rpn_cls_fpn3": 0.011250, "loss_rpn_cls_fpn4": 0.004088, "loss_rpn_cls_fpn5": 0.000354, "loss_rpn_cls_fpn6": 0.000003, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.128646}
json_stats: {"eta": "3:06:14", "iter": 2960, "loss": 0.076947, "loss_rpn_bbox_fpn2": 0.009808, "loss_rpn_bbox_fpn3": 0.015980, "loss_rpn_bbox_fpn4": 0.009327, "loss_rpn_bbox_fpn5": 0.001467, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014729, "loss_rpn_cls_fpn3": 0.011212, "loss_rpn_cls_fpn4": 0.004996, "loss_rpn_cls_fpn5": 0.000785, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.128385}
json_stats: {"eta": "3:05:54", "iter": 2980, "loss": 0.073266, "loss_rpn_bbox_fpn2": 0.008327, "loss_rpn_bbox_fpn3": 0.009498, "loss_rpn_bbox_fpn4": 0.005262, "loss_rpn_bbox_fpn5": 0.003059, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010420, "loss_rpn_cls_fpn3": 0.009707, "loss_rpn_cls_fpn4": 0.005496, "loss_rpn_cls_fpn5": 0.001209, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.128180}
json_stats: {"eta": "3:05:34", "iter": 3000, "loss": 0.058786, "loss_rpn_bbox_fpn2": 0.004815, "loss_rpn_bbox_fpn3": 0.011576, "loss_rpn_bbox_fpn4": 0.008754, "loss_rpn_bbox_fpn5": 0.000194, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009596, "loss_rpn_cls_fpn3": 0.010731, "loss_rpn_cls_fpn4": 0.004824, "loss_rpn_cls_fpn5": 0.001314, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.127986}
json_stats: {"eta": "3:05:15", "iter": 3020, "loss": 0.061323, "loss_rpn_bbox_fpn2": 0.006075, "loss_rpn_bbox_fpn3": 0.013564, "loss_rpn_bbox_fpn4": 0.005422, "loss_rpn_bbox_fpn5": 0.001584, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.011901, "loss_rpn_cls_fpn3": 0.007266, "loss_rpn_cls_fpn4": 0.004026, "loss_rpn_cls_fpn5": 0.002183, "loss_rpn_cls_fpn6": 0.000003, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.127790}
json_stats: {"eta": "3:04:58", "iter": 3040, "loss": 0.051278, "loss_rpn_bbox_fpn2": 0.004475, "loss_rpn_bbox_fpn3": 0.009860, "loss_rpn_bbox_fpn4": 0.004993, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008963, "loss_rpn_cls_fpn3": 0.008750, "loss_rpn_cls_fpn4": 0.003218, "loss_rpn_cls_fpn5": 0.000153, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.127626}
json_stats: {"eta": "3:04:43", "iter": 3060, "loss": 0.069531, "loss_rpn_bbox_fpn2": 0.008932, "loss_rpn_bbox_fpn3": 0.011770, "loss_rpn_bbox_fpn4": 0.012603, "loss_rpn_bbox_fpn5": 0.000808, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.013151, "loss_rpn_cls_fpn3": 0.010799, "loss_rpn_cls_fpn4": 0.005453, "loss_rpn_cls_fpn5": 0.000175, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.127488}
json_stats: {"eta": "3:04:24", "iter": 3080, "loss": 0.050865, "loss_rpn_bbox_fpn2": 0.005825, "loss_rpn_bbox_fpn3": 0.007286, "loss_rpn_bbox_fpn4": 0.005309, "loss_rpn_bbox_fpn5": 0.003596, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007306, "loss_rpn_cls_fpn3": 0.006691, "loss_rpn_cls_fpn4": 0.003520, "loss_rpn_cls_fpn5": 0.000544, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.127295}
json_stats: {"eta": "3:04:07", "iter": 3100, "loss": 0.060450, "loss_rpn_bbox_fpn2": 0.004082, "loss_rpn_bbox_fpn3": 0.011515, "loss_rpn_bbox_fpn4": 0.009207, "loss_rpn_bbox_fpn5": 0.001833, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012990, "loss_rpn_cls_fpn3": 0.008448, "loss_rpn_cls_fpn4": 0.006637, "loss_rpn_cls_fpn5": 0.000751, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.127126}
json_stats: {"eta": "3:03:53", "iter": 3120, "loss": 0.051060, "loss_rpn_bbox_fpn2": 0.005906, "loss_rpn_bbox_fpn3": 0.009738, "loss_rpn_bbox_fpn4": 0.008214, "loss_rpn_bbox_fpn5": 0.002486, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012002, "loss_rpn_cls_fpn3": 0.008546, "loss_rpn_cls_fpn4": 0.004631, "loss_rpn_cls_fpn5": 0.001121, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.127000}
json_stats: {"eta": "3:03:40", "iter": 3140, "loss": 0.071618, "loss_rpn_bbox_fpn2": 0.008991, "loss_rpn_bbox_fpn3": 0.012663, "loss_rpn_bbox_fpn4": 0.009339, "loss_rpn_bbox_fpn5": 0.001060, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.011699, "loss_rpn_cls_fpn3": 0.013030, "loss_rpn_cls_fpn4": 0.004260, "loss_rpn_cls_fpn5": 0.001093, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.126872}
json_stats: {"eta": "3:03:25", "iter": 3160, "loss": 0.075401, "loss_rpn_bbox_fpn2": 0.007313, "loss_rpn_bbox_fpn3": 0.011193, "loss_rpn_bbox_fpn4": 0.012924, "loss_rpn_bbox_fpn5": 0.001073, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010172, "loss_rpn_cls_fpn3": 0.010926, "loss_rpn_cls_fpn4": 0.004466, "loss_rpn_cls_fpn5": 0.001091, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.126729}
json_stats: {"eta": "3:03:10", "iter": 3180, "loss": 0.055860, "loss_rpn_bbox_fpn2": 0.004649, "loss_rpn_bbox_fpn3": 0.013024, "loss_rpn_bbox_fpn4": 0.003858, "loss_rpn_bbox_fpn5": 0.001294, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008010, "loss_rpn_cls_fpn3": 0.010485, "loss_rpn_cls_fpn4": 0.004967, "loss_rpn_cls_fpn5": 0.000819, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.126587}
json_stats: {"eta": "3:02:55", "iter": 3200, "loss": 0.093508, "loss_rpn_bbox_fpn2": 0.004795, "loss_rpn_bbox_fpn3": 0.012315, "loss_rpn_bbox_fpn4": 0.013808, "loss_rpn_bbox_fpn5": 0.001336, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014675, "loss_rpn_cls_fpn3": 0.015659, "loss_rpn_cls_fpn4": 0.005874, "loss_rpn_cls_fpn5": 0.001314, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.126441}
json_stats: {"eta": "3:02:40", "iter": 3220, "loss": 0.054671, "loss_rpn_bbox_fpn2": 0.006438, "loss_rpn_bbox_fpn3": 0.013782, "loss_rpn_bbox_fpn4": 0.005098, "loss_rpn_bbox_fpn5": 0.000222, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008963, "loss_rpn_cls_fpn3": 0.008655, "loss_rpn_cls_fpn4": 0.002907, "loss_rpn_cls_fpn5": 0.000348, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.126300}
json_stats: {"eta": "3:02:23", "iter": 3240, "loss": 0.086067, "loss_rpn_bbox_fpn2": 0.009119, "loss_rpn_bbox_fpn3": 0.010608, "loss_rpn_bbox_fpn4": 0.010281, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.018473, "loss_rpn_cls_fpn3": 0.012165, "loss_rpn_cls_fpn4": 0.006197, "loss_rpn_cls_fpn5": 0.000113, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.126141}
json_stats: {"eta": "3:02:08", "iter": 3260, "loss": 0.082976, "loss_rpn_bbox_fpn2": 0.006338, "loss_rpn_bbox_fpn3": 0.011476, "loss_rpn_bbox_fpn4": 0.009269, "loss_rpn_bbox_fpn5": 0.002895, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012695, "loss_rpn_cls_fpn3": 0.012226, "loss_rpn_cls_fpn4": 0.005957, "loss_rpn_cls_fpn5": 0.001512, "loss_rpn_cls_fpn6": 0.000012, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.125993}
json_stats: {"eta": "3:01:52", "iter": 3280, "loss": 0.057260, "loss_rpn_bbox_fpn2": 0.003805, "loss_rpn_bbox_fpn3": 0.007191, "loss_rpn_bbox_fpn4": 0.007742, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009971, "loss_rpn_cls_fpn3": 0.005975, "loss_rpn_cls_fpn4": 0.003741, "loss_rpn_cls_fpn5": 0.000124, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.125834}
json_stats: {"eta": "3:01:38", "iter": 3300, "loss": 0.060716, "loss_rpn_bbox_fpn2": 0.006968, "loss_rpn_bbox_fpn3": 0.009470, "loss_rpn_bbox_fpn4": 0.008959, "loss_rpn_bbox_fpn5": 0.002658, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008344, "loss_rpn_cls_fpn3": 0.006770, "loss_rpn_cls_fpn4": 0.005983, "loss_rpn_cls_fpn5": 0.001112, "loss_rpn_cls_fpn6": 0.000019, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.125704}
json_stats: {"eta": "3:01:24", "iter": 3320, "loss": 0.068808, "loss_rpn_bbox_fpn2": 0.007050, "loss_rpn_bbox_fpn3": 0.014524, "loss_rpn_bbox_fpn4": 0.003404, "loss_rpn_bbox_fpn5": 0.000477, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.011463, "loss_rpn_cls_fpn3": 0.011261, "loss_rpn_cls_fpn4": 0.003546, "loss_rpn_cls_fpn5": 0.000593, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.125569}
json_stats: {"eta": "3:01:10", "iter": 3340, "loss": 0.055919, "loss_rpn_bbox_fpn2": 0.005721, "loss_rpn_bbox_fpn3": 0.007120, "loss_rpn_bbox_fpn4": 0.005894, "loss_rpn_bbox_fpn5": 0.001526, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006268, "loss_rpn_cls_fpn3": 0.008666, "loss_rpn_cls_fpn4": 0.004285, "loss_rpn_cls_fpn5": 0.001350, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.125437}
json_stats: {"eta": "3:00:56", "iter": 3360, "loss": 0.052183, "loss_rpn_bbox_fpn2": 0.004288, "loss_rpn_bbox_fpn3": 0.009702, "loss_rpn_bbox_fpn4": 0.008623, "loss_rpn_bbox_fpn5": 0.001578, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.011332, "loss_rpn_cls_fpn3": 0.007362, "loss_rpn_cls_fpn4": 0.004932, "loss_rpn_cls_fpn5": 0.000987, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.125304}
json_stats: {"eta": "3:00:38", "iter": 3380, "loss": 0.052537, "loss_rpn_bbox_fpn2": 0.005190, "loss_rpn_bbox_fpn3": 0.012137, "loss_rpn_bbox_fpn4": 0.008966, "loss_rpn_bbox_fpn5": 0.000377, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008822, "loss_rpn_cls_fpn3": 0.009957, "loss_rpn_cls_fpn4": 0.003859, "loss_rpn_cls_fpn5": 0.000383, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.125125}
json_stats: {"eta": "3:00:20", "iter": 3400, "loss": 0.070674, "loss_rpn_bbox_fpn2": 0.006495, "loss_rpn_bbox_fpn3": 0.008956, "loss_rpn_bbox_fpn4": 0.009646, "loss_rpn_bbox_fpn5": 0.000114, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007539, "loss_rpn_cls_fpn3": 0.010440, "loss_rpn_cls_fpn4": 0.003982, "loss_rpn_cls_fpn5": 0.000347, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.124952}
json_stats: {"eta": "3:00:12", "iter": 3420, "loss": 0.084976, "loss_rpn_bbox_fpn2": 0.004446, "loss_rpn_bbox_fpn3": 0.008017, "loss_rpn_bbox_fpn4": 0.014522, "loss_rpn_bbox_fpn5": 0.004406, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010621, "loss_rpn_cls_fpn3": 0.009694, "loss_rpn_cls_fpn4": 0.006084, "loss_rpn_cls_fpn5": 0.001303, "loss_rpn_cls_fpn6": 0.000006, "lr": 0.003000, "mb_qsize": 63, "mem": 2770, "time": 0.124881}
json_stats: {"eta": "2:59:58", "iter": 3440, "loss": 0.057555, "loss_rpn_bbox_fpn2": 0.006119, "loss_rpn_bbox_fpn3": 0.014067, "loss_rpn_bbox_fpn4": 0.003952, "loss_rpn_bbox_fpn5": 0.001956, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008466, "loss_rpn_cls_fpn3": 0.008753, "loss_rpn_cls_fpn4": 0.005069, "loss_rpn_cls_fpn5": 0.000374, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.124757}
json_stats: {"eta": "2:59:43", "iter": 3460, "loss": 0.053116, "loss_rpn_bbox_fpn2": 0.006229, "loss_rpn_bbox_fpn3": 0.008763, "loss_rpn_bbox_fpn4": 0.006378, "loss_rpn_bbox_fpn5": 0.001027, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007870, "loss_rpn_cls_fpn3": 0.008316, "loss_rpn_cls_fpn4": 0.002583, "loss_rpn_cls_fpn5": 0.000613, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.124611}
json_stats: {"eta": "2:59:30", "iter": 3480, "loss": 0.066777, "loss_rpn_bbox_fpn2": 0.006818, "loss_rpn_bbox_fpn3": 0.011086, "loss_rpn_bbox_fpn4": 0.004787, "loss_rpn_bbox_fpn5": 0.003462, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010339, "loss_rpn_cls_fpn3": 0.012823, "loss_rpn_cls_fpn4": 0.004983, "loss_rpn_cls_fpn5": 0.000677, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.124483}
json_stats: {"eta": "2:59:19", "iter": 3500, "loss": 0.062673, "loss_rpn_bbox_fpn2": 0.006563, "loss_rpn_bbox_fpn3": 0.009414, "loss_rpn_bbox_fpn4": 0.009276, "loss_rpn_bbox_fpn5": 0.000987, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010137, "loss_rpn_cls_fpn3": 0.009619, "loss_rpn_cls_fpn4": 0.005826, "loss_rpn_cls_fpn5": 0.000707, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.124386}
json_stats: {"eta": "2:59:06", "iter": 3520, "loss": 0.058812, "loss_rpn_bbox_fpn2": 0.006176, "loss_rpn_bbox_fpn3": 0.013241, "loss_rpn_bbox_fpn4": 0.008231, "loss_rpn_bbox_fpn5": 0.000483, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007987, "loss_rpn_cls_fpn3": 0.009490, "loss_rpn_cls_fpn4": 0.003955, "loss_rpn_cls_fpn5": 0.001118, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.124262}
json_stats: {"eta": "2:58:51", "iter": 3540, "loss": 0.084584, "loss_rpn_bbox_fpn2": 0.007898, "loss_rpn_bbox_fpn3": 0.013297, "loss_rpn_bbox_fpn4": 0.009588, "loss_rpn_bbox_fpn5": 0.000538, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014350, "loss_rpn_cls_fpn3": 0.015914, "loss_rpn_cls_fpn4": 0.005943, "loss_rpn_cls_fpn5": 0.000928, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.124121}
json_stats: {"eta": "2:58:41", "iter": 3560, "loss": 0.069746, "loss_rpn_bbox_fpn2": 0.006430, "loss_rpn_bbox_fpn3": 0.010789, "loss_rpn_bbox_fpn4": 0.008440, "loss_rpn_bbox_fpn5": 0.002050, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012065, "loss_rpn_cls_fpn3": 0.007009, "loss_rpn_cls_fpn4": 0.004053, "loss_rpn_cls_fpn5": 0.001450, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2770, "time": 0.124031}
json_stats: {"eta": "2:58:28", "iter": 3580, "loss": 0.069192, "loss_rpn_bbox_fpn2": 0.005888, "loss_rpn_bbox_fpn3": 0.010959, "loss_rpn_bbox_fpn4": 0.007857, "loss_rpn_bbox_fpn5": 0.003231, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008360, "loss_rpn_cls_fpn3": 0.007246, "loss_rpn_cls_fpn4": 0.009400, "loss_rpn_cls_fpn5": 0.000619, "loss_rpn_cls_fpn6": 0.000003, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.123908}
json_stats: {"eta": "2:58:11", "iter": 3600, "loss": 0.072170, "loss_rpn_bbox_fpn2": 0.005228, "loss_rpn_bbox_fpn3": 0.010478, "loss_rpn_bbox_fpn4": 0.008773, "loss_rpn_bbox_fpn5": 0.000148, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.011038, "loss_rpn_cls_fpn3": 0.011074, "loss_rpn_cls_fpn4": 0.004833, "loss_rpn_cls_fpn5": 0.000355, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.123749}
json_stats: {"eta": "2:57:57", "iter": 3620, "loss": 0.078307, "loss_rpn_bbox_fpn2": 0.008504, "loss_rpn_bbox_fpn3": 0.012355, "loss_rpn_bbox_fpn4": 0.010011, "loss_rpn_bbox_fpn5": 0.000631, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015033, "loss_rpn_cls_fpn3": 0.012536, "loss_rpn_cls_fpn4": 0.007071, "loss_rpn_cls_fpn5": 0.000571, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.123607}
json_stats: {"eta": "2:57:41", "iter": 3640, "loss": 0.074361, "loss_rpn_bbox_fpn2": 0.008059, "loss_rpn_bbox_fpn3": 0.008720, "loss_rpn_bbox_fpn4": 0.011270, "loss_rpn_bbox_fpn5": 0.000740, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008657, "loss_rpn_cls_fpn3": 0.009279, "loss_rpn_cls_fpn4": 0.006354, "loss_rpn_cls_fpn5": 0.000375, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.123451}
json_stats: {"eta": "2:57:28", "iter": 3660, "loss": 0.055317, "loss_rpn_bbox_fpn2": 0.006785, "loss_rpn_bbox_fpn3": 0.008158, "loss_rpn_bbox_fpn4": 0.004571, "loss_rpn_bbox_fpn5": 0.000864, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.013682, "loss_rpn_cls_fpn3": 0.006613, "loss_rpn_cls_fpn4": 0.004216, "loss_rpn_cls_fpn5": 0.001248, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.123337}
json_stats: {"eta": "2:57:17", "iter": 3680, "loss": 0.061536, "loss_rpn_bbox_fpn2": 0.006533, "loss_rpn_bbox_fpn3": 0.012131, "loss_rpn_bbox_fpn4": 0.011201, "loss_rpn_bbox_fpn5": 0.000413, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010432, "loss_rpn_cls_fpn3": 0.010519, "loss_rpn_cls_fpn4": 0.005931, "loss_rpn_cls_fpn5": 0.000404, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.123235}
json_stats: {"eta": "2:57:05", "iter": 3700, "loss": 0.063228, "loss_rpn_bbox_fpn2": 0.005928, "loss_rpn_bbox_fpn3": 0.005650, "loss_rpn_bbox_fpn4": 0.006993, "loss_rpn_bbox_fpn5": 0.000190, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015065, "loss_rpn_cls_fpn3": 0.008956, "loss_rpn_cls_fpn4": 0.006219, "loss_rpn_cls_fpn5": 0.000971, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.123120}
json_stats: {"eta": "2:56:49", "iter": 3720, "loss": 0.045465, "loss_rpn_bbox_fpn2": 0.004551, "loss_rpn_bbox_fpn3": 0.010161, "loss_rpn_bbox_fpn4": 0.005683, "loss_rpn_bbox_fpn5": 0.002002, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009320, "loss_rpn_cls_fpn3": 0.008538, "loss_rpn_cls_fpn4": 0.004551, "loss_rpn_cls_fpn5": 0.001333, "loss_rpn_cls_fpn6": 0.000003, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.122961}
json_stats: {"eta": "2:56:35", "iter": 3740, "loss": 0.056054, "loss_rpn_bbox_fpn2": 0.003984, "loss_rpn_bbox_fpn3": 0.007612, "loss_rpn_bbox_fpn4": 0.006393, "loss_rpn_bbox_fpn5": 0.001506, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006121, "loss_rpn_cls_fpn3": 0.005512, "loss_rpn_cls_fpn4": 0.005660, "loss_rpn_cls_fpn5": 0.000759, "loss_rpn_cls_fpn6": 0.000025, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.122837}
json_stats: {"eta": "2:56:24", "iter": 3760, "loss": 0.059630, "loss_rpn_bbox_fpn2": 0.008073, "loss_rpn_bbox_fpn3": 0.013387, "loss_rpn_bbox_fpn4": 0.009951, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010215, "loss_rpn_cls_fpn3": 0.010253, "loss_rpn_cls_fpn4": 0.004319, "loss_rpn_cls_fpn5": 0.000090, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.122737}
json_stats: {"eta": "2:56:13", "iter": 3780, "loss": 0.066379, "loss_rpn_bbox_fpn2": 0.006219, "loss_rpn_bbox_fpn3": 0.014409, "loss_rpn_bbox_fpn4": 0.005223, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010835, "loss_rpn_cls_fpn3": 0.008948, "loss_rpn_cls_fpn4": 0.004471, "loss_rpn_cls_fpn5": 0.000273, "loss_rpn_cls_fpn6": 0.000013, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.122637}
json_stats: {"eta": "2:55:58", "iter": 3800, "loss": 0.044130, "loss_rpn_bbox_fpn2": 0.003450, "loss_rpn_bbox_fpn3": 0.006517, "loss_rpn_bbox_fpn4": 0.007458, "loss_rpn_bbox_fpn5": 0.001490, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006177, "loss_rpn_cls_fpn3": 0.004129, "loss_rpn_cls_fpn4": 0.002730, "loss_rpn_cls_fpn5": 0.000377, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.122493}
json_stats: {"eta": "2:55:47", "iter": 3820, "loss": 0.044219, "loss_rpn_bbox_fpn2": 0.004968, "loss_rpn_bbox_fpn3": 0.005366, "loss_rpn_bbox_fpn4": 0.005571, "loss_rpn_bbox_fpn5": 0.003735, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005804, "loss_rpn_cls_fpn3": 0.004587, "loss_rpn_cls_fpn4": 0.003193, "loss_rpn_cls_fpn5": 0.002763, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.122386}
json_stats: {"eta": "2:55:33", "iter": 3840, "loss": 0.069480, "loss_rpn_bbox_fpn2": 0.007903, "loss_rpn_bbox_fpn3": 0.009918, "loss_rpn_bbox_fpn4": 0.006695, "loss_rpn_bbox_fpn5": 0.000109, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.014779, "loss_rpn_cls_fpn3": 0.011674, "loss_rpn_cls_fpn4": 0.003050, "loss_rpn_cls_fpn5": 0.000412, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.122255}
json_stats: {"eta": "2:55:19", "iter": 3860, "loss": 0.064119, "loss_rpn_bbox_fpn2": 0.008313, "loss_rpn_bbox_fpn3": 0.011856, "loss_rpn_bbox_fpn4": 0.007190, "loss_rpn_bbox_fpn5": 0.001045, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008763, "loss_rpn_cls_fpn3": 0.007307, "loss_rpn_cls_fpn4": 0.002433, "loss_rpn_cls_fpn5": 0.000194, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.122120}
json_stats: {"eta": "2:55:08", "iter": 3880, "loss": 0.047690, "loss_rpn_bbox_fpn2": 0.004895, "loss_rpn_bbox_fpn3": 0.009104, "loss_rpn_bbox_fpn4": 0.003566, "loss_rpn_bbox_fpn5": 0.001190, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008958, "loss_rpn_cls_fpn3": 0.006665, "loss_rpn_cls_fpn4": 0.003832, "loss_rpn_cls_fpn5": 0.000407, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.122018}
json_stats: {"eta": "2:54:57", "iter": 3900, "loss": 0.064803, "loss_rpn_bbox_fpn2": 0.006734, "loss_rpn_bbox_fpn3": 0.011403, "loss_rpn_bbox_fpn4": 0.010605, "loss_rpn_bbox_fpn5": 0.000701, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015162, "loss_rpn_cls_fpn3": 0.010484, "loss_rpn_cls_fpn4": 0.005150, "loss_rpn_cls_fpn5": 0.000371, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.121922}
json_stats: {"eta": "2:54:45", "iter": 3920, "loss": 0.064390, "loss_rpn_bbox_fpn2": 0.004683, "loss_rpn_bbox_fpn3": 0.009233, "loss_rpn_bbox_fpn4": 0.009454, "loss_rpn_bbox_fpn5": 0.002015, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007768, "loss_rpn_cls_fpn3": 0.007209, "loss_rpn_cls_fpn4": 0.004616, "loss_rpn_cls_fpn5": 0.000582, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.121809}
json_stats: {"eta": "2:54:32", "iter": 3940, "loss": 0.063626, "loss_rpn_bbox_fpn2": 0.006794, "loss_rpn_bbox_fpn3": 0.007122, "loss_rpn_bbox_fpn4": 0.009794, "loss_rpn_bbox_fpn5": 0.002910, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009111, "loss_rpn_cls_fpn3": 0.007176, "loss_rpn_cls_fpn4": 0.004491, "loss_rpn_cls_fpn5": 0.001788, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.121693}
json_stats: {"eta": "2:54:20", "iter": 3960, "loss": 0.060802, "loss_rpn_bbox_fpn2": 0.003975, "loss_rpn_bbox_fpn3": 0.006486, "loss_rpn_bbox_fpn4": 0.007274, "loss_rpn_bbox_fpn5": 0.001572, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007229, "loss_rpn_cls_fpn3": 0.008289, "loss_rpn_cls_fpn4": 0.003891, "loss_rpn_cls_fpn5": 0.001223, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.121577}
json_stats: {"eta": "2:54:11", "iter": 3980, "loss": 0.070670, "loss_rpn_bbox_fpn2": 0.005557, "loss_rpn_bbox_fpn3": 0.012324, "loss_rpn_bbox_fpn4": 0.011720, "loss_rpn_bbox_fpn5": 0.003062, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009047, "loss_rpn_cls_fpn3": 0.011877, "loss_rpn_cls_fpn4": 0.007398, "loss_rpn_cls_fpn5": 0.001605, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.121497}
json_stats: {"eta": "2:54:02", "iter": 4000, "loss": 0.060784, "loss_rpn_bbox_fpn2": 0.005597, "loss_rpn_bbox_fpn3": 0.012619, "loss_rpn_bbox_fpn4": 0.008206, "loss_rpn_bbox_fpn5": 0.001524, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008197, "loss_rpn_cls_fpn3": 0.010483, "loss_rpn_cls_fpn4": 0.004526, "loss_rpn_cls_fpn5": 0.000327, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.121425}
json_stats: {"eta": "2:53:54", "iter": 4020, "loss": 0.043381, "loss_rpn_bbox_fpn2": 0.004146, "loss_rpn_bbox_fpn3": 0.008001, "loss_rpn_bbox_fpn4": 0.007406, "loss_rpn_bbox_fpn5": 0.002999, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004142, "loss_rpn_cls_fpn3": 0.007676, "loss_rpn_cls_fpn4": 0.003558, "loss_rpn_cls_fpn5": 0.001304, "loss_rpn_cls_fpn6": 0.000007, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.121364}
json_stats: {"eta": "2:53:44", "iter": 4040, "loss": 0.061360, "loss_rpn_bbox_fpn2": 0.007644, "loss_rpn_bbox_fpn3": 0.008867, "loss_rpn_bbox_fpn4": 0.005171, "loss_rpn_bbox_fpn5": 0.000466, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015081, "loss_rpn_cls_fpn3": 0.006443, "loss_rpn_cls_fpn4": 0.004874, "loss_rpn_cls_fpn5": 0.000199, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.121271}
json_stats: {"eta": "2:53:35", "iter": 4060, "loss": 0.056844, "loss_rpn_bbox_fpn2": 0.004881, "loss_rpn_bbox_fpn3": 0.012834, "loss_rpn_bbox_fpn4": 0.005733, "loss_rpn_bbox_fpn5": 0.001463, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012896, "loss_rpn_cls_fpn3": 0.010623, "loss_rpn_cls_fpn4": 0.004896, "loss_rpn_cls_fpn5": 0.000485, "loss_rpn_cls_fpn6": 0.000017, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.121194}
json_stats: {"eta": "2:53:26", "iter": 4080, "loss": 0.087355, "loss_rpn_bbox_fpn2": 0.007765, "loss_rpn_bbox_fpn3": 0.014285, "loss_rpn_bbox_fpn4": 0.008777, "loss_rpn_bbox_fpn5": 0.002733, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.015186, "loss_rpn_cls_fpn3": 0.008361, "loss_rpn_cls_fpn4": 0.006165, "loss_rpn_cls_fpn5": 0.001259, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.121118}
json_stats: {"eta": "2:53:13", "iter": 4100, "loss": 0.102613, "loss_rpn_bbox_fpn2": 0.009422, "loss_rpn_bbox_fpn3": 0.019516, "loss_rpn_bbox_fpn4": 0.009497, "loss_rpn_bbox_fpn5": 0.001134, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.016635, "loss_rpn_cls_fpn3": 0.013562, "loss_rpn_cls_fpn4": 0.002519, "loss_rpn_cls_fpn5": 0.000320, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.120994}
json_stats: {"eta": "2:53:01", "iter": 4120, "loss": 0.065345, "loss_rpn_bbox_fpn2": 0.006059, "loss_rpn_bbox_fpn3": 0.009113, "loss_rpn_bbox_fpn4": 0.009688, "loss_rpn_bbox_fpn5": 0.003316, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007320, "loss_rpn_cls_fpn3": 0.011436, "loss_rpn_cls_fpn4": 0.002742, "loss_rpn_cls_fpn5": 0.001275, "loss_rpn_cls_fpn6": 0.000003, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.120880}
json_stats: {"eta": "2:52:52", "iter": 4140, "loss": 0.080844, "loss_rpn_bbox_fpn2": 0.006826, "loss_rpn_bbox_fpn3": 0.015242, "loss_rpn_bbox_fpn4": 0.006481, "loss_rpn_bbox_fpn5": 0.001813, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012340, "loss_rpn_cls_fpn3": 0.014069, "loss_rpn_cls_fpn4": 0.006538, "loss_rpn_cls_fpn5": 0.000754, "loss_rpn_cls_fpn6": 0.000031, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.120802}
json_stats: {"eta": "2:52:41", "iter": 4160, "loss": 0.048531, "loss_rpn_bbox_fpn2": 0.004063, "loss_rpn_bbox_fpn3": 0.007269, "loss_rpn_bbox_fpn4": 0.007341, "loss_rpn_bbox_fpn5": 0.000408, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006776, "loss_rpn_cls_fpn3": 0.007631, "loss_rpn_cls_fpn4": 0.003599, "loss_rpn_cls_fpn5": 0.000679, "loss_rpn_cls_fpn6": 0.000004, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.120705}
json_stats: {"eta": "2:52:32", "iter": 4180, "loss": 0.048594, "loss_rpn_bbox_fpn2": 0.003034, "loss_rpn_bbox_fpn3": 0.008443, "loss_rpn_bbox_fpn4": 0.006014, "loss_rpn_bbox_fpn5": 0.000763, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008941, "loss_rpn_cls_fpn3": 0.011339, "loss_rpn_cls_fpn4": 0.004636, "loss_rpn_cls_fpn5": 0.000522, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.120626}
json_stats: {"eta": "2:52:20", "iter": 4200, "loss": 0.059595, "loss_rpn_bbox_fpn2": 0.006094, "loss_rpn_bbox_fpn3": 0.010349, "loss_rpn_bbox_fpn4": 0.008931, "loss_rpn_bbox_fpn5": 0.000238, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009554, "loss_rpn_cls_fpn3": 0.011332, "loss_rpn_cls_fpn4": 0.003322, "loss_rpn_cls_fpn5": 0.000690, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.120524}
json_stats: {"eta": "2:52:11", "iter": 4220, "loss": 0.043996, "loss_rpn_bbox_fpn2": 0.002667, "loss_rpn_bbox_fpn3": 0.008863, "loss_rpn_bbox_fpn4": 0.006841, "loss_rpn_bbox_fpn5": 0.001850, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.003431, "loss_rpn_cls_fpn3": 0.007782, "loss_rpn_cls_fpn4": 0.003437, "loss_rpn_cls_fpn5": 0.000308, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.120438}
json_stats: {"eta": "2:52:02", "iter": 4240, "loss": 0.068122, "loss_rpn_bbox_fpn2": 0.007197, "loss_rpn_bbox_fpn3": 0.009714, "loss_rpn_bbox_fpn4": 0.011322, "loss_rpn_bbox_fpn5": 0.002150, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008393, "loss_rpn_cls_fpn3": 0.007533, "loss_rpn_cls_fpn4": 0.004570, "loss_rpn_cls_fpn5": 0.001610, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2771, "time": 0.120367}
json_stats: {"eta": "2:51:51", "iter": 4260, "loss": 0.044963, "loss_rpn_bbox_fpn2": 0.005080, "loss_rpn_bbox_fpn3": 0.006758, "loss_rpn_bbox_fpn4": 0.005183, "loss_rpn_bbox_fpn5": 0.002243, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007130, "loss_rpn_cls_fpn3": 0.006541, "loss_rpn_cls_fpn4": 0.003312, "loss_rpn_cls_fpn5": 0.000908, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.120263}
json_stats: {"eta": "2:51:41", "iter": 4280, "loss": 0.052016, "loss_rpn_bbox_fpn2": 0.006457, "loss_rpn_bbox_fpn3": 0.009122, "loss_rpn_bbox_fpn4": 0.005456, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008091, "loss_rpn_cls_fpn3": 0.006566, "loss_rpn_cls_fpn4": 0.005661, "loss_rpn_cls_fpn5": 0.000159, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.120178}
json_stats: {"eta": "2:51:29", "iter": 4300, "loss": 0.064089, "loss_rpn_bbox_fpn2": 0.006200, "loss_rpn_bbox_fpn3": 0.012097, "loss_rpn_bbox_fpn4": 0.010719, "loss_rpn_bbox_fpn5": 0.000184, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010779, "loss_rpn_cls_fpn3": 0.010930, "loss_rpn_cls_fpn4": 0.003764, "loss_rpn_cls_fpn5": 0.000418, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.120069}
json_stats: {"eta": "2:51:20", "iter": 4320, "loss": 0.057730, "loss_rpn_bbox_fpn2": 0.003982, "loss_rpn_bbox_fpn3": 0.011236, "loss_rpn_bbox_fpn4": 0.003727, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007684, "loss_rpn_cls_fpn3": 0.007454, "loss_rpn_cls_fpn4": 0.003172, "loss_rpn_cls_fpn5": 0.000357, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.119982}
json_stats: {"eta": "2:51:07", "iter": 4340, "loss": 0.059423, "loss_rpn_bbox_fpn2": 0.005067, "loss_rpn_bbox_fpn3": 0.009398, "loss_rpn_bbox_fpn4": 0.004610, "loss_rpn_bbox_fpn5": 0.002803, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009655, "loss_rpn_cls_fpn3": 0.006160, "loss_rpn_cls_fpn4": 0.002158, "loss_rpn_cls_fpn5": 0.001322, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.119866}
json_stats: {"eta": "2:50:55", "iter": 4360, "loss": 0.066321, "loss_rpn_bbox_fpn2": 0.005809, "loss_rpn_bbox_fpn3": 0.012375, "loss_rpn_bbox_fpn4": 0.011677, "loss_rpn_bbox_fpn5": 0.001732, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007698, "loss_rpn_cls_fpn3": 0.009003, "loss_rpn_cls_fpn4": 0.004915, "loss_rpn_cls_fpn5": 0.001110, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.119750}
json_stats: {"eta": "2:50:45", "iter": 4380, "loss": 0.069312, "loss_rpn_bbox_fpn2": 0.008956, "loss_rpn_bbox_fpn3": 0.008221, "loss_rpn_bbox_fpn4": 0.004812, "loss_rpn_bbox_fpn5": 0.001692, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012938, "loss_rpn_cls_fpn3": 0.005466, "loss_rpn_cls_fpn4": 0.005524, "loss_rpn_cls_fpn5": 0.000560, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.119663}
json_stats: {"eta": "2:50:35", "iter": 4400, "loss": 0.049237, "loss_rpn_bbox_fpn2": 0.004640, "loss_rpn_bbox_fpn3": 0.008170, "loss_rpn_bbox_fpn4": 0.005938, "loss_rpn_bbox_fpn5": 0.001822, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006923, "loss_rpn_cls_fpn3": 0.005415, "loss_rpn_cls_fpn4": 0.003217, "loss_rpn_cls_fpn5": 0.000279, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.119576}
json_stats: {"eta": "2:50:26", "iter": 4420, "loss": 0.043425, "loss_rpn_bbox_fpn2": 0.003895, "loss_rpn_bbox_fpn3": 0.008516, "loss_rpn_bbox_fpn4": 0.008677, "loss_rpn_bbox_fpn5": 0.000336, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004906, "loss_rpn_cls_fpn3": 0.005388, "loss_rpn_cls_fpn4": 0.002334, "loss_rpn_cls_fpn5": 0.000713, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.119497}
json_stats: {"eta": "2:50:18", "iter": 4440, "loss": 0.039272, "loss_rpn_bbox_fpn2": 0.004318, "loss_rpn_bbox_fpn3": 0.009410, "loss_rpn_bbox_fpn4": 0.004617, "loss_rpn_bbox_fpn5": 0.001932, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005755, "loss_rpn_cls_fpn3": 0.006245, "loss_rpn_cls_fpn4": 0.003330, "loss_rpn_cls_fpn5": 0.000339, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.119428}
json_stats: {"eta": "2:50:08", "iter": 4460, "loss": 0.047489, "loss_rpn_bbox_fpn2": 0.004305, "loss_rpn_bbox_fpn3": 0.008687, "loss_rpn_bbox_fpn4": 0.007132, "loss_rpn_bbox_fpn5": 0.002143, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006814, "loss_rpn_cls_fpn3": 0.008744, "loss_rpn_cls_fpn4": 0.002565, "loss_rpn_cls_fpn5": 0.000681, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.119338}
json_stats: {"eta": "2:50:01", "iter": 4480, "loss": 0.061213, "loss_rpn_bbox_fpn2": 0.006661, "loss_rpn_bbox_fpn3": 0.010473, "loss_rpn_bbox_fpn4": 0.010187, "loss_rpn_bbox_fpn5": 0.002036, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007720, "loss_rpn_cls_fpn3": 0.010950, "loss_rpn_cls_fpn4": 0.004510, "loss_rpn_cls_fpn5": 0.000645, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.119292}
json_stats: {"eta": "2:49:51", "iter": 4500, "loss": 0.063943, "loss_rpn_bbox_fpn2": 0.007486, "loss_rpn_bbox_fpn3": 0.007837, "loss_rpn_bbox_fpn4": 0.008133, "loss_rpn_bbox_fpn5": 0.002575, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008313, "loss_rpn_cls_fpn3": 0.007101, "loss_rpn_cls_fpn4": 0.003887, "loss_rpn_cls_fpn5": 0.000711, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.119197}
json_stats: {"eta": "2:49:40", "iter": 4520, "loss": 0.051920, "loss_rpn_bbox_fpn2": 0.005734, "loss_rpn_bbox_fpn3": 0.011136, "loss_rpn_bbox_fpn4": 0.004764, "loss_rpn_bbox_fpn5": 0.001362, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.019359, "loss_rpn_cls_fpn3": 0.006891, "loss_rpn_cls_fpn4": 0.003390, "loss_rpn_cls_fpn5": 0.000822, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.119104}
json_stats: {"eta": "2:49:30", "iter": 4540, "loss": 0.070925, "loss_rpn_bbox_fpn2": 0.006530, "loss_rpn_bbox_fpn3": 0.008900, "loss_rpn_bbox_fpn4": 0.005041, "loss_rpn_bbox_fpn5": 0.000802, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007123, "loss_rpn_cls_fpn3": 0.006194, "loss_rpn_cls_fpn4": 0.002541, "loss_rpn_cls_fpn5": 0.000397, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.119004}
json_stats: {"eta": "2:49:19", "iter": 4560, "loss": 0.050343, "loss_rpn_bbox_fpn2": 0.004916, "loss_rpn_bbox_fpn3": 0.007499, "loss_rpn_bbox_fpn4": 0.006196, "loss_rpn_bbox_fpn5": 0.000090, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.012295, "loss_rpn_cls_fpn3": 0.007133, "loss_rpn_cls_fpn4": 0.003592, "loss_rpn_cls_fpn5": 0.000233, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118914}
json_stats: {"eta": "2:49:12", "iter": 4580, "loss": 0.060662, "loss_rpn_bbox_fpn2": 0.003205, "loss_rpn_bbox_fpn3": 0.009998, "loss_rpn_bbox_fpn4": 0.008198, "loss_rpn_bbox_fpn5": 0.000098, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008745, "loss_rpn_cls_fpn3": 0.009525, "loss_rpn_cls_fpn4": 0.005501, "loss_rpn_cls_fpn5": 0.000441, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118849}
json_stats: {"eta": "2:49:05", "iter": 4600, "loss": 0.058722, "loss_rpn_bbox_fpn2": 0.005983, "loss_rpn_bbox_fpn3": 0.008958, "loss_rpn_bbox_fpn4": 0.007583, "loss_rpn_bbox_fpn5": 0.000037, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009605, "loss_rpn_cls_fpn3": 0.009812, "loss_rpn_cls_fpn4": 0.003063, "loss_rpn_cls_fpn5": 0.000203, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118804}
json_stats: {"eta": "2:49:00", "iter": 4620, "loss": 0.063282, "loss_rpn_bbox_fpn2": 0.004575, "loss_rpn_bbox_fpn3": 0.008265, "loss_rpn_bbox_fpn4": 0.009250, "loss_rpn_bbox_fpn5": 0.000484, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005902, "loss_rpn_cls_fpn3": 0.007638, "loss_rpn_cls_fpn4": 0.003840, "loss_rpn_cls_fpn5": 0.000700, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118774}
json_stats: {"eta": "2:48:54", "iter": 4640, "loss": 0.057692, "loss_rpn_bbox_fpn2": 0.004138, "loss_rpn_bbox_fpn3": 0.007421, "loss_rpn_bbox_fpn4": 0.005758, "loss_rpn_bbox_fpn5": 0.000736, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.011092, "loss_rpn_cls_fpn3": 0.008298, "loss_rpn_cls_fpn4": 0.006498, "loss_rpn_cls_fpn5": 0.000257, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118727}
json_stats: {"eta": "2:48:48", "iter": 4660, "loss": 0.052854, "loss_rpn_bbox_fpn2": 0.004597, "loss_rpn_bbox_fpn3": 0.008816, "loss_rpn_bbox_fpn4": 0.008741, "loss_rpn_bbox_fpn5": 0.000578, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007786, "loss_rpn_cls_fpn3": 0.009024, "loss_rpn_cls_fpn4": 0.004273, "loss_rpn_cls_fpn5": 0.000675, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118685}
json_stats: {"eta": "2:48:40", "iter": 4680, "loss": 0.072448, "loss_rpn_bbox_fpn2": 0.006739, "loss_rpn_bbox_fpn3": 0.012086, "loss_rpn_bbox_fpn4": 0.011006, "loss_rpn_bbox_fpn5": 0.001900, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007594, "loss_rpn_cls_fpn3": 0.011213, "loss_rpn_cls_fpn4": 0.004253, "loss_rpn_cls_fpn5": 0.000650, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118622}
json_stats: {"eta": "2:48:33", "iter": 4700, "loss": 0.044772, "loss_rpn_bbox_fpn2": 0.004073, "loss_rpn_bbox_fpn3": 0.009093, "loss_rpn_bbox_fpn4": 0.003869, "loss_rpn_bbox_fpn5": 0.003431, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007345, "loss_rpn_cls_fpn3": 0.006123, "loss_rpn_cls_fpn4": 0.002882, "loss_rpn_cls_fpn5": 0.000517, "loss_rpn_cls_fpn6": 0.000019, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118565}
json_stats: {"eta": "2:48:25", "iter": 4720, "loss": 0.073874, "loss_rpn_bbox_fpn2": 0.006863, "loss_rpn_bbox_fpn3": 0.009199, "loss_rpn_bbox_fpn4": 0.010704, "loss_rpn_bbox_fpn5": 0.001173, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006881, "loss_rpn_cls_fpn3": 0.010003, "loss_rpn_cls_fpn4": 0.003198, "loss_rpn_cls_fpn5": 0.000475, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118502}
json_stats: {"eta": "2:48:15", "iter": 4740, "loss": 0.054792, "loss_rpn_bbox_fpn2": 0.004509, "loss_rpn_bbox_fpn3": 0.010029, "loss_rpn_bbox_fpn4": 0.007294, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008099, "loss_rpn_cls_fpn3": 0.007938, "loss_rpn_cls_fpn4": 0.002977, "loss_rpn_cls_fpn5": 0.000035, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118404}
json_stats: {"eta": "2:48:06", "iter": 4760, "loss": 0.051328, "loss_rpn_bbox_fpn2": 0.004928, "loss_rpn_bbox_fpn3": 0.009197, "loss_rpn_bbox_fpn4": 0.006185, "loss_rpn_bbox_fpn5": 0.001419, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006726, "loss_rpn_cls_fpn3": 0.007022, "loss_rpn_cls_fpn4": 0.005927, "loss_rpn_cls_fpn5": 0.000552, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118326}
json_stats: {"eta": "2:47:54", "iter": 4780, "loss": 0.045891, "loss_rpn_bbox_fpn2": 0.005535, "loss_rpn_bbox_fpn3": 0.012417, "loss_rpn_bbox_fpn4": 0.005323, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007385, "loss_rpn_cls_fpn3": 0.005789, "loss_rpn_cls_fpn4": 0.002888, "loss_rpn_cls_fpn5": 0.000142, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118218}
json_stats: {"eta": "2:47:43", "iter": 4800, "loss": 0.048279, "loss_rpn_bbox_fpn2": 0.003343, "loss_rpn_bbox_fpn3": 0.010045, "loss_rpn_bbox_fpn4": 0.004322, "loss_rpn_bbox_fpn5": 0.001888, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007269, "loss_rpn_cls_fpn3": 0.007596, "loss_rpn_cls_fpn4": 0.002384, "loss_rpn_cls_fpn5": 0.000380, "loss_rpn_cls_fpn6": 0.000007, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118118}
json_stats: {"eta": "2:47:35", "iter": 4820, "loss": 0.059054, "loss_rpn_bbox_fpn2": 0.005886, "loss_rpn_bbox_fpn3": 0.013129, "loss_rpn_bbox_fpn4": 0.007424, "loss_rpn_bbox_fpn5": 0.001856, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010041, "loss_rpn_cls_fpn3": 0.011567, "loss_rpn_cls_fpn4": 0.005059, "loss_rpn_cls_fpn5": 0.000494, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118050}
json_stats: {"eta": "2:47:29", "iter": 4840, "loss": 0.037176, "loss_rpn_bbox_fpn2": 0.004972, "loss_rpn_bbox_fpn3": 0.006459, "loss_rpn_bbox_fpn4": 0.005852, "loss_rpn_bbox_fpn5": 0.001376, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004713, "loss_rpn_cls_fpn3": 0.003310, "loss_rpn_cls_fpn4": 0.001475, "loss_rpn_cls_fpn5": 0.000215, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.118004}
json_stats: {"eta": "2:47:23", "iter": 4860, "loss": 0.033116, "loss_rpn_bbox_fpn2": 0.003751, "loss_rpn_bbox_fpn3": 0.007623, "loss_rpn_bbox_fpn4": 0.003301, "loss_rpn_bbox_fpn5": 0.000269, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007983, "loss_rpn_cls_fpn3": 0.002915, "loss_rpn_cls_fpn4": 0.001116, "loss_rpn_cls_fpn5": 0.000198, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117959}
json_stats: {"eta": "2:47:13", "iter": 4880, "loss": 0.051848, "loss_rpn_bbox_fpn2": 0.004792, "loss_rpn_bbox_fpn3": 0.010955, "loss_rpn_bbox_fpn4": 0.010494, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005949, "loss_rpn_cls_fpn3": 0.008450, "loss_rpn_cls_fpn4": 0.003387, "loss_rpn_cls_fpn5": 0.000203, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117879}
json_stats: {"eta": "2:47:06", "iter": 4900, "loss": 0.057505, "loss_rpn_bbox_fpn2": 0.005158, "loss_rpn_bbox_fpn3": 0.005033, "loss_rpn_bbox_fpn4": 0.002913, "loss_rpn_bbox_fpn5": 0.000845, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.011927, "loss_rpn_cls_fpn3": 0.007318, "loss_rpn_cls_fpn4": 0.003338, "loss_rpn_cls_fpn5": 0.000586, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117818}
json_stats: {"eta": "2:46:56", "iter": 4920, "loss": 0.056245, "loss_rpn_bbox_fpn2": 0.007846, "loss_rpn_bbox_fpn3": 0.009684, "loss_rpn_bbox_fpn4": 0.006049, "loss_rpn_bbox_fpn5": 0.000972, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010586, "loss_rpn_cls_fpn3": 0.007173, "loss_rpn_cls_fpn4": 0.003711, "loss_rpn_cls_fpn5": 0.000150, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117735}
json_stats: {"eta": "2:46:49", "iter": 4940, "loss": 0.059700, "loss_rpn_bbox_fpn2": 0.007345, "loss_rpn_bbox_fpn3": 0.009962, "loss_rpn_bbox_fpn4": 0.004714, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008377, "loss_rpn_cls_fpn3": 0.008054, "loss_rpn_cls_fpn4": 0.003794, "loss_rpn_cls_fpn5": 0.000257, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117680}
json_stats: {"eta": "2:46:44", "iter": 4960, "loss": 0.041706, "loss_rpn_bbox_fpn2": 0.004197, "loss_rpn_bbox_fpn3": 0.005603, "loss_rpn_bbox_fpn4": 0.008947, "loss_rpn_bbox_fpn5": 0.002829, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006227, "loss_rpn_cls_fpn3": 0.005029, "loss_rpn_cls_fpn4": 0.004137, "loss_rpn_cls_fpn5": 0.001411, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117649}
json_stats: {"eta": "2:46:35", "iter": 4980, "loss": 0.056180, "loss_rpn_bbox_fpn2": 0.005582, "loss_rpn_bbox_fpn3": 0.011924, "loss_rpn_bbox_fpn4": 0.006435, "loss_rpn_bbox_fpn5": 0.003385, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006290, "loss_rpn_cls_fpn3": 0.008921, "loss_rpn_cls_fpn4": 0.004155, "loss_rpn_cls_fpn5": 0.000762, "loss_rpn_cls_fpn6": 0.000003, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117563}
json_stats: {"eta": "2:46:29", "iter": 5000, "loss": 0.065439, "loss_rpn_bbox_fpn2": 0.005086, "loss_rpn_bbox_fpn3": 0.012184, "loss_rpn_bbox_fpn4": 0.009133, "loss_rpn_bbox_fpn5": 0.003130, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.011048, "loss_rpn_cls_fpn3": 0.009025, "loss_rpn_cls_fpn4": 0.005680, "loss_rpn_cls_fpn5": 0.000838, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117522}
json_stats: {"eta": "2:46:20", "iter": 5020, "loss": 0.065789, "loss_rpn_bbox_fpn2": 0.004938, "loss_rpn_bbox_fpn3": 0.008591, "loss_rpn_bbox_fpn4": 0.010793, "loss_rpn_bbox_fpn5": 0.001486, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004921, "loss_rpn_cls_fpn3": 0.009089, "loss_rpn_cls_fpn4": 0.003706, "loss_rpn_cls_fpn5": 0.000576, "loss_rpn_cls_fpn6": 0.000004, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117450}
json_stats: {"eta": "2:46:16", "iter": 5040, "loss": 0.059018, "loss_rpn_bbox_fpn2": 0.007927, "loss_rpn_bbox_fpn3": 0.016144, "loss_rpn_bbox_fpn4": 0.009477, "loss_rpn_bbox_fpn5": 0.000041, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008479, "loss_rpn_cls_fpn3": 0.007218, "loss_rpn_cls_fpn4": 0.005168, "loss_rpn_cls_fpn5": 0.000215, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117422}
json_stats: {"eta": "2:46:06", "iter": 5060, "loss": 0.050630, "loss_rpn_bbox_fpn2": 0.003813, "loss_rpn_bbox_fpn3": 0.009690, "loss_rpn_bbox_fpn4": 0.009673, "loss_rpn_bbox_fpn5": 0.000888, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008964, "loss_rpn_cls_fpn3": 0.006580, "loss_rpn_cls_fpn4": 0.003561, "loss_rpn_cls_fpn5": 0.000535, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117341}
json_stats: {"eta": "2:45:58", "iter": 5080, "loss": 0.070576, "loss_rpn_bbox_fpn2": 0.006564, "loss_rpn_bbox_fpn3": 0.011121, "loss_rpn_bbox_fpn4": 0.005588, "loss_rpn_bbox_fpn5": 0.002388, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008662, "loss_rpn_cls_fpn3": 0.006668, "loss_rpn_cls_fpn4": 0.002476, "loss_rpn_cls_fpn5": 0.000464, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117270}
json_stats: {"eta": "2:45:51", "iter": 5100, "loss": 0.062931, "loss_rpn_bbox_fpn2": 0.003082, "loss_rpn_bbox_fpn3": 0.009849, "loss_rpn_bbox_fpn4": 0.005006, "loss_rpn_bbox_fpn5": 0.001762, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007102, "loss_rpn_cls_fpn3": 0.010258, "loss_rpn_cls_fpn4": 0.003487, "loss_rpn_cls_fpn5": 0.000457, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117211}
json_stats: {"eta": "2:45:41", "iter": 5120, "loss": 0.058247, "loss_rpn_bbox_fpn2": 0.003603, "loss_rpn_bbox_fpn3": 0.011440, "loss_rpn_bbox_fpn4": 0.007018, "loss_rpn_bbox_fpn5": 0.002738, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007679, "loss_rpn_cls_fpn3": 0.008989, "loss_rpn_cls_fpn4": 0.003362, "loss_rpn_cls_fpn5": 0.001543, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117122}
json_stats: {"eta": "2:45:34", "iter": 5140, "loss": 0.063394, "loss_rpn_bbox_fpn2": 0.003636, "loss_rpn_bbox_fpn3": 0.011348, "loss_rpn_bbox_fpn4": 0.009886, "loss_rpn_bbox_fpn5": 0.001031, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007237, "loss_rpn_cls_fpn3": 0.010642, "loss_rpn_cls_fpn4": 0.004311, "loss_rpn_cls_fpn5": 0.000667, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2772, "time": 0.117072}
json_stats: {"eta": "2:45:28", "iter": 5160, "loss": 0.062146, "loss_rpn_bbox_fpn2": 0.005463, "loss_rpn_bbox_fpn3": 0.007348, "loss_rpn_bbox_fpn4": 0.012327, "loss_rpn_bbox_fpn5": 0.000993, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009819, "loss_rpn_cls_fpn3": 0.011485, "loss_rpn_cls_fpn4": 0.003496, "loss_rpn_cls_fpn5": 0.000153, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.117022}
json_stats: {"eta": "2:45:19", "iter": 5180, "loss": 0.046405, "loss_rpn_bbox_fpn2": 0.005398, "loss_rpn_bbox_fpn3": 0.009206, "loss_rpn_bbox_fpn4": 0.003317, "loss_rpn_bbox_fpn5": 0.000643, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006408, "loss_rpn_cls_fpn3": 0.006929, "loss_rpn_cls_fpn4": 0.001230, "loss_rpn_cls_fpn5": 0.000364, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116951}
json_stats: {"eta": "2:45:14", "iter": 5200, "loss": 0.047447, "loss_rpn_bbox_fpn2": 0.005519, "loss_rpn_bbox_fpn3": 0.006742, "loss_rpn_bbox_fpn4": 0.006286, "loss_rpn_bbox_fpn5": 0.000812, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009593, "loss_rpn_cls_fpn3": 0.007363, "loss_rpn_cls_fpn4": 0.003925, "loss_rpn_cls_fpn5": 0.000489, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116913}
json_stats: {"eta": "2:45:07", "iter": 5220, "loss": 0.057415, "loss_rpn_bbox_fpn2": 0.009489, "loss_rpn_bbox_fpn3": 0.010411, "loss_rpn_bbox_fpn4": 0.007941, "loss_rpn_bbox_fpn5": 0.000981, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004379, "loss_rpn_cls_fpn3": 0.006123, "loss_rpn_cls_fpn4": 0.003810, "loss_rpn_cls_fpn5": 0.000756, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116855}
json_stats: {"eta": "2:45:00", "iter": 5240, "loss": 0.034172, "loss_rpn_bbox_fpn2": 0.002909, "loss_rpn_bbox_fpn3": 0.005881, "loss_rpn_bbox_fpn4": 0.002499, "loss_rpn_bbox_fpn5": 0.000211, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004227, "loss_rpn_cls_fpn3": 0.003005, "loss_rpn_cls_fpn4": 0.001080, "loss_rpn_cls_fpn5": 0.000091, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116812}
json_stats: {"eta": "2:44:53", "iter": 5260, "loss": 0.060861, "loss_rpn_bbox_fpn2": 0.006331, "loss_rpn_bbox_fpn3": 0.012049, "loss_rpn_bbox_fpn4": 0.008315, "loss_rpn_bbox_fpn5": 0.001028, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010066, "loss_rpn_cls_fpn3": 0.008047, "loss_rpn_cls_fpn4": 0.005303, "loss_rpn_cls_fpn5": 0.000327, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116747}
json_stats: {"eta": "2:44:45", "iter": 5280, "loss": 0.063916, "loss_rpn_bbox_fpn2": 0.005630, "loss_rpn_bbox_fpn3": 0.007132, "loss_rpn_bbox_fpn4": 0.007674, "loss_rpn_bbox_fpn5": 0.002915, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005832, "loss_rpn_cls_fpn3": 0.005866, "loss_rpn_cls_fpn4": 0.003887, "loss_rpn_cls_fpn5": 0.000791, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116686}
json_stats: {"eta": "2:44:40", "iter": 5300, "loss": 0.063762, "loss_rpn_bbox_fpn2": 0.007991, "loss_rpn_bbox_fpn3": 0.011533, "loss_rpn_bbox_fpn4": 0.009140, "loss_rpn_bbox_fpn5": 0.000049, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007055, "loss_rpn_cls_fpn3": 0.006846, "loss_rpn_cls_fpn4": 0.002779, "loss_rpn_cls_fpn5": 0.000294, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116650}
json_stats: {"eta": "2:44:35", "iter": 5320, "loss": 0.054646, "loss_rpn_bbox_fpn2": 0.003938, "loss_rpn_bbox_fpn3": 0.009856, "loss_rpn_bbox_fpn4": 0.007103, "loss_rpn_bbox_fpn5": 0.000797, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006152, "loss_rpn_cls_fpn3": 0.008919, "loss_rpn_cls_fpn4": 0.003935, "loss_rpn_cls_fpn5": 0.000274, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116618}
json_stats: {"eta": "2:44:29", "iter": 5340, "loss": 0.053713, "loss_rpn_bbox_fpn2": 0.003659, "loss_rpn_bbox_fpn3": 0.007070, "loss_rpn_bbox_fpn4": 0.007228, "loss_rpn_bbox_fpn5": 0.000851, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004573, "loss_rpn_cls_fpn3": 0.004359, "loss_rpn_cls_fpn4": 0.004269, "loss_rpn_cls_fpn5": 0.000566, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116575}
json_stats: {"eta": "2:44:23", "iter": 5360, "loss": 0.062609, "loss_rpn_bbox_fpn2": 0.007041, "loss_rpn_bbox_fpn3": 0.010641, "loss_rpn_bbox_fpn4": 0.006554, "loss_rpn_bbox_fpn5": 0.002966, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010267, "loss_rpn_cls_fpn3": 0.008971, "loss_rpn_cls_fpn4": 0.003036, "loss_rpn_cls_fpn5": 0.000879, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116539}
json_stats: {"eta": "2:44:17", "iter": 5380, "loss": 0.062370, "loss_rpn_bbox_fpn2": 0.004654, "loss_rpn_bbox_fpn3": 0.009305, "loss_rpn_bbox_fpn4": 0.010317, "loss_rpn_bbox_fpn5": 0.001804, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005434, "loss_rpn_cls_fpn3": 0.006080, "loss_rpn_cls_fpn4": 0.004323, "loss_rpn_cls_fpn5": 0.001672, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116491}
json_stats: {"eta": "2:44:11", "iter": 5400, "loss": 0.075839, "loss_rpn_bbox_fpn2": 0.008016, "loss_rpn_bbox_fpn3": 0.011739, "loss_rpn_bbox_fpn4": 0.005011, "loss_rpn_bbox_fpn5": 0.000016, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007382, "loss_rpn_cls_fpn3": 0.011833, "loss_rpn_cls_fpn4": 0.003927, "loss_rpn_cls_fpn5": 0.000245, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116443}
json_stats: {"eta": "2:44:04", "iter": 5420, "loss": 0.059944, "loss_rpn_bbox_fpn2": 0.005876, "loss_rpn_bbox_fpn3": 0.012507, "loss_rpn_bbox_fpn4": 0.008751, "loss_rpn_bbox_fpn5": 0.001686, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006263, "loss_rpn_cls_fpn3": 0.012041, "loss_rpn_cls_fpn4": 0.002748, "loss_rpn_cls_fpn5": 0.000460, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116391}
json_stats: {"eta": "2:43:55", "iter": 5440, "loss": 0.049474, "loss_rpn_bbox_fpn2": 0.003748, "loss_rpn_bbox_fpn3": 0.005817, "loss_rpn_bbox_fpn4": 0.003479, "loss_rpn_bbox_fpn5": 0.000650, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004703, "loss_rpn_cls_fpn3": 0.007612, "loss_rpn_cls_fpn4": 0.002587, "loss_rpn_cls_fpn5": 0.000510, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116318}
json_stats: {"eta": "2:43:48", "iter": 5460, "loss": 0.053934, "loss_rpn_bbox_fpn2": 0.005313, "loss_rpn_bbox_fpn3": 0.007877, "loss_rpn_bbox_fpn4": 0.005803, "loss_rpn_bbox_fpn5": 0.000416, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010281, "loss_rpn_cls_fpn3": 0.007613, "loss_rpn_cls_fpn4": 0.002198, "loss_rpn_cls_fpn5": 0.000141, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116258}
json_stats: {"eta": "2:43:39", "iter": 5480, "loss": 0.044063, "loss_rpn_bbox_fpn2": 0.004507, "loss_rpn_bbox_fpn3": 0.006728, "loss_rpn_bbox_fpn4": 0.005782, "loss_rpn_bbox_fpn5": 0.001734, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005582, "loss_rpn_cls_fpn3": 0.004764, "loss_rpn_cls_fpn4": 0.002038, "loss_rpn_cls_fpn5": 0.000332, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116183}
json_stats: {"eta": "2:43:33", "iter": 5500, "loss": 0.051242, "loss_rpn_bbox_fpn2": 0.005037, "loss_rpn_bbox_fpn3": 0.010860, "loss_rpn_bbox_fpn4": 0.008538, "loss_rpn_bbox_fpn5": 0.000639, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006109, "loss_rpn_cls_fpn3": 0.009285, "loss_rpn_cls_fpn4": 0.003502, "loss_rpn_cls_fpn5": 0.000595, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116138}
json_stats: {"eta": "2:43:27", "iter": 5520, "loss": 0.050803, "loss_rpn_bbox_fpn2": 0.005182, "loss_rpn_bbox_fpn3": 0.009371, "loss_rpn_bbox_fpn4": 0.009595, "loss_rpn_bbox_fpn5": 0.001275, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007137, "loss_rpn_cls_fpn3": 0.006188, "loss_rpn_cls_fpn4": 0.004891, "loss_rpn_cls_fpn5": 0.000520, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116098}
json_stats: {"eta": "2:43:18", "iter": 5540, "loss": 0.029393, "loss_rpn_bbox_fpn2": 0.002609, "loss_rpn_bbox_fpn3": 0.005809, "loss_rpn_bbox_fpn4": 0.002483, "loss_rpn_bbox_fpn5": 0.002165, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005694, "loss_rpn_cls_fpn3": 0.003833, "loss_rpn_cls_fpn4": 0.001112, "loss_rpn_cls_fpn5": 0.000528, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.116016}
json_stats: {"eta": "2:43:09", "iter": 5560, "loss": 0.054093, "loss_rpn_bbox_fpn2": 0.002646, "loss_rpn_bbox_fpn3": 0.007316, "loss_rpn_bbox_fpn4": 0.007531, "loss_rpn_bbox_fpn5": 0.002714, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005199, "loss_rpn_cls_fpn3": 0.007583, "loss_rpn_cls_fpn4": 0.002907, "loss_rpn_cls_fpn5": 0.000737, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115930}
json_stats: {"eta": "2:43:01", "iter": 5580, "loss": 0.075543, "loss_rpn_bbox_fpn2": 0.007477, "loss_rpn_bbox_fpn3": 0.008988, "loss_rpn_bbox_fpn4": 0.011719, "loss_rpn_bbox_fpn5": 0.000704, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008188, "loss_rpn_cls_fpn3": 0.009775, "loss_rpn_cls_fpn4": 0.005226, "loss_rpn_cls_fpn5": 0.000545, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115872}
json_stats: {"eta": "2:42:53", "iter": 5600, "loss": 0.042951, "loss_rpn_bbox_fpn2": 0.005459, "loss_rpn_bbox_fpn3": 0.009738, "loss_rpn_bbox_fpn4": 0.005590, "loss_rpn_bbox_fpn5": 0.002562, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007181, "loss_rpn_cls_fpn3": 0.005873, "loss_rpn_cls_fpn4": 0.004768, "loss_rpn_cls_fpn5": 0.000462, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115799}
json_stats: {"eta": "2:42:46", "iter": 5620, "loss": 0.032040, "loss_rpn_bbox_fpn2": 0.003644, "loss_rpn_bbox_fpn3": 0.003748, "loss_rpn_bbox_fpn4": 0.003464, "loss_rpn_bbox_fpn5": 0.000144, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004707, "loss_rpn_cls_fpn3": 0.002276, "loss_rpn_cls_fpn4": 0.002123, "loss_rpn_cls_fpn5": 0.000025, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115745}
json_stats: {"eta": "2:42:41", "iter": 5640, "loss": 0.040456, "loss_rpn_bbox_fpn2": 0.004852, "loss_rpn_bbox_fpn3": 0.005198, "loss_rpn_bbox_fpn4": 0.003984, "loss_rpn_bbox_fpn5": 0.001665, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005967, "loss_rpn_cls_fpn3": 0.004658, "loss_rpn_cls_fpn4": 0.002287, "loss_rpn_cls_fpn5": 0.000525, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 63, "mem": 2774, "time": 0.115712}
json_stats: {"eta": "2:42:36", "iter": 5660, "loss": 0.059633, "loss_rpn_bbox_fpn2": 0.009410, "loss_rpn_bbox_fpn3": 0.008680, "loss_rpn_bbox_fpn4": 0.007410, "loss_rpn_bbox_fpn5": 0.000469, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010689, "loss_rpn_cls_fpn3": 0.008202, "loss_rpn_cls_fpn4": 0.002409, "loss_rpn_cls_fpn5": 0.000434, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115684}
json_stats: {"eta": "2:42:27", "iter": 5680, "loss": 0.025997, "loss_rpn_bbox_fpn2": 0.003124, "loss_rpn_bbox_fpn3": 0.005746, "loss_rpn_bbox_fpn4": 0.001818, "loss_rpn_bbox_fpn5": 0.000143, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005241, "loss_rpn_cls_fpn3": 0.002720, "loss_rpn_cls_fpn4": 0.002648, "loss_rpn_cls_fpn5": 0.000267, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115606}
json_stats: {"eta": "2:42:23", "iter": 5700, "loss": 0.088261, "loss_rpn_bbox_fpn2": 0.005998, "loss_rpn_bbox_fpn3": 0.014014, "loss_rpn_bbox_fpn4": 0.007703, "loss_rpn_bbox_fpn5": 0.001120, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008713, "loss_rpn_cls_fpn3": 0.014804, "loss_rpn_cls_fpn4": 0.005285, "loss_rpn_cls_fpn5": 0.000463, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115579}
json_stats: {"eta": "2:42:16", "iter": 5720, "loss": 0.045188, "loss_rpn_bbox_fpn2": 0.003495, "loss_rpn_bbox_fpn3": 0.005847, "loss_rpn_bbox_fpn4": 0.003810, "loss_rpn_bbox_fpn5": 0.000609, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007809, "loss_rpn_cls_fpn3": 0.007892, "loss_rpn_cls_fpn4": 0.001957, "loss_rpn_cls_fpn5": 0.000125, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115528}
json_stats: {"eta": "2:42:09", "iter": 5740, "loss": 0.075849, "loss_rpn_bbox_fpn2": 0.006122, "loss_rpn_bbox_fpn3": 0.010752, "loss_rpn_bbox_fpn4": 0.011629, "loss_rpn_bbox_fpn5": 0.002420, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008365, "loss_rpn_cls_fpn3": 0.007978, "loss_rpn_cls_fpn4": 0.003618, "loss_rpn_cls_fpn5": 0.001182, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115469}
json_stats: {"eta": "2:42:01", "iter": 5760, "loss": 0.043620, "loss_rpn_bbox_fpn2": 0.004756, "loss_rpn_bbox_fpn3": 0.012242, "loss_rpn_bbox_fpn4": 0.005206, "loss_rpn_bbox_fpn5": 0.000133, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006995, "loss_rpn_cls_fpn3": 0.007415, "loss_rpn_cls_fpn4": 0.005151, "loss_rpn_cls_fpn5": 0.000600, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115401}
json_stats: {"eta": "2:41:53", "iter": 5780, "loss": 0.043088, "loss_rpn_bbox_fpn2": 0.003950, "loss_rpn_bbox_fpn3": 0.008110, "loss_rpn_bbox_fpn4": 0.005546, "loss_rpn_bbox_fpn5": 0.002862, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007622, "loss_rpn_cls_fpn3": 0.003869, "loss_rpn_cls_fpn4": 0.003324, "loss_rpn_cls_fpn5": 0.000890, "loss_rpn_cls_fpn6": 0.000012, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115339}
json_stats: {"eta": "2:41:49", "iter": 5800, "loss": 0.058967, "loss_rpn_bbox_fpn2": 0.005612, "loss_rpn_bbox_fpn3": 0.013215, "loss_rpn_bbox_fpn4": 0.007045, "loss_rpn_bbox_fpn5": 0.000415, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007449, "loss_rpn_cls_fpn3": 0.012199, "loss_rpn_cls_fpn4": 0.003191, "loss_rpn_cls_fpn5": 0.000218, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115311}
json_stats: {"eta": "2:41:42", "iter": 5820, "loss": 0.035794, "loss_rpn_bbox_fpn2": 0.002594, "loss_rpn_bbox_fpn3": 0.007074, "loss_rpn_bbox_fpn4": 0.005088, "loss_rpn_bbox_fpn5": 0.001389, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.002248, "loss_rpn_cls_fpn3": 0.002173, "loss_rpn_cls_fpn4": 0.003215, "loss_rpn_cls_fpn5": 0.000222, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115263}
json_stats: {"eta": "2:41:38", "iter": 5840, "loss": 0.054350, "loss_rpn_bbox_fpn2": 0.006296, "loss_rpn_bbox_fpn3": 0.009322, "loss_rpn_bbox_fpn4": 0.006926, "loss_rpn_bbox_fpn5": 0.001516, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008558, "loss_rpn_cls_fpn3": 0.009318, "loss_rpn_cls_fpn4": 0.003601, "loss_rpn_cls_fpn5": 0.000265, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115237}
json_stats: {"eta": "2:41:32", "iter": 5860, "loss": 0.058103, "loss_rpn_bbox_fpn2": 0.007902, "loss_rpn_bbox_fpn3": 0.009765, "loss_rpn_bbox_fpn4": 0.003378, "loss_rpn_bbox_fpn5": 0.000110, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009787, "loss_rpn_cls_fpn3": 0.008059, "loss_rpn_cls_fpn4": 0.003006, "loss_rpn_cls_fpn5": 0.000215, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115192}
json_stats: {"eta": "2:41:25", "iter": 5880, "loss": 0.051331, "loss_rpn_bbox_fpn2": 0.004926, "loss_rpn_bbox_fpn3": 0.014429, "loss_rpn_bbox_fpn4": 0.004224, "loss_rpn_bbox_fpn5": 0.000283, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008507, "loss_rpn_cls_fpn3": 0.005468, "loss_rpn_cls_fpn4": 0.002524, "loss_rpn_cls_fpn5": 0.000067, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115139}
json_stats: {"eta": "2:41:20", "iter": 5900, "loss": 0.065226, "loss_rpn_bbox_fpn2": 0.006040, "loss_rpn_bbox_fpn3": 0.012537, "loss_rpn_bbox_fpn4": 0.012364, "loss_rpn_bbox_fpn5": 0.001148, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007447, "loss_rpn_cls_fpn3": 0.010993, "loss_rpn_cls_fpn4": 0.004397, "loss_rpn_cls_fpn5": 0.001052, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115113}
json_stats: {"eta": "2:41:14", "iter": 5920, "loss": 0.050094, "loss_rpn_bbox_fpn2": 0.005360, "loss_rpn_bbox_fpn3": 0.011288, "loss_rpn_bbox_fpn4": 0.006102, "loss_rpn_bbox_fpn5": 0.000425, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007928, "loss_rpn_cls_fpn3": 0.006515, "loss_rpn_cls_fpn4": 0.004881, "loss_rpn_cls_fpn5": 0.000512, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115068}
json_stats: {"eta": "2:41:07", "iter": 5940, "loss": 0.057695, "loss_rpn_bbox_fpn2": 0.004494, "loss_rpn_bbox_fpn3": 0.010334, "loss_rpn_bbox_fpn4": 0.008181, "loss_rpn_bbox_fpn5": 0.000256, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006117, "loss_rpn_cls_fpn3": 0.006870, "loss_rpn_cls_fpn4": 0.002587, "loss_rpn_cls_fpn5": 0.000125, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.115006}
json_stats: {"eta": "2:41:01", "iter": 5960, "loss": 0.047887, "loss_rpn_bbox_fpn2": 0.002709, "loss_rpn_bbox_fpn3": 0.009618, "loss_rpn_bbox_fpn4": 0.006100, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006341, "loss_rpn_cls_fpn3": 0.006103, "loss_rpn_cls_fpn4": 0.001994, "loss_rpn_cls_fpn5": 0.000076, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.114957}
json_stats: {"eta": "2:40:54", "iter": 5980, "loss": 0.061341, "loss_rpn_bbox_fpn2": 0.005026, "loss_rpn_bbox_fpn3": 0.010148, "loss_rpn_bbox_fpn4": 0.010278, "loss_rpn_bbox_fpn5": 0.003075, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006779, "loss_rpn_cls_fpn3": 0.010335, "loss_rpn_cls_fpn4": 0.003693, "loss_rpn_cls_fpn5": 0.001036, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.114910}
json_stats: {"eta": "2:40:48", "iter": 6000, "loss": 0.068353, "loss_rpn_bbox_fpn2": 0.005536, "loss_rpn_bbox_fpn3": 0.008442, "loss_rpn_bbox_fpn4": 0.011833, "loss_rpn_bbox_fpn5": 0.001531, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006107, "loss_rpn_cls_fpn3": 0.008645, "loss_rpn_cls_fpn4": 0.005709, "loss_rpn_cls_fpn5": 0.000645, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.114860}
json_stats: {"eta": "2:40:41", "iter": 6020, "loss": 0.045150, "loss_rpn_bbox_fpn2": 0.001539, "loss_rpn_bbox_fpn3": 0.006820, "loss_rpn_bbox_fpn4": 0.004717, "loss_rpn_bbox_fpn5": 0.002498, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.002580, "loss_rpn_cls_fpn3": 0.005294, "loss_rpn_cls_fpn4": 0.003327, "loss_rpn_cls_fpn5": 0.000752, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.114812}
json_stats: {"eta": "2:40:35", "iter": 6040, "loss": 0.035065, "loss_rpn_bbox_fpn2": 0.003933, "loss_rpn_bbox_fpn3": 0.004922, "loss_rpn_bbox_fpn4": 0.005932, "loss_rpn_bbox_fpn5": 0.002118, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.003876, "loss_rpn_cls_fpn3": 0.004499, "loss_rpn_cls_fpn4": 0.003135, "loss_rpn_cls_fpn5": 0.000585, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.114765}
json_stats: {"eta": "2:40:29", "iter": 6060, "loss": 0.042612, "loss_rpn_bbox_fpn2": 0.005873, "loss_rpn_bbox_fpn3": 0.006489, "loss_rpn_bbox_fpn4": 0.008348, "loss_rpn_bbox_fpn5": 0.000297, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006697, "loss_rpn_cls_fpn3": 0.009199, "loss_rpn_cls_fpn4": 0.003289, "loss_rpn_cls_fpn5": 0.000189, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2774, "time": 0.114723}
json_stats: {"eta": "2:40:25", "iter": 6080, "loss": 0.043574, "loss_rpn_bbox_fpn2": 0.004201, "loss_rpn_bbox_fpn3": 0.010121, "loss_rpn_bbox_fpn4": 0.005224, "loss_rpn_bbox_fpn5": 0.001221, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007468, "loss_rpn_cls_fpn3": 0.006400, "loss_rpn_cls_fpn4": 0.002686, "loss_rpn_cls_fpn5": 0.000406, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114697}
json_stats: {"eta": "2:40:20", "iter": 6100, "loss": 0.049773, "loss_rpn_bbox_fpn2": 0.005343, "loss_rpn_bbox_fpn3": 0.008035, "loss_rpn_bbox_fpn4": 0.007402, "loss_rpn_bbox_fpn5": 0.000565, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008728, "loss_rpn_cls_fpn3": 0.005453, "loss_rpn_cls_fpn4": 0.001377, "loss_rpn_cls_fpn5": 0.000093, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114666}
json_stats: {"eta": "2:40:16", "iter": 6120, "loss": 0.063760, "loss_rpn_bbox_fpn2": 0.006949, "loss_rpn_bbox_fpn3": 0.010777, "loss_rpn_bbox_fpn4": 0.010112, "loss_rpn_bbox_fpn5": 0.002519, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007385, "loss_rpn_cls_fpn3": 0.006884, "loss_rpn_cls_fpn4": 0.005603, "loss_rpn_cls_fpn5": 0.001562, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114649}
json_stats: {"eta": "2:40:11", "iter": 6140, "loss": 0.056253, "loss_rpn_bbox_fpn2": 0.006795, "loss_rpn_bbox_fpn3": 0.008400, "loss_rpn_bbox_fpn4": 0.009778, "loss_rpn_bbox_fpn5": 0.001632, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006200, "loss_rpn_cls_fpn3": 0.002654, "loss_rpn_cls_fpn4": 0.003344, "loss_rpn_cls_fpn5": 0.000332, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114616}
json_stats: {"eta": "2:40:07", "iter": 6160, "loss": 0.059638, "loss_rpn_bbox_fpn2": 0.003755, "loss_rpn_bbox_fpn3": 0.009506, "loss_rpn_bbox_fpn4": 0.011520, "loss_rpn_bbox_fpn5": 0.003338, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005992, "loss_rpn_cls_fpn3": 0.011195, "loss_rpn_cls_fpn4": 0.005441, "loss_rpn_cls_fpn5": 0.000545, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114593}
json_stats: {"eta": "2:40:01", "iter": 6180, "loss": 0.049503, "loss_rpn_bbox_fpn2": 0.005632, "loss_rpn_bbox_fpn3": 0.009591, "loss_rpn_bbox_fpn4": 0.006710, "loss_rpn_bbox_fpn5": 0.000462, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004122, "loss_rpn_cls_fpn3": 0.006423, "loss_rpn_cls_fpn4": 0.003148, "loss_rpn_cls_fpn5": 0.000358, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114554}
json_stats: {"eta": "2:39:56", "iter": 6200, "loss": 0.054893, "loss_rpn_bbox_fpn2": 0.009213, "loss_rpn_bbox_fpn3": 0.007788, "loss_rpn_bbox_fpn4": 0.004827, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010981, "loss_rpn_cls_fpn3": 0.005959, "loss_rpn_cls_fpn4": 0.001656, "loss_rpn_cls_fpn5": 0.000099, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114520}
json_stats: {"eta": "2:39:49", "iter": 6220, "loss": 0.041346, "loss_rpn_bbox_fpn2": 0.005872, "loss_rpn_bbox_fpn3": 0.010472, "loss_rpn_bbox_fpn4": 0.004010, "loss_rpn_bbox_fpn5": 0.001061, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006613, "loss_rpn_cls_fpn3": 0.009256, "loss_rpn_cls_fpn4": 0.002266, "loss_rpn_cls_fpn5": 0.000524, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114463}
json_stats: {"eta": "2:39:43", "iter": 6240, "loss": 0.051448, "loss_rpn_bbox_fpn2": 0.006838, "loss_rpn_bbox_fpn3": 0.006039, "loss_rpn_bbox_fpn4": 0.004068, "loss_rpn_bbox_fpn5": 0.000964, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007244, "loss_rpn_cls_fpn3": 0.003883, "loss_rpn_cls_fpn4": 0.001839, "loss_rpn_cls_fpn5": 0.000389, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114421}
json_stats: {"eta": "2:39:37", "iter": 6260, "loss": 0.052926, "loss_rpn_bbox_fpn2": 0.004025, "loss_rpn_bbox_fpn3": 0.010116, "loss_rpn_bbox_fpn4": 0.008118, "loss_rpn_bbox_fpn5": 0.001314, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005286, "loss_rpn_cls_fpn3": 0.007668, "loss_rpn_cls_fpn4": 0.006017, "loss_rpn_cls_fpn5": 0.000561, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114374}
json_stats: {"eta": "2:39:31", "iter": 6280, "loss": 0.042464, "loss_rpn_bbox_fpn2": 0.002623, "loss_rpn_bbox_fpn3": 0.007071, "loss_rpn_bbox_fpn4": 0.002672, "loss_rpn_bbox_fpn5": 0.000838, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006098, "loss_rpn_cls_fpn3": 0.005547, "loss_rpn_cls_fpn4": 0.001656, "loss_rpn_cls_fpn5": 0.000310, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114324}
json_stats: {"eta": "2:39:25", "iter": 6300, "loss": 0.046391, "loss_rpn_bbox_fpn2": 0.003739, "loss_rpn_bbox_fpn3": 0.004624, "loss_rpn_bbox_fpn4": 0.003558, "loss_rpn_bbox_fpn5": 0.002650, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.003125, "loss_rpn_cls_fpn3": 0.007540, "loss_rpn_cls_fpn4": 0.003317, "loss_rpn_cls_fpn5": 0.000395, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114289}
json_stats: {"eta": "2:39:20", "iter": 6320, "loss": 0.034722, "loss_rpn_bbox_fpn2": 0.003100, "loss_rpn_bbox_fpn3": 0.005117, "loss_rpn_bbox_fpn4": 0.005109, "loss_rpn_bbox_fpn5": 0.001835, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004496, "loss_rpn_cls_fpn3": 0.003145, "loss_rpn_cls_fpn4": 0.001581, "loss_rpn_cls_fpn5": 0.000709, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114255}
json_stats: {"eta": "2:39:14", "iter": 6340, "loss": 0.052910, "loss_rpn_bbox_fpn2": 0.005835, "loss_rpn_bbox_fpn3": 0.008075, "loss_rpn_bbox_fpn4": 0.008292, "loss_rpn_bbox_fpn5": 0.000099, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006315, "loss_rpn_cls_fpn3": 0.010172, "loss_rpn_cls_fpn4": 0.003650, "loss_rpn_cls_fpn5": 0.000430, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114201}
json_stats: {"eta": "2:39:07", "iter": 6360, "loss": 0.043147, "loss_rpn_bbox_fpn2": 0.004998, "loss_rpn_bbox_fpn3": 0.009596, "loss_rpn_bbox_fpn4": 0.004650, "loss_rpn_bbox_fpn5": 0.000486, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006626, "loss_rpn_cls_fpn3": 0.004897, "loss_rpn_cls_fpn4": 0.001416, "loss_rpn_cls_fpn5": 0.000133, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114149}
json_stats: {"eta": "2:39:02", "iter": 6380, "loss": 0.051148, "loss_rpn_bbox_fpn2": 0.003708, "loss_rpn_bbox_fpn3": 0.010561, "loss_rpn_bbox_fpn4": 0.004690, "loss_rpn_bbox_fpn5": 0.001362, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005774, "loss_rpn_cls_fpn3": 0.004447, "loss_rpn_cls_fpn4": 0.003012, "loss_rpn_cls_fpn5": 0.000326, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114114}
json_stats: {"eta": "2:38:54", "iter": 6400, "loss": 0.044271, "loss_rpn_bbox_fpn2": 0.004857, "loss_rpn_bbox_fpn3": 0.006184, "loss_rpn_bbox_fpn4": 0.002065, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004447, "loss_rpn_cls_fpn3": 0.006858, "loss_rpn_cls_fpn4": 0.001258, "loss_rpn_cls_fpn5": 0.000020, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114049}
json_stats: {"eta": "2:38:47", "iter": 6420, "loss": 0.043579, "loss_rpn_bbox_fpn2": 0.003426, "loss_rpn_bbox_fpn3": 0.010490, "loss_rpn_bbox_fpn4": 0.006360, "loss_rpn_bbox_fpn5": 0.001334, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005952, "loss_rpn_cls_fpn3": 0.007033, "loss_rpn_cls_fpn4": 0.003269, "loss_rpn_cls_fpn5": 0.000228, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113992}
json_stats: {"eta": "2:38:42", "iter": 6440, "loss": 0.042556, "loss_rpn_bbox_fpn2": 0.002895, "loss_rpn_bbox_fpn3": 0.010928, "loss_rpn_bbox_fpn4": 0.006427, "loss_rpn_bbox_fpn5": 0.000740, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005407, "loss_rpn_cls_fpn3": 0.007771, "loss_rpn_cls_fpn4": 0.002585, "loss_rpn_cls_fpn5": 0.000406, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113957}
json_stats: {"eta": "2:38:35", "iter": 6460, "loss": 0.040526, "loss_rpn_bbox_fpn2": 0.003904, "loss_rpn_bbox_fpn3": 0.010479, "loss_rpn_bbox_fpn4": 0.004429, "loss_rpn_bbox_fpn5": 0.000066, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004084, "loss_rpn_cls_fpn3": 0.006845, "loss_rpn_cls_fpn4": 0.001461, "loss_rpn_cls_fpn5": 0.000311, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113908}
json_stats: {"eta": "2:38:28", "iter": 6480, "loss": 0.043545, "loss_rpn_bbox_fpn2": 0.004148, "loss_rpn_bbox_fpn3": 0.006293, "loss_rpn_bbox_fpn4": 0.007101, "loss_rpn_bbox_fpn5": 0.000949, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005639, "loss_rpn_cls_fpn3": 0.006469, "loss_rpn_cls_fpn4": 0.002664, "loss_rpn_cls_fpn5": 0.000371, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113845}
json_stats: {"eta": "2:38:21", "iter": 6500, "loss": 0.053940, "loss_rpn_bbox_fpn2": 0.005533, "loss_rpn_bbox_fpn3": 0.008170, "loss_rpn_bbox_fpn4": 0.003935, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008133, "loss_rpn_cls_fpn3": 0.006234, "loss_rpn_cls_fpn4": 0.005379, "loss_rpn_cls_fpn5": 0.000117, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113787}
json_stats: {"eta": "2:38:16", "iter": 6520, "loss": 0.037661, "loss_rpn_bbox_fpn2": 0.003766, "loss_rpn_bbox_fpn3": 0.006766, "loss_rpn_bbox_fpn4": 0.006201, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006532, "loss_rpn_cls_fpn3": 0.004009, "loss_rpn_cls_fpn4": 0.001269, "loss_rpn_cls_fpn5": 0.000049, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113759}
json_stats: {"eta": "2:38:11", "iter": 6540, "loss": 0.033547, "loss_rpn_bbox_fpn2": 0.002126, "loss_rpn_bbox_fpn3": 0.004491, "loss_rpn_bbox_fpn4": 0.005420, "loss_rpn_bbox_fpn5": 0.001652, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.003985, "loss_rpn_cls_fpn3": 0.005563, "loss_rpn_cls_fpn4": 0.002479, "loss_rpn_cls_fpn5": 0.000376, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113726}
json_stats: {"eta": "2:38:07", "iter": 6560, "loss": 0.036222, "loss_rpn_bbox_fpn2": 0.002708, "loss_rpn_bbox_fpn3": 0.007669, "loss_rpn_bbox_fpn4": 0.004795, "loss_rpn_bbox_fpn5": 0.000886, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004111, "loss_rpn_cls_fpn3": 0.004564, "loss_rpn_cls_fpn4": 0.003124, "loss_rpn_cls_fpn5": 0.000459, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113701}
json_stats: {"eta": "2:37:59", "iter": 6580, "loss": 0.038542, "loss_rpn_bbox_fpn2": 0.004822, "loss_rpn_bbox_fpn3": 0.004390, "loss_rpn_bbox_fpn4": 0.005762, "loss_rpn_bbox_fpn5": 0.001618, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005390, "loss_rpn_cls_fpn3": 0.003697, "loss_rpn_cls_fpn4": 0.001620, "loss_rpn_cls_fpn5": 0.000312, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113637}
json_stats: {"eta": "2:37:54", "iter": 6600, "loss": 0.048768, "loss_rpn_bbox_fpn2": 0.005561, "loss_rpn_bbox_fpn3": 0.008994, "loss_rpn_bbox_fpn4": 0.005175, "loss_rpn_bbox_fpn5": 0.001606, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006241, "loss_rpn_cls_fpn3": 0.005588, "loss_rpn_cls_fpn4": 0.002484, "loss_rpn_cls_fpn5": 0.000414, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113598}
json_stats: {"eta": "2:37:51", "iter": 6620, "loss": 0.055327, "loss_rpn_bbox_fpn2": 0.002868, "loss_rpn_bbox_fpn3": 0.008633, "loss_rpn_bbox_fpn4": 0.004264, "loss_rpn_bbox_fpn5": 0.000414, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005302, "loss_rpn_cls_fpn3": 0.006712, "loss_rpn_cls_fpn4": 0.001638, "loss_rpn_cls_fpn5": 0.000572, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113594}
json_stats: {"eta": "2:37:47", "iter": 6640, "loss": 0.032972, "loss_rpn_bbox_fpn2": 0.006013, "loss_rpn_bbox_fpn3": 0.006412, "loss_rpn_bbox_fpn4": 0.003002, "loss_rpn_bbox_fpn5": 0.000182, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.003406, "loss_rpn_cls_fpn3": 0.003694, "loss_rpn_cls_fpn4": 0.000534, "loss_rpn_cls_fpn5": 0.000055, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113578}
json_stats: {"eta": "2:37:43", "iter": 6660, "loss": 0.043646, "loss_rpn_bbox_fpn2": 0.004886, "loss_rpn_bbox_fpn3": 0.009301, "loss_rpn_bbox_fpn4": 0.003150, "loss_rpn_bbox_fpn5": 0.001557, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006778, "loss_rpn_cls_fpn3": 0.005182, "loss_rpn_cls_fpn4": 0.002248, "loss_rpn_cls_fpn5": 0.000207, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113551}
json_stats: {"eta": "2:37:39", "iter": 6680, "loss": 0.048643, "loss_rpn_bbox_fpn2": 0.004883, "loss_rpn_bbox_fpn3": 0.011665, "loss_rpn_bbox_fpn4": 0.006885, "loss_rpn_bbox_fpn5": 0.001260, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006128, "loss_rpn_cls_fpn3": 0.006085, "loss_rpn_cls_fpn4": 0.002086, "loss_rpn_cls_fpn5": 0.000159, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113531}
json_stats: {"eta": "2:37:32", "iter": 6700, "loss": 0.041061, "loss_rpn_bbox_fpn2": 0.003471, "loss_rpn_bbox_fpn3": 0.007668, "loss_rpn_bbox_fpn4": 0.007383, "loss_rpn_bbox_fpn5": 0.000210, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004122, "loss_rpn_cls_fpn3": 0.004761, "loss_rpn_cls_fpn4": 0.003669, "loss_rpn_cls_fpn5": 0.000120, "loss_rpn_cls_fpn6": 0.000003, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113476}
json_stats: {"eta": "2:37:29", "iter": 6720, "loss": 0.046862, "loss_rpn_bbox_fpn2": 0.004872, "loss_rpn_bbox_fpn3": 0.010469, "loss_rpn_bbox_fpn4": 0.007965, "loss_rpn_bbox_fpn5": 0.001020, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005408, "loss_rpn_cls_fpn3": 0.006510, "loss_rpn_cls_fpn4": 0.005337, "loss_rpn_cls_fpn5": 0.000382, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113464}
json_stats: {"eta": "2:37:24", "iter": 6740, "loss": 0.051378, "loss_rpn_bbox_fpn2": 0.005636, "loss_rpn_bbox_fpn3": 0.007006, "loss_rpn_bbox_fpn4": 0.009330, "loss_rpn_bbox_fpn5": 0.001014, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.003393, "loss_rpn_cls_fpn3": 0.004257, "loss_rpn_cls_fpn4": 0.004010, "loss_rpn_cls_fpn5": 0.000305, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113431}
json_stats: {"eta": "2:37:18", "iter": 6760, "loss": 0.052801, "loss_rpn_bbox_fpn2": 0.005141, "loss_rpn_bbox_fpn3": 0.008973, "loss_rpn_bbox_fpn4": 0.005676, "loss_rpn_bbox_fpn5": 0.000849, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.009106, "loss_rpn_cls_fpn3": 0.008249, "loss_rpn_cls_fpn4": 0.002777, "loss_rpn_cls_fpn5": 0.000205, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113390}
json_stats: {"eta": "2:37:13", "iter": 6780, "loss": 0.059964, "loss_rpn_bbox_fpn2": 0.005383, "loss_rpn_bbox_fpn3": 0.010030, "loss_rpn_bbox_fpn4": 0.003740, "loss_rpn_bbox_fpn5": 0.000024, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.011538, "loss_rpn_cls_fpn3": 0.007706, "loss_rpn_cls_fpn4": 0.002087, "loss_rpn_cls_fpn5": 0.000363, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113356}
json_stats: {"eta": "2:37:08", "iter": 6800, "loss": 0.042812, "loss_rpn_bbox_fpn2": 0.003883, "loss_rpn_bbox_fpn3": 0.009717, "loss_rpn_bbox_fpn4": 0.004166, "loss_rpn_bbox_fpn5": 0.000356, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006717, "loss_rpn_cls_fpn3": 0.007251, "loss_rpn_cls_fpn4": 0.002733, "loss_rpn_cls_fpn5": 0.000387, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113324}
json_stats: {"eta": "2:37:09", "iter": 6820, "loss": 0.046779, "loss_rpn_bbox_fpn2": 0.005158, "loss_rpn_bbox_fpn3": 0.006885, "loss_rpn_bbox_fpn4": 0.004681, "loss_rpn_bbox_fpn5": 0.001871, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006539, "loss_rpn_cls_fpn3": 0.005428, "loss_rpn_cls_fpn4": 0.002290, "loss_rpn_cls_fpn5": 0.000571, "loss_rpn_cls_fpn6": 0.000012, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113357}
json_stats: {"eta": "2:37:08", "iter": 6840, "loss": 0.038838, "loss_rpn_bbox_fpn2": 0.002248, "loss_rpn_bbox_fpn3": 0.005486, "loss_rpn_bbox_fpn4": 0.007827, "loss_rpn_bbox_fpn5": 0.002222, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004296, "loss_rpn_cls_fpn3": 0.004328, "loss_rpn_cls_fpn4": 0.002521, "loss_rpn_cls_fpn5": 0.000908, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113384}
json_stats: {"eta": "2:37:10", "iter": 6860, "loss": 0.046207, "loss_rpn_bbox_fpn2": 0.007223, "loss_rpn_bbox_fpn3": 0.008740, "loss_rpn_bbox_fpn4": 0.008599, "loss_rpn_bbox_fpn5": 0.000351, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005907, "loss_rpn_cls_fpn3": 0.006940, "loss_rpn_cls_fpn4": 0.002231, "loss_rpn_cls_fpn5": 0.001635, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113425}
json_stats: {"eta": "2:37:11", "iter": 6880, "loss": 0.045732, "loss_rpn_bbox_fpn2": 0.003021, "loss_rpn_bbox_fpn3": 0.007874, "loss_rpn_bbox_fpn4": 0.008060, "loss_rpn_bbox_fpn5": 0.001560, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004500, "loss_rpn_cls_fpn3": 0.005305, "loss_rpn_cls_fpn4": 0.005630, "loss_rpn_cls_fpn5": 0.001279, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113465}
json_stats: {"eta": "2:37:13", "iter": 6900, "loss": 0.048870, "loss_rpn_bbox_fpn2": 0.005974, "loss_rpn_bbox_fpn3": 0.007964, "loss_rpn_bbox_fpn4": 0.009103, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.003363, "loss_rpn_cls_fpn3": 0.008437, "loss_rpn_cls_fpn4": 0.003135, "loss_rpn_cls_fpn5": 0.000115, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113525}
json_stats: {"eta": "2:37:20", "iter": 6920, "loss": 0.052332, "loss_rpn_bbox_fpn2": 0.004606, "loss_rpn_bbox_fpn3": 0.010365, "loss_rpn_bbox_fpn4": 0.009910, "loss_rpn_bbox_fpn5": 0.000967, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004400, "loss_rpn_cls_fpn3": 0.004158, "loss_rpn_cls_fpn4": 0.003208, "loss_rpn_cls_fpn5": 0.000135, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113635}
json_stats: {"eta": "2:37:27", "iter": 6940, "loss": 0.053826, "loss_rpn_bbox_fpn2": 0.004720, "loss_rpn_bbox_fpn3": 0.006648, "loss_rpn_bbox_fpn4": 0.009617, "loss_rpn_bbox_fpn5": 0.002498, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005989, "loss_rpn_cls_fpn3": 0.006803, "loss_rpn_cls_fpn4": 0.007308, "loss_rpn_cls_fpn5": 0.001055, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113747}
json_stats: {"eta": "2:37:30", "iter": 6960, "loss": 0.049481, "loss_rpn_bbox_fpn2": 0.004546, "loss_rpn_bbox_fpn3": 0.010002, "loss_rpn_bbox_fpn4": 0.011102, "loss_rpn_bbox_fpn5": 0.001372, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.005188, "loss_rpn_cls_fpn3": 0.006959, "loss_rpn_cls_fpn4": 0.001902, "loss_rpn_cls_fpn5": 0.000761, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113811}
json_stats: {"eta": "2:37:34", "iter": 6980, "loss": 0.044705, "loss_rpn_bbox_fpn2": 0.003671, "loss_rpn_bbox_fpn3": 0.006063, "loss_rpn_bbox_fpn4": 0.008794, "loss_rpn_bbox_fpn5": 0.000759, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004504, "loss_rpn_cls_fpn3": 0.007858, "loss_rpn_cls_fpn4": 0.002028, "loss_rpn_cls_fpn5": 0.000091, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113887}
json_stats: {"eta": "2:37:40", "iter": 7000, "loss": 0.045708, "loss_rpn_bbox_fpn2": 0.003874, "loss_rpn_bbox_fpn3": 0.010111, "loss_rpn_bbox_fpn4": 0.006602, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006696, "loss_rpn_cls_fpn3": 0.004701, "loss_rpn_cls_fpn4": 0.003695, "loss_rpn_cls_fpn5": 0.000093, "loss_rpn_cls_fpn6": 0.000001, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.113982}
json_stats: {"eta": "2:37:41", "iter": 7020, "loss": 0.042295, "loss_rpn_bbox_fpn2": 0.004407, "loss_rpn_bbox_fpn3": 0.010035, "loss_rpn_bbox_fpn4": 0.004664, "loss_rpn_bbox_fpn5": 0.000235, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.004197, "loss_rpn_cls_fpn3": 0.004762, "loss_rpn_cls_fpn4": 0.002291, "loss_rpn_cls_fpn5": 0.000374, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114018}
json_stats: {"eta": "2:37:45", "iter": 7040, "loss": 0.044277, "loss_rpn_bbox_fpn2": 0.003710, "loss_rpn_bbox_fpn3": 0.008849, "loss_rpn_bbox_fpn4": 0.004340, "loss_rpn_bbox_fpn5": 0.000353, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.002978, "loss_rpn_cls_fpn3": 0.005412, "loss_rpn_cls_fpn4": 0.001080, "loss_rpn_cls_fpn5": 0.000131, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114092}
json_stats: {"eta": "2:37:47", "iter": 7060, "loss": 0.036059, "loss_rpn_bbox_fpn2": 0.003884, "loss_rpn_bbox_fpn3": 0.008593, "loss_rpn_bbox_fpn4": 0.004854, "loss_rpn_bbox_fpn5": 0.000460, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.003220, "loss_rpn_cls_fpn3": 0.003868, "loss_rpn_cls_fpn4": 0.001157, "loss_rpn_cls_fpn5": 0.000125, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114155}
json_stats: {"eta": "2:37:51", "iter": 7080, "loss": 0.043685, "loss_rpn_bbox_fpn2": 0.003678, "loss_rpn_bbox_fpn3": 0.006827, "loss_rpn_bbox_fpn4": 0.006919, "loss_rpn_bbox_fpn5": 0.001018, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006561, "loss_rpn_cls_fpn3": 0.003701, "loss_rpn_cls_fpn4": 0.001428, "loss_rpn_cls_fpn5": 0.000246, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114221}
json_stats: {"eta": "2:37:55", "iter": 7100, "loss": 0.042133, "loss_rpn_bbox_fpn2": 0.005071, "loss_rpn_bbox_fpn3": 0.006151, "loss_rpn_bbox_fpn4": 0.005789, "loss_rpn_bbox_fpn5": 0.002517, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006712, "loss_rpn_cls_fpn3": 0.004259, "loss_rpn_cls_fpn4": 0.002638, "loss_rpn_cls_fpn5": 0.000410, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114302}
json_stats: {"eta": "2:38:00", "iter": 7120, "loss": 0.039812, "loss_rpn_bbox_fpn2": 0.003934, "loss_rpn_bbox_fpn3": 0.010140, "loss_rpn_bbox_fpn4": 0.004856, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.003682, "loss_rpn_cls_fpn3": 0.007673, "loss_rpn_cls_fpn4": 0.002444, "loss_rpn_cls_fpn5": 0.000032, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114391}
json_stats: {"eta": "2:38:06", "iter": 7140, "loss": 0.040181, "loss_rpn_bbox_fpn2": 0.003447, "loss_rpn_bbox_fpn3": 0.006054, "loss_rpn_bbox_fpn4": 0.006287, "loss_rpn_bbox_fpn5": 0.001158, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.003967, "loss_rpn_cls_fpn3": 0.004690, "loss_rpn_cls_fpn4": 0.002273, "loss_rpn_cls_fpn5": 0.000528, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114483}
json_stats: {"eta": "2:38:09", "iter": 7160, "loss": 0.058539, "loss_rpn_bbox_fpn2": 0.005059, "loss_rpn_bbox_fpn3": 0.007629, "loss_rpn_bbox_fpn4": 0.012550, "loss_rpn_bbox_fpn5": 0.000701, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006372, "loss_rpn_cls_fpn3": 0.005035, "loss_rpn_cls_fpn4": 0.002152, "loss_rpn_cls_fpn5": 0.000456, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114553}
json_stats: {"eta": "2:38:16", "iter": 7180, "loss": 0.044879, "loss_rpn_bbox_fpn2": 0.007635, "loss_rpn_bbox_fpn3": 0.011022, "loss_rpn_bbox_fpn4": 0.003173, "loss_rpn_bbox_fpn5": 0.000794, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.010764, "loss_rpn_cls_fpn3": 0.003543, "loss_rpn_cls_fpn4": 0.002141, "loss_rpn_cls_fpn5": 0.000060, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114664}
json_stats: {"eta": "2:38:17", "iter": 7200, "loss": 0.052997, "loss_rpn_bbox_fpn2": 0.004501, "loss_rpn_bbox_fpn3": 0.013047, "loss_rpn_bbox_fpn4": 0.007192, "loss_rpn_bbox_fpn5": 0.000243, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.007900, "loss_rpn_cls_fpn3": 0.006646, "loss_rpn_cls_fpn4": 0.002083, "loss_rpn_cls_fpn5": 0.000383, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114698}
json_stats: {"eta": "2:38:23", "iter": 7220, "loss": 0.056056, "loss_rpn_bbox_fpn2": 0.004690, "loss_rpn_bbox_fpn3": 0.007737, "loss_rpn_bbox_fpn4": 0.007560, "loss_rpn_bbox_fpn5": 0.001023, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006448, "loss_rpn_cls_fpn3": 0.009894, "loss_rpn_cls_fpn4": 0.003490, "loss_rpn_cls_fpn5": 0.000753, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114799}
json_stats: {"eta": "2:38:23", "iter": 7240, "loss": 0.046408, "loss_rpn_bbox_fpn2": 0.004815, "loss_rpn_bbox_fpn3": 0.012831, "loss_rpn_bbox_fpn4": 0.005669, "loss_rpn_bbox_fpn5": 0.000000, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006236, "loss_rpn_cls_fpn3": 0.011890, "loss_rpn_cls_fpn4": 0.003160, "loss_rpn_cls_fpn5": 0.000010, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114836}
json_stats: {"eta": "2:38:23", "iter": 7260, "loss": 0.023391, "loss_rpn_bbox_fpn2": 0.003232, "loss_rpn_bbox_fpn3": 0.004864, "loss_rpn_bbox_fpn4": 0.003073, "loss_rpn_bbox_fpn5": 0.000046, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.002683, "loss_rpn_cls_fpn3": 0.004124, "loss_rpn_cls_fpn4": 0.000802, "loss_rpn_cls_fpn5": 0.000234, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114860}
json_stats: {"eta": "2:38:26", "iter": 7280, "loss": 0.051566, "loss_rpn_bbox_fpn2": 0.005934, "loss_rpn_bbox_fpn3": 0.007539, "loss_rpn_bbox_fpn4": 0.008120, "loss_rpn_bbox_fpn5": 0.000563, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.008212, "loss_rpn_cls_fpn3": 0.006483, "loss_rpn_cls_fpn4": 0.002870, "loss_rpn_cls_fpn5": 0.000333, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114928}
json_stats: {"eta": "2:38:29", "iter": 7300, "loss": 0.048994, "loss_rpn_bbox_fpn2": 0.003752, "loss_rpn_bbox_fpn3": 0.004309, "loss_rpn_bbox_fpn4": 0.006191, "loss_rpn_bbox_fpn5": 0.000946, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.006307, "loss_rpn_cls_fpn3": 0.007129, "loss_rpn_cls_fpn4": 0.002686, "loss_rpn_cls_fpn5": 0.000269, "loss_rpn_cls_fpn6": 0.000002, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.114986}
json_stats: {"eta": "2:38:28", "iter": 7320, "loss": 0.033494, "loss_rpn_bbox_fpn2": 0.002710, "loss_rpn_bbox_fpn3": 0.005238, "loss_rpn_bbox_fpn4": 0.003853, "loss_rpn_bbox_fpn5": 0.000414, "loss_rpn_bbox_fpn6": 0.000000, "loss_rpn_cls_fpn2": 0.003379, "loss_rpn_cls_fpn3": 0.004905, "loss_rpn_cls_fpn4": 0.001192, "loss_rpn_cls_fpn5": 0.000130, "loss_rpn_cls_fpn6": 0.000000, "lr": 0.003000, "mb_qsize": 64, "mem": 2775, "time": 0.115008}
INFO loader.py: 285: SIGINT: Shutting down RoIDataLoader threads and exiting...
INFO loader.py: 113: Stopping mini-batch loading thread
INFO loader.py: 113: Stopping mini-batch loading thread
INFO loader.py: 126: Stopping enqueue thread
INFO loader.py: 113: Stopping mini-batch loading thread
INFO loader.py: 113: Stopping mini-batch loading thread
Original python traceback for operator 0 in network `generalized_rcnn` in exception above (most recent call last):
  File "tools/train_net.py", line 281, in <module>
  File "tools/train_net.py", line 119, in main
  File "tools/train_net.py", line 128, in train_model
  File "tools/train_net.py", line 206, in create_model
  File "/home/swk/Documents/ML/Detectron/lib/modeling/model_builder.py", line 124, in create
  File "/home/swk/Documents/ML/Detectron/lib/modeling/model_builder.py", line 89, in generalized_rcnn
  File "/home/swk/Documents/ML/Detectron/lib/modeling/model_builder.py", line 229, in build_generic_detection_model
  File "/home/swk/Documents/ML/Detectron/lib/modeling/optimizer.py", line 40, in build_data_parallel_model
  File "/home/swk/Documents/ML/Detectron/lib/modeling/optimizer.py", line 63, in _build_forward_graph
  File "/home/swk/Documents/ML/Detectron/lib/modeling/model_builder.py", line 169, in _single_gpu_build_func
  File "/home/swk/Documents/ML/Detectron/lib/modeling/FPN.py", line 47, in add_fpn_ResNet50_conv5_body
  File "/home/swk/Documents/ML/Detectron/lib/modeling/FPN.py", line 103, in add_fpn_onto_conv_body
  File "/home/swk/Documents/ML/Detectron/lib/modeling/ResNet.py", line 38, in add_ResNet50_conv5_body
  File "/home/swk/Documents/ML/Detectron/lib/modeling/ResNet.py", line 94, in add_ResNet_convX_body
  File "/home/swk/Documents/ML/caffe2/build/caffe2/python/cnn.py", line 112, in Conv
  File "/home/swk/Documents/ML/caffe2/build/caffe2/python/brew.py", line 121, in scope_wrapper
  File "/home/swk/Documents/ML/caffe2/build/caffe2/python/helpers/conv.py", line 201, in conv
  File "/home/swk/Documents/ML/caffe2/build/caffe2/python/helpers/conv.py", line 154, in _ConvBase
